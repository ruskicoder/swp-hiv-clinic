@startuml
left to right direction

' Style settings for clarity
skinparam actorStyle awesome
skinparam packageStyle rectangle
skinparam usecase {
    BackgroundColor #F3E5F5
    BorderColor #4A148C
    ArrowColor #4A148C
}
skinparam actor {
    BackgroundColor #E1F5FE
    BorderColor #01579B
}
skinparam note {
    BackgroundColor #FFF9C4
    BorderColor #F57F17
}

' ====== ACTORS ======
actor "Unauthenticated User" as Guest
actor "Patient" as Patient
actor "Doctor" as Doctor
actor "Admin" as Admin
actor "Manager" as Manager

' Actor inheritance - authenticated users inherit from unauthenticated users
Patient --|> Guest
Doctor --|> Guest
Admin --|> Guest
Manager --|> Guest

package "HIV Clinic Management System" {

    package "Public Access" {
        usecase "UC-001: Browse Public Website" as UC_001
        usecase "UC-002: User Registration" as UC_002
        usecase "UC-003: User Login" as UC_003
    }

    package "Common Authenticated Features" {
        usecase "UC-004: User Logout" as UC_004
        usecase "UC-005: Update Profile" as UC_005
        usecase "UC-006: Change Password" as UC_006
    }

    package "Patient Services" {
        usecase "UC-007: View Patient Dashboard" as UC_007
        usecase "UC-008: Manage Appointments" as UC_008
        usecase "UC-009: Manage Personal Medical Records" as UC_009
        usecase "UC-010: View ARV Treatments" as UC_010
        usecase "UC-011: View Notifications" as UC_011
    }

    package "Doctor Services" {
        usecase "UC-012: View Doctor Dashboard" as UC_012
        usecase "UC-013: Manage Appointments" as UC_013
        usecase "UC-014: Manage Availability Slots" as UC_014
        usecase "UC-015: Access Patient Records" as UC_015
        usecase "UC-016: Manage ARV Treatments" as UC_016
        usecase "UC-017: Manage Patient Notifications" as UC_017
    }

    package "Admin Services" {
        usecase "UC-018: View Admin Dashboard" as UC_018
        usecase "UC-019: Manage Users" as UC_019
        usecase "UC-020: View All Appointments" as UC_020
    }

    package "Manager Services" {
        usecase "UC-021: View Manager Dashboard" as UC_021
        usecase "UC-022: View Statistics" as UC_022
        usecase "UC-023: Manage Patient Records" as UC_023
        usecase "UC-024: Manage Doctor Records" as UC_024
        usecase "UC-025: Manage ARV Treatments" as UC_025
        usecase "UC-026: Manage Schedules" as UC_026
        usecase "UC-027: Export Data (CSV)" as UC_027
    }
}

' ====== ACTOR-USE CASE RELATIONSHIPS ======

' --- Unauthenticated User (direct associations) ---
Guest --> UC_001
Guest --> UC_002
Guest --> UC_003

' --- Patient User (authenticated features only, inherits public access) ---
Patient --> UC_004
Patient --> UC_005
Patient --> UC_006
Patient --> UC_007
Patient --> UC_008
Patient --> UC_009
Patient --> UC_010
Patient --> UC_011

' --- Doctor User (authenticated features only, inherits public access) ---
Doctor --> UC_004
Doctor --> UC_005
Doctor --> UC_006
Doctor --> UC_012
Doctor --> UC_013
Doctor --> UC_014
Doctor --> UC_015
Doctor --> UC_016
Doctor --> UC_017

' --- Admin User (authenticated features only, inherits public access) ---
Admin --> UC_004
Admin --> UC_005
Admin --> UC_006
Admin --> UC_018
Admin --> UC_019
Admin --> UC_020

' --- Manager User (authenticated features only, inherits public access) ---
Manager --> UC_004
Manager --> UC_005
Manager --> UC_006
Manager --> UC_021
Manager --> UC_022
Manager --> UC_023
Manager --> UC_024
Manager --> UC_025
Manager --> UC_026
Manager --> UC_027

' ====== USE CASE RELATIONSHIPS ======

' Include relationships
UC_008 ..> UC_014 : <<include>>
UC_013 ..> UC_015 : <<include>>
UC_016 ..> UC_015 : <<include>>
UC_017 ..> UC_015 : <<include>>
UC_019 ..> UC_020 : <<include>>

' Extend relationships
UC_009 ..> UC_008 : <<extend>>
UC_011 ..> UC_007 : <<extend>>
UC_005 ..> UC_006 : <<extend>>

' Generalization relationships
UC_023 --|> UC_019
UC_024 --|> UC_019
UC_008 --|> UC_013
UC_009 --|> UC_015

note top of Guest
  Base actor - can register and login
  Can browse public HIV information
  All authenticated users inherit these capabilities
end note

note top of Patient
  Authenticated user who receives care
  Inherits all Guest capabilities plus:
  - Personal dashboard and appointments
  - Medical records management
  - Treatment and notification access
end note

note top of Doctor
  Medical professional with clinical access
  Inherits all Guest capabilities plus:
  - Professional dashboard
  - Patient care management
  - Treatment prescription and monitoring
end note

note top of Admin
  System administrator
  Inherits all Guest capabilities plus:
  - User and system management
  - Account creation and maintenance
  - System oversight capabilities
end note

note top of Manager
  Operational oversight role
  Inherits all Guest capabilities plus:
  - Analytics and reporting
  - Data export and search
  - Comprehensive record management
end note

@enduml