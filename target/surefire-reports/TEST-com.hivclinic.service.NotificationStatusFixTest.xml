<?xml version="1.0" encoding="UTF-8"?>
<testsuite xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="https://maven.apache.org/surefire/maven-surefire-plugin/xsd/surefire-test-report-3.0.xsd" version="3.0" name="com.hivclinic.service.NotificationStatusFixTest" time="0.493" tests="5" errors="0" skipped="0" failures="0">
  <properties>
    <property name="java.specification.version" value="17"/>
    <property name="sun.cpu.isalist" value="amd64"/>
    <property name="sun.jnu.encoding" value="Cp1252"/>
    <property name="java.class.path" value="C:\Program Files\Apache\Maven\apache-maven-3.9.9\boot\plexus-classworlds-2.8.0.jar"/>
    <property name="forkCount" value="0"/>
    <property name="java.vm.vendor" value="Oracle Corporation"/>
    <property name="sun.arch.data.model" value="64"/>
    <property name="user.variant" value=""/>
    <property name="java.vendor.url" value="https://java.oracle.com/"/>
    <property name="user.timezone" value="Asia/Saigon"/>
    <property name="org.jboss.logging.provider" value="slf4j"/>
    <property name="maven.conf" value="C:\Program Files\Apache\Maven\apache-maven-3.9.9/conf"/>
    <property name="java.vm.specification.version" value="17"/>
    <property name="os.name" value="Windows 11"/>
    <property name="sun.java.launcher" value="SUN_STANDARD"/>
    <property name="user.country" value="US"/>
    <property name="sun.boot.library.path" value="C:\Program Files\Java\jdk-17\bin"/>
    <property name="sun.java.command" value="org.codehaus.plexus.classworlds.launcher.Launcher test -DforkCount=0"/>
    <property name="jdk.debug" value="release"/>
    <property name="maven.home" value="C:\Program Files\Apache\Maven\apache-maven-3.9.9"/>
    <property name="surefire.test.class.path" value="C:\Users\PC\Github\swp-hiv-clinic\target\test-classes;C:\Users\PC\Github\swp-hiv-clinic\target\classes;C:\Users\PC\.m2\repository\org\springframework\boot\spring-boot-starter-web\3.2.0\spring-boot-starter-web-3.2.0.jar;C:\Users\PC\.m2\repository\org\springframework\boot\spring-boot-starter\3.2.0\spring-boot-starter-3.2.0.jar;C:\Users\PC\.m2\repository\org\springframework\boot\spring-boot\3.2.0\spring-boot-3.2.0.jar;C:\Users\PC\.m2\repository\org\springframework\boot\spring-boot-autoconfigure\3.2.0\spring-boot-autoconfigure-3.2.0.jar;C:\Users\PC\.m2\repository\org\springframework\boot\spring-boot-starter-logging\3.2.0\spring-boot-starter-logging-3.2.0.jar;C:\Users\PC\.m2\repository\ch\qos\logback\logback-classic\1.4.11\logback-classic-1.4.11.jar;C:\Users\PC\.m2\repository\ch\qos\logback\logback-core\1.4.11\logback-core-1.4.11.jar;C:\Users\PC\.m2\repository\org\apache\logging\log4j\log4j-to-slf4j\2.21.1\log4j-to-slf4j-2.21.1.jar;C:\Users\PC\.m2\repository\org\apache\logging\log4j\log4j-api\2.21.1\log4j-api-2.21.1.jar;C:\Users\PC\.m2\repository\org\slf4j\jul-to-slf4j\2.0.9\jul-to-slf4j-2.0.9.jar;C:\Users\PC\.m2\repository\jakarta\annotation\jakarta.annotation-api\2.1.1\jakarta.annotation-api-2.1.1.jar;C:\Users\PC\.m2\repository\org\yaml\snakeyaml\2.2\snakeyaml-2.2.jar;C:\Users\PC\.m2\repository\org\springframework\boot\spring-boot-starter-json\3.2.0\spring-boot-starter-json-3.2.0.jar;C:\Users\PC\.m2\repository\com\fasterxml\jackson\datatype\jackson-datatype-jdk8\2.15.3\jackson-datatype-jdk8-2.15.3.jar;C:\Users\PC\.m2\repository\com\fasterxml\jackson\datatype\jackson-datatype-jsr310\2.15.3\jackson-datatype-jsr310-2.15.3.jar;C:\Users\PC\.m2\repository\com\fasterxml\jackson\module\jackson-module-parameter-names\2.15.3\jackson-module-parameter-names-2.15.3.jar;C:\Users\PC\.m2\repository\org\springframework\boot\spring-boot-starter-tomcat\3.2.0\spring-boot-starter-tomcat-3.2.0.jar;C:\Users\PC\.m2\repository\org\apache\tomcat\embed\tomcat-embed-core\10.1.16\tomcat-embed-core-10.1.16.jar;C:\Users\PC\.m2\repository\org\apache\tomcat\embed\tomcat-embed-websocket\10.1.16\tomcat-embed-websocket-10.1.16.jar;C:\Users\PC\.m2\repository\org\springframework\spring-web\6.1.1\spring-web-6.1.1.jar;C:\Users\PC\.m2\repository\org\springframework\spring-beans\6.1.1\spring-beans-6.1.1.jar;C:\Users\PC\.m2\repository\io\micrometer\micrometer-observation\1.12.0\micrometer-observation-1.12.0.jar;C:\Users\PC\.m2\repository\io\micrometer\micrometer-commons\1.12.0\micrometer-commons-1.12.0.jar;C:\Users\PC\.m2\repository\org\springframework\spring-webmvc\6.1.1\spring-webmvc-6.1.1.jar;C:\Users\PC\.m2\repository\org\springframework\spring-context\6.1.1\spring-context-6.1.1.jar;C:\Users\PC\.m2\repository\org\springframework\spring-expression\6.1.1\spring-expression-6.1.1.jar;C:\Users\PC\.m2\repository\org\springframework\boot\spring-boot-starter-data-jpa\3.2.0\spring-boot-starter-data-jpa-3.2.0.jar;C:\Users\PC\.m2\repository\org\springframework\boot\spring-boot-starter-aop\3.2.0\spring-boot-starter-aop-3.2.0.jar;C:\Users\PC\.m2\repository\org\aspectj\aspectjweaver\1.9.20.1\aspectjweaver-1.9.20.1.jar;C:\Users\PC\.m2\repository\org\springframework\boot\spring-boot-starter-jdbc\3.2.0\spring-boot-starter-jdbc-3.2.0.jar;C:\Users\PC\.m2\repository\com\zaxxer\HikariCP\5.0.1\HikariCP-5.0.1.jar;C:\Users\PC\.m2\repository\org\springframework\spring-jdbc\6.1.1\spring-jdbc-6.1.1.jar;C:\Users\PC\.m2\repository\org\hibernate\orm\hibernate-core\6.3.1.Final\hibernate-core-6.3.1.Final.jar;C:\Users\PC\.m2\repository\jakarta\persistence\jakarta.persistence-api\3.1.0\jakarta.persistence-api-3.1.0.jar;C:\Users\PC\.m2\repository\org\jboss\logging\jboss-logging\3.5.3.Final\jboss-logging-3.5.3.Final.jar;C:\Users\PC\.m2\repository\org\hibernate\common\hibernate-commons-annotations\6.0.6.Final\hibernate-commons-annotations-6.0.6.Final.jar;C:\Users\PC\.m2\repository\io\smallrye\jandex\3.1.2\jandex-3.1.2.jar;C:\Users\PC\.m2\repository\com\fasterxml\classmate\1.6.0\classmate-1.6.0.jar;C:\Users\PC\.m2\repository\net\bytebuddy\byte-buddy\1.14.10\byte-buddy-1.14.10.jar;C:\Users\PC\.m2\repository\org\glassfish\jaxb\jaxb-runtime\4.0.4\jaxb-runtime-4.0.4.jar;C:\Users\PC\.m2\repository\org\glassfish\jaxb\jaxb-core\4.0.4\jaxb-core-4.0.4.jar;C:\Users\PC\.m2\repository\org\eclipse\angus\angus-activation\2.0.1\angus-activation-2.0.1.jar;C:\Users\PC\.m2\repository\org\glassfish\jaxb\txw2\4.0.4\txw2-4.0.4.jar;C:\Users\PC\.m2\repository\com\sun\istack\istack-commons-runtime\4.1.2\istack-commons-runtime-4.1.2.jar;C:\Users\PC\.m2\repository\jakarta\inject\jakarta.inject-api\2.0.1\jakarta.inject-api-2.0.1.jar;C:\Users\PC\.m2\repository\org\antlr\antlr4-runtime\4.10.1\antlr4-runtime-4.10.1.jar;C:\Users\PC\.m2\repository\org\springframework\data\spring-data-jpa\3.2.0\spring-data-jpa-3.2.0.jar;C:\Users\PC\.m2\repository\org\springframework\data\spring-data-commons\3.2.0\spring-data-commons-3.2.0.jar;C:\Users\PC\.m2\repository\org\springframework\spring-orm\6.1.1\spring-orm-6.1.1.jar;C:\Users\PC\.m2\repository\org\springframework\spring-tx\6.1.1\spring-tx-6.1.1.jar;C:\Users\PC\.m2\repository\org\slf4j\slf4j-api\2.0.9\slf4j-api-2.0.9.jar;C:\Users\PC\.m2\repository\org\springframework\spring-aspects\6.1.1\spring-aspects-6.1.1.jar;C:\Users\PC\.m2\repository\org\springframework\boot\spring-boot-starter-security\3.2.0\spring-boot-starter-security-3.2.0.jar;C:\Users\PC\.m2\repository\org\springframework\spring-aop\6.1.1\spring-aop-6.1.1.jar;C:\Users\PC\.m2\repository\org\springframework\security\spring-security-config\6.2.0\spring-security-config-6.2.0.jar;C:\Users\PC\.m2\repository\org\springframework\security\spring-security-web\6.2.0\spring-security-web-6.2.0.jar;C:\Users\PC\.m2\repository\org\springframework\boot\spring-boot-starter-validation\3.2.0\spring-boot-starter-validation-3.2.0.jar;C:\Users\PC\.m2\repository\org\apache\tomcat\embed\tomcat-embed-el\10.1.16\tomcat-embed-el-10.1.16.jar;C:\Users\PC\.m2\repository\org\hibernate\validator\hibernate-validator\8.0.1.Final\hibernate-validator-8.0.1.Final.jar;C:\Users\PC\.m2\repository\jakarta\validation\jakarta.validation-api\3.0.2\jakarta.validation-api-3.0.2.jar;C:\Users\PC\.m2\repository\com\microsoft\sqlserver\mssql-jdbc\12.4.2.jre11\mssql-jdbc-12.4.2.jre11.jar;C:\Users\PC\.m2\repository\com\fasterxml\jackson\datatype\jackson-datatype-hibernate6\2.15.3\jackson-datatype-hibernate6-2.15.3.jar;C:\Users\PC\.m2\repository\jakarta\transaction\jakarta.transaction-api\2.0.1\jakarta.transaction-api-2.0.1.jar;C:\Users\PC\.m2\repository\com\fasterxml\jackson\core\jackson-core\2.15.3\jackson-core-2.15.3.jar;C:\Users\PC\.m2\repository\com\fasterxml\jackson\core\jackson-databind\2.15.3\jackson-databind-2.15.3.jar;C:\Users\PC\.m2\repository\com\fasterxml\jackson\core\jackson-annotations\2.15.3\jackson-annotations-2.15.3.jar;C:\Users\PC\.m2\repository\io\jsonwebtoken\jjwt-api\0.11.5\jjwt-api-0.11.5.jar;C:\Users\PC\.m2\repository\io\jsonwebtoken\jjwt-impl\0.11.5\jjwt-impl-0.11.5.jar;C:\Users\PC\.m2\repository\io\jsonwebtoken\jjwt-jackson\0.11.5\jjwt-jackson-0.11.5.jar;C:\Users\PC\.m2\repository\org\projectlombok\lombok\1.18.30\lombok-1.18.30.jar;C:\Users\PC\.m2\repository\org\springframework\boot\spring-boot-starter-test\3.2.0\spring-boot-starter-test-3.2.0.jar;C:\Users\PC\.m2\repository\org\springframework\boot\spring-boot-test\3.2.0\spring-boot-test-3.2.0.jar;C:\Users\PC\.m2\repository\org\springframework\boot\spring-boot-test-autoconfigure\3.2.0\spring-boot-test-autoconfigure-3.2.0.jar;C:\Users\PC\.m2\repository\com\jayway\jsonpath\json-path\2.8.0\json-path-2.8.0.jar;C:\Users\PC\.m2\repository\jakarta\xml\bind\jakarta.xml.bind-api\4.0.1\jakarta.xml.bind-api-4.0.1.jar;C:\Users\PC\.m2\repository\jakarta\activation\jakarta.activation-api\2.1.2\jakarta.activation-api-2.1.2.jar;C:\Users\PC\.m2\repository\net\minidev\json-smart\2.5.0\json-smart-2.5.0.jar;C:\Users\PC\.m2\repository\net\minidev\accessors-smart\2.5.0\accessors-smart-2.5.0.jar;C:\Users\PC\.m2\repository\org\ow2\asm\asm\9.3\asm-9.3.jar;C:\Users\PC\.m2\repository\org\assertj\assertj-core\3.24.2\assertj-core-3.24.2.jar;C:\Users\PC\.m2\repository\org\awaitility\awaitility\4.2.0\awaitility-4.2.0.jar;C:\Users\PC\.m2\repository\org\hamcrest\hamcrest\2.2\hamcrest-2.2.jar;C:\Users\PC\.m2\repository\org\junit\jupiter\junit-jupiter\5.10.1\junit-jupiter-5.10.1.jar;C:\Users\PC\.m2\repository\org\junit\jupiter\junit-jupiter-api\5.10.1\junit-jupiter-api-5.10.1.jar;C:\Users\PC\.m2\repository\org\opentest4j\opentest4j\1.3.0\opentest4j-1.3.0.jar;C:\Users\PC\.m2\repository\org\junit\platform\junit-platform-commons\1.10.1\junit-platform-commons-1.10.1.jar;C:\Users\PC\.m2\repository\org\apiguardian\apiguardian-api\1.1.2\apiguardian-api-1.1.2.jar;C:\Users\PC\.m2\repository\org\junit\jupiter\junit-jupiter-params\5.10.1\junit-jupiter-params-5.10.1.jar;C:\Users\PC\.m2\repository\org\junit\jupiter\junit-jupiter-engine\5.10.1\junit-jupiter-engine-5.10.1.jar;C:\Users\PC\.m2\repository\org\junit\platform\junit-platform-engine\1.10.1\junit-platform-engine-1.10.1.jar;C:\Users\PC\.m2\repository\org\mockito\mockito-core\5.7.0\mockito-core-5.7.0.jar;C:\Users\PC\.m2\repository\net\bytebuddy\byte-buddy-agent\1.14.10\byte-buddy-agent-1.14.10.jar;C:\Users\PC\.m2\repository\org\objenesis\objenesis\3.3\objenesis-3.3.jar;C:\Users\PC\.m2\repository\org\mockito\mockito-junit-jupiter\5.7.0\mockito-junit-jupiter-5.7.0.jar;C:\Users\PC\.m2\repository\org\skyscreamer\jsonassert\1.5.1\jsonassert-1.5.1.jar;C:\Users\PC\.m2\repository\com\vaadin\external\google\android-json\0.0.20131108.vaadin1\android-json-0.0.20131108.vaadin1.jar;C:\Users\PC\.m2\repository\org\springframework\spring-core\6.1.1\spring-core-6.1.1.jar;C:\Users\PC\.m2\repository\org\springframework\spring-jcl\6.1.1\spring-jcl-6.1.1.jar;C:\Users\PC\.m2\repository\org\springframework\spring-test\6.1.1\spring-test-6.1.1.jar;C:\Users\PC\.m2\repository\org\xmlunit\xmlunit-core\2.9.1\xmlunit-core-2.9.1.jar;C:\Users\PC\.m2\repository\org\springframework\security\spring-security-test\6.2.0\spring-security-test-6.2.0.jar;C:\Users\PC\.m2\repository\org\springframework\security\spring-security-core\6.2.0\spring-security-core-6.2.0.jar;C:\Users\PC\.m2\repository\org\springframework\security\spring-security-crypto\6.2.0\spring-security-crypto-6.2.0.jar;"/>
    <property name="sun.cpu.endian" value="little"/>
    <property name="user.home" value="C:\Users\PC"/>
    <property name="user.language" value="en"/>
    <property name="sun.stderr.encoding" value="cp437"/>
    <property name="java.specification.vendor" value="Oracle Corporation"/>
    <property name="java.version.date" value="2024-07-16"/>
    <property name="java.home" value="C:\Program Files\Java\jdk-17"/>
    <property name="file.separator" value="\"/>
    <property name="basedir" value="C:\Users\PC\Github\swp-hiv-clinic"/>
    <property name="java.vm.compressedOopsMode" value="32-bit"/>
    <property name="line.separator" value="&#10;"/>
    <property name="sun.stdout.encoding" value="cp437"/>
    <property name="java.vm.specification.vendor" value="Oracle Corporation"/>
    <property name="java.specification.name" value="Java Platform API Specification"/>
    <property name="FILE_LOG_CHARSET" value="windows-1252"/>
    <property name="java.awt.headless" value="true"/>
    <property name="user.script" value=""/>
    <property name="sun.management.compiler" value="HotSpot 64-Bit Tiered Compilers"/>
    <property name="java.runtime.version" value="17.0.12+8-LTS-286"/>
    <property name="user.name" value="PC"/>
    <property name="path.separator" value=";"/>
    <property name="os.version" value="10.0"/>
    <property name="java.runtime.name" value="Java(TM) SE Runtime Environment"/>
    <property name="file.encoding" value="Cp1252"/>
    <property name="guice.disable.misplaced.annotation.check" value="true"/>
    <property name="java.vm.name" value="Java HotSpot(TM) 64-Bit Server VM"/>
    <property name="localRepository" value="C:\Users\PC\.m2\repository"/>
    <property name="java.vendor.url.bug" value="https://bugreport.java.com/bugreport/"/>
    <property name="java.io.tmpdir" value="C:\Users\PC\AppData\Local\Temp\"/>
    <property name="com.zaxxer.hikari.pool_number" value="1"/>
    <property name="java.version" value="17.0.12"/>
    <property name="user.dir" value="C:\Users\PC\Github\swp-hiv-clinic"/>
    <property name="os.arch" value="amd64"/>
    <property name="maven.multiModuleProjectDirectory" value="C:\Users\PC\Github\swp-hiv-clinic"/>
    <property name="java.vm.specification.name" value="Java Virtual Machine Specification"/>
    <property name="PID" value="5468"/>
    <property name="sun.os.patch.level" value=""/>
    <property name="CONSOLE_LOG_CHARSET" value="windows-1252"/>
    <property name="native.encoding" value="Cp1252"/>
    <property name="java.library.path" value="C:\Program Files\Java\jdk-17\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\Program Files\Common Files\Oracle\Java\javapath;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;C:\Program Files (x86)\Microsoft SQL Server\160\Tools\Binn\;C:\Program Files\Microsoft SQL Server\160\Tools\Binn\;C:\Program Files\Microsoft SQL Server\Client SDK\ODBC\170\Tools\Binn\;C:\Program Files\Microsoft SQL Server\160\DTS\Binn\;C:\Program Files (x86)\Microsoft SQL Server\160\DTS\Binn\;C:\Program Files\Java\jdk1.8.0_172\bin;D:\Tuan\TaiLieuHocTap2\Program\Git\cmd;D:\Tuan\TaiLieuHocTap2\Program\NodeJS\;C:\Program Files\Java\jdk-17\bin;C:\Program Files\Apache\Maven\apache-maven-3.9.9\bin;C:\Program Files\Apache\Maven\apache-maven-3.9.9\bin;C:\Program Files\Cloudflare\Cloudflare WARP\;C:\Users\PC\AppData\Local\Programs\Python\Launcher\;C:\Users\PC\AppData\Local\Microsoft\WindowsApps;D:\Tuan\TaiLieuHocTap2\Program\VSCode\Microsoft VS Code\bin;C:\Users\PC\AppData\Local\GitHubDesktop\bin;C:\Users\PC\AppData\Roaming\npm;;D:\Tuan\TaiLieuHocTap2\Program\IntelliJ IDEA 2025.1.1.1\bin;;D:\Tuan\TaiLieuHocTap2\Program\IntelliJ IDEA Community Edition 2025.1.1.1\bin;;c:\Users\PC\AppData\Roaming\Code\User\globalStorage\github.copilot-chat\debugCommand;."/>
    <property name="java.vm.info" value="mixed mode, sharing"/>
    <property name="java.vendor" value="Oracle Corporation"/>
    <property name="java.vm.version" value="17.0.12+8-LTS-286"/>
    <property name="classworlds.conf" value="C:\Program Files\Apache\Maven\apache-maven-3.9.9\bin\m2.conf"/>
    <property name="sun.io.unicode.encoding" value="UnicodeLittle"/>
    <property name="library.jansi.path" value="C:\Program Files\Apache\Maven\apache-maven-3.9.9\lib\jansi-native"/>
    <property name="java.class.version" value="61.0"/>
    <property name="LOGGED_APPLICATION_NAME" value="[HIV Clinic Backend] "/>
  </properties>
  <testcase name="testDtoMappingIncludesStatus" classname="com.hivclinic.service.NotificationStatusFixTest" time="0.063">
    <system-out><![CDATA[2025-07-10T16:38:19.480+07:00  INFO 5468 --- [HIV Clinic Backend] [           main] t.c.s.AnnotationConfigContextLoaderUtils : Could not detect default configuration classes for test class [com.hivclinic.service.NotificationStatusFixTest]: NotificationStatusFixTest does not declare any static, non-private, non-final, nested classes annotated with @Configuration.
2025-07-10T16:38:19.524+07:00  INFO 5468 --- [HIV Clinic Backend] [           main] .b.t.c.SpringBootTestContextBootstrapper : Found @SpringBootConfiguration com.hivclinic.HivClinicBackendApplication for test class com.hivclinic.service.NotificationStatusFixTest
2025-07-10T16:38:19.546+07:00 DEBUG 5468 --- [HIV Clinic Backend] [           main] org.hibernate.SQL                        : 
    select
        n1_0.notificationId,
        n1_0.CreatedAt,
        n1_0.IsRead,
        n1_0.Message,
        n1_0.Priority,
        n1_0.RelatedEntityID,
        n1_0.RelatedEntityType,
        n1_0.ScheduledFor,
        n1_0.SentAt,
        n1_0.status,
        n1_0.Title,
        n1_0.Type,
        n1_0.UpdatedAt,
        n1_0.UserID 
    from
        Notifications n1_0
Hibernate: 
    select
        n1_0.notificationId,
        n1_0.CreatedAt,
        n1_0.IsRead,
        n1_0.Message,
        n1_0.Priority,
        n1_0.RelatedEntityID,
        n1_0.RelatedEntityType,
        n1_0.ScheduledFor,
        n1_0.SentAt,
        n1_0.status,
        n1_0.Title,
        n1_0.Type,
        n1_0.UpdatedAt,
        n1_0.UserID 
    from
        Notifications n1_0
2025-07-10T16:38:19.559+07:00 DEBUG 5468 --- [HIV Clinic Backend] [           main] org.hibernate.SQL                        : 
    insert 
    into
        Notifications
        (CreatedAt, IsRead, Message, Priority, RelatedEntityID, RelatedEntityType, ScheduledFor, SentAt, status, Title, Type, UpdatedAt, UserID) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        Notifications
        (CreatedAt, IsRead, Message, Priority, RelatedEntityID, RelatedEntityType, ScheduledFor, SentAt, status, Title, Type, UpdatedAt, UserID) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
DEBUG: NotificationService.markAsRead called with notificationId=2, userId=1
DEBUG: Found notification with ID=2, userId=1, isRead=false, status=SENT, title=Appointment Reminder
DEBUG: Setting notification as read - updating both isRead and status fields
2025-07-10T16:38:19.576+07:00 DEBUG 5468 --- [HIV Clinic Backend] [           main] org.hibernate.SQL                        : 
    update
        Notifications 
    set
        CreatedAt=?,
        IsRead=?,
        Message=?,
        Priority=?,
        RelatedEntityID=?,
        RelatedEntityType=?,
        ScheduledFor=?,
        SentAt=?,
        status=?,
        Title=?,
        Type=?,
        UpdatedAt=?,
        UserID=? 
    where
        notificationId=?
Hibernate: 
    update
        Notifications 
    set
        CreatedAt=?,
        IsRead=?,
        Message=?,
        Priority=?,
        RelatedEntityID=?,
        RelatedEntityType=?,
        ScheduledFor=?,
        SentAt=?,
        status=?,
        Title=?,
        Type=?,
        UpdatedAt=?,
        UserID=? 
    where
        notificationId=?
2025-07-10T16:38:19.590+07:00 DEBUG 5468 --- [HIV Clinic Backend] [           main] org.hibernate.SQL                        : 
    delete 
    from
        Notifications 
    where
        notificationId=?
Hibernate: 
    delete 
    from
        Notifications 
    where
        notificationId=?
DEBUG: Saved and flushed notification with isRead=true, status=READ
DEBUG: Successfully created DTO with isRead=true, status=READ
]]></system-out>
  </testcase>
  <testcase name="testUnreadNotificationsQuery" classname="com.hivclinic.service.NotificationStatusFixTest" time="0.168">
    <system-out><![CDATA[2025-07-10T16:38:19.612+07:00 DEBUG 5468 --- [HIV Clinic Backend] [           main] org.hibernate.SQL                        : 
    select
        n1_0.notificationId,
        n1_0.CreatedAt,
        n1_0.IsRead,
        n1_0.Message,
        n1_0.Priority,
        n1_0.RelatedEntityID,
        n1_0.RelatedEntityType,
        n1_0.ScheduledFor,
        n1_0.SentAt,
        n1_0.status,
        n1_0.Title,
        n1_0.Type,
        n1_0.UpdatedAt,
        n1_0.UserID 
    from
        Notifications n1_0
Hibernate: 
    select
        n1_0.notificationId,
        n1_0.CreatedAt,
        n1_0.IsRead,
        n1_0.Message,
        n1_0.Priority,
        n1_0.RelatedEntityID,
        n1_0.RelatedEntityType,
        n1_0.ScheduledFor,
        n1_0.SentAt,
        n1_0.status,
        n1_0.Title,
        n1_0.Type,
        n1_0.UpdatedAt,
        n1_0.UserID 
    from
        Notifications n1_0
2025-07-10T16:38:19.626+07:00 DEBUG 5468 --- [HIV Clinic Backend] [           main] org.hibernate.SQL                        : 
    insert 
    into
        Notifications
        (CreatedAt, IsRead, Message, Priority, RelatedEntityID, RelatedEntityType, ScheduledFor, SentAt, status, Title, Type, UpdatedAt, UserID) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        Notifications
        (CreatedAt, IsRead, Message, Priority, RelatedEntityID, RelatedEntityType, ScheduledFor, SentAt, status, Title, Type, UpdatedAt, UserID) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2025-07-10T16:38:19.641+07:00 DEBUG 5468 --- [HIV Clinic Backend] [           main] org.hibernate.SQL                        : 
    insert 
    into
        Notifications
        (CreatedAt, IsRead, Message, Priority, RelatedEntityID, RelatedEntityType, ScheduledFor, SentAt, status, Title, Type, UpdatedAt, UserID) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        Notifications
        (CreatedAt, IsRead, Message, Priority, RelatedEntityID, RelatedEntityType, ScheduledFor, SentAt, status, Title, Type, UpdatedAt, UserID) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
DEBUG: NotificationService.markAsRead called with notificationId=3, userId=1
DEBUG: Found notification with ID=3, userId=1, isRead=false, status=SENT, title=Appointment Reminder
DEBUG: Setting notification as read - updating both isRead and status fields
2025-07-10T16:38:19.646+07:00 DEBUG 5468 --- [HIV Clinic Backend] [           main] org.hibernate.SQL                        : 
    update
        Notifications 
    set
        CreatedAt=?,
        IsRead=?,
        Message=?,
        Priority=?,
        RelatedEntityID=?,
        RelatedEntityType=?,
        ScheduledFor=?,
        SentAt=?,
        status=?,
        Title=?,
        Type=?,
        UpdatedAt=?,
        UserID=? 
    where
        notificationId=?
Hibernate: 
    update
        Notifications 
    set
        CreatedAt=?,
        IsRead=?,
        Message=?,
        Priority=?,
        RelatedEntityID=?,
        RelatedEntityType=?,
        ScheduledFor=?,
        SentAt=?,
        status=?,
        Title=?,
        Type=?,
        UpdatedAt=?,
        UserID=? 
    where
        notificationId=?
2025-07-10T16:38:19.664+07:00 DEBUG 5468 --- [HIV Clinic Backend] [           main] org.hibernate.SQL                        : 
    delete 
    from
        Notifications 
    where
        notificationId=?
Hibernate: 
    delete 
    from
        Notifications 
    where
        notificationId=?
DEBUG: Saved and flushed notification with isRead=true, status=READ
DEBUG: Successfully created DTO with isRead=true, status=READ
2025-07-10T16:38:19.709+07:00 DEBUG 5468 --- [HIV Clinic Backend] [           main] org.hibernate.SQL                        : 
    select
        n1_0.notificationId,
        n1_0.CreatedAt,
        n1_0.IsRead,
        n1_0.Message,
        n1_0.Priority,
        n1_0.RelatedEntityID,
        n1_0.RelatedEntityType,
        n1_0.ScheduledFor,
        n1_0.SentAt,
        n1_0.status,
        n1_0.Title,
        n1_0.Type,
        n1_0.UpdatedAt,
        n1_0.UserID 
    from
        Notifications n1_0 
    where
        n1_0.UserID=? 
        and n1_0.IsRead=?
Hibernate: 
    select
        n1_0.notificationId,
        n1_0.CreatedAt,
        n1_0.IsRead,
        n1_0.Message,
        n1_0.Priority,
        n1_0.RelatedEntityID,
        n1_0.RelatedEntityType,
        n1_0.ScheduledFor,
        n1_0.SentAt,
        n1_0.status,
        n1_0.Title,
        n1_0.Type,
        n1_0.UpdatedAt,
        n1_0.UserID 
    from
        Notifications n1_0 
    where
        n1_0.UserID=? 
        and n1_0.IsRead=?
DEBUG: Found 1 total unread notifications for user 1
2025-07-10T16:38:19.738+07:00 DEBUG 5468 --- [HIV Clinic Backend] [           main] org.hibernate.SQL                        : 
    select
        n1_0.notificationId,
        n1_0.CreatedAt,
        n1_0.IsRead,
        n1_0.Message,
        n1_0.Priority,
        n1_0.RelatedEntityID,
        n1_0.RelatedEntityType,
        n1_0.ScheduledFor,
        n1_0.SentAt,
        n1_0.status,
        n1_0.Title,
        n1_0.Type,
        n1_0.UpdatedAt,
        n1_0.UserID 
    from
        Notifications n1_0 
    where
        n1_0.UserID=? 
        and n1_0.IsRead=? 
        and n1_0.status!='CANCELLED'
Hibernate: 
    select
        n1_0.notificationId,
        n1_0.CreatedAt,
        n1_0.IsRead,
        n1_0.Message,
        n1_0.Priority,
        n1_0.RelatedEntityID,
        n1_0.RelatedEntityType,
        n1_0.ScheduledFor,
        n1_0.SentAt,
        n1_0.status,
        n1_0.Title,
        n1_0.Type,
        n1_0.UpdatedAt,
        n1_0.UserID 
    from
        Notifications n1_0 
    where
        n1_0.UserID=? 
        and n1_0.IsRead=? 
        and n1_0.status!='CANCELLED'
DEBUG: Filtered out 0 cancelled unread notifications for patient visibility
DEBUG: Returning 1 visible unread notifications (filtered out 0 cancelled notifications)
2025-07-10T16:38:19.750+07:00 DEBUG 5468 --- [HIV Clinic Backend] [           main] org.hibernate.SQL                        : 
    select
        n1_0.notificationId,
        n1_0.CreatedAt,
        n1_0.IsRead,
        n1_0.Message,
        n1_0.Priority,
        n1_0.RelatedEntityID,
        n1_0.RelatedEntityType,
        n1_0.ScheduledFor,
        n1_0.SentAt,
        n1_0.status,
        n1_0.Title,
        n1_0.Type,
        n1_0.UpdatedAt,
        n1_0.UserID 
    from
        Notifications n1_0 
    where
        n1_0.UserID=? 
        and n1_0.IsRead=? 
        and n1_0.status!='CANCELLED'
Hibernate: 
    select
        n1_0.notificationId,
        n1_0.CreatedAt,
        n1_0.IsRead,
        n1_0.Message,
        n1_0.Priority,
        n1_0.RelatedEntityID,
        n1_0.RelatedEntityType,
        n1_0.ScheduledFor,
        n1_0.SentAt,
        n1_0.status,
        n1_0.Title,
        n1_0.Type,
        n1_0.UpdatedAt,
        n1_0.UserID 
    from
        Notifications n1_0 
    where
        n1_0.UserID=? 
        and n1_0.IsRead=? 
        and n1_0.status!='CANCELLED'
2025-07-10T16:38:19.754+07:00 DEBUG 5468 --- [HIV Clinic Backend] [           main] org.hibernate.SQL                        : 
    select
        n1_0.notificationId,
        n1_0.CreatedAt,
        n1_0.IsRead,
        n1_0.Message,
        n1_0.Priority,
        n1_0.RelatedEntityID,
        n1_0.RelatedEntityType,
        n1_0.ScheduledFor,
        n1_0.SentAt,
        n1_0.status,
        n1_0.Title,
        n1_0.Type,
        n1_0.UpdatedAt,
        n1_0.UserID 
    from
        Notifications n1_0 
    where
        n1_0.UserID=? 
        and n1_0.IsRead=?
Hibernate: 
    select
        n1_0.notificationId,
        n1_0.CreatedAt,
        n1_0.IsRead,
        n1_0.Message,
        n1_0.Priority,
        n1_0.RelatedEntityID,
        n1_0.RelatedEntityType,
        n1_0.ScheduledFor,
        n1_0.SentAt,
        n1_0.status,
        n1_0.Title,
        n1_0.Type,
        n1_0.UpdatedAt,
        n1_0.UserID 
    from
        Notifications n1_0 
    where
        n1_0.UserID=? 
        and n1_0.IsRead=?
DEBUG: Unread count for user 1: 1 (filtered out 0 cancelled)
]]></system-out>
  </testcase>
  <testcase name="testCreateNotificationSetsCorrectStatus" classname="com.hivclinic.service.NotificationStatusFixTest" time="0.03">
    <system-out><![CDATA[2025-07-10T16:38:19.783+07:00 DEBUG 5468 --- [HIV Clinic Backend] [           main] org.hibernate.SQL                        : 
    select
        n1_0.notificationId,
        n1_0.CreatedAt,
        n1_0.IsRead,
        n1_0.Message,
        n1_0.Priority,
        n1_0.RelatedEntityID,
        n1_0.RelatedEntityType,
        n1_0.ScheduledFor,
        n1_0.SentAt,
        n1_0.status,
        n1_0.Title,
        n1_0.Type,
        n1_0.UpdatedAt,
        n1_0.UserID 
    from
        Notifications n1_0
Hibernate: 
    select
        n1_0.notificationId,
        n1_0.CreatedAt,
        n1_0.IsRead,
        n1_0.Message,
        n1_0.Priority,
        n1_0.RelatedEntityID,
        n1_0.RelatedEntityType,
        n1_0.ScheduledFor,
        n1_0.SentAt,
        n1_0.status,
        n1_0.Title,
        n1_0.Type,
        n1_0.UpdatedAt,
        n1_0.UserID 
    from
        Notifications n1_0
2025-07-10T16:38:19.793+07:00 DEBUG 5468 --- [HIV Clinic Backend] [           main] org.hibernate.SQL                        : 
    insert 
    into
        Notifications
        (CreatedAt, IsRead, Message, Priority, RelatedEntityID, RelatedEntityType, ScheduledFor, SentAt, status, Title, Type, UpdatedAt, UserID) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        Notifications
        (CreatedAt, IsRead, Message, Priority, RelatedEntityID, RelatedEntityType, ScheduledFor, SentAt, status, Title, Type, UpdatedAt, UserID) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2025-07-10T16:38:19.803+07:00 DEBUG 5468 --- [HIV Clinic Backend] [           main] org.hibernate.SQL                        : 
    insert 
    into
        Notifications
        (CreatedAt, IsRead, Message, Priority, RelatedEntityID, RelatedEntityType, ScheduledFor, SentAt, status, Title, Type, UpdatedAt, UserID) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        Notifications
        (CreatedAt, IsRead, Message, Priority, RelatedEntityID, RelatedEntityType, ScheduledFor, SentAt, status, Title, Type, UpdatedAt, UserID) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2025-07-10T16:38:19.806+07:00 DEBUG 5468 --- [HIV Clinic Backend] [           main] org.hibernate.SQL                        : 
    insert 
    into
        Notifications
        (CreatedAt, IsRead, Message, Priority, RelatedEntityID, RelatedEntityType, ScheduledFor, SentAt, status, Title, Type, UpdatedAt, UserID) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        Notifications
        (CreatedAt, IsRead, Message, Priority, RelatedEntityID, RelatedEntityType, ScheduledFor, SentAt, status, Title, Type, UpdatedAt, UserID) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
]]></system-out>
  </testcase>
  <testcase name="testMarkAsReadUpdatesBothFields" classname="com.hivclinic.service.NotificationStatusFixTest" time="0.046">
    <system-out><![CDATA[2025-07-10T16:38:19.822+07:00 DEBUG 5468 --- [HIV Clinic Backend] [           main] org.hibernate.SQL                        : 
    select
        n1_0.notificationId,
        n1_0.CreatedAt,
        n1_0.IsRead,
        n1_0.Message,
        n1_0.Priority,
        n1_0.RelatedEntityID,
        n1_0.RelatedEntityType,
        n1_0.ScheduledFor,
        n1_0.SentAt,
        n1_0.status,
        n1_0.Title,
        n1_0.Type,
        n1_0.UpdatedAt,
        n1_0.UserID 
    from
        Notifications n1_0
Hibernate: 
    select
        n1_0.notificationId,
        n1_0.CreatedAt,
        n1_0.IsRead,
        n1_0.Message,
        n1_0.Priority,
        n1_0.RelatedEntityID,
        n1_0.RelatedEntityType,
        n1_0.ScheduledFor,
        n1_0.SentAt,
        n1_0.status,
        n1_0.Title,
        n1_0.Type,
        n1_0.UpdatedAt,
        n1_0.UserID 
    from
        Notifications n1_0
2025-07-10T16:38:19.826+07:00 DEBUG 5468 --- [HIV Clinic Backend] [           main] org.hibernate.SQL                        : 
    insert 
    into
        Notifications
        (CreatedAt, IsRead, Message, Priority, RelatedEntityID, RelatedEntityType, ScheduledFor, SentAt, status, Title, Type, UpdatedAt, UserID) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        Notifications
        (CreatedAt, IsRead, Message, Priority, RelatedEntityID, RelatedEntityType, ScheduledFor, SentAt, status, Title, Type, UpdatedAt, UserID) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
DEBUG: NotificationService.markAsRead called with notificationId=8, userId=1
DEBUG: Found notification with ID=8, userId=1, isRead=false, status=SENT, title=Appointment Reminder
DEBUG: Setting notification as read - updating both isRead and status fields
2025-07-10T16:38:19.833+07:00 DEBUG 5468 --- [HIV Clinic Backend] [           main] org.hibernate.SQL                        : 
    update
        Notifications 
    set
        CreatedAt=?,
        IsRead=?,
        Message=?,
        Priority=?,
        RelatedEntityID=?,
        RelatedEntityType=?,
        ScheduledFor=?,
        SentAt=?,
        status=?,
        Title=?,
        Type=?,
        UpdatedAt=?,
        UserID=? 
    where
        notificationId=?
Hibernate: 
    update
        Notifications 
    set
        CreatedAt=?,
        IsRead=?,
        Message=?,
        Priority=?,
        RelatedEntityID=?,
        RelatedEntityType=?,
        ScheduledFor=?,
        SentAt=?,
        status=?,
        Title=?,
        Type=?,
        UpdatedAt=?,
        UserID=? 
    where
        notificationId=?
2025-07-10T16:38:19.843+07:00 DEBUG 5468 --- [HIV Clinic Backend] [           main] org.hibernate.SQL                        : 
    delete 
    from
        Notifications 
    where
        notificationId=?
Hibernate: 
    delete 
    from
        Notifications 
    where
        notificationId=?
DEBUG: Saved and flushed notification with isRead=true, status=READ
DEBUG: Successfully created DTO with isRead=true, status=READ
]]></system-out>
  </testcase>
  <testcase name="testMarkAllAsReadUpdatesBothFields" classname="com.hivclinic.service.NotificationStatusFixTest" time="0.114">
    <system-out><![CDATA[2025-07-10T16:38:19.859+07:00 DEBUG 5468 --- [HIV Clinic Backend] [           main] org.hibernate.SQL                        : 
    select
        n1_0.notificationId,
        n1_0.CreatedAt,
        n1_0.IsRead,
        n1_0.Message,
        n1_0.Priority,
        n1_0.RelatedEntityID,
        n1_0.RelatedEntityType,
        n1_0.ScheduledFor,
        n1_0.SentAt,
        n1_0.status,
        n1_0.Title,
        n1_0.Type,
        n1_0.UpdatedAt,
        n1_0.UserID 
    from
        Notifications n1_0
Hibernate: 
    select
        n1_0.notificationId,
        n1_0.CreatedAt,
        n1_0.IsRead,
        n1_0.Message,
        n1_0.Priority,
        n1_0.RelatedEntityID,
        n1_0.RelatedEntityType,
        n1_0.ScheduledFor,
        n1_0.SentAt,
        n1_0.status,
        n1_0.Title,
        n1_0.Type,
        n1_0.UpdatedAt,
        n1_0.UserID 
    from
        Notifications n1_0
2025-07-10T16:38:19.865+07:00 DEBUG 5468 --- [HIV Clinic Backend] [           main] org.hibernate.SQL                        : 
    insert 
    into
        Notifications
        (CreatedAt, IsRead, Message, Priority, RelatedEntityID, RelatedEntityType, ScheduledFor, SentAt, status, Title, Type, UpdatedAt, UserID) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        Notifications
        (CreatedAt, IsRead, Message, Priority, RelatedEntityID, RelatedEntityType, ScheduledFor, SentAt, status, Title, Type, UpdatedAt, UserID) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2025-07-10T16:38:19.871+07:00 DEBUG 5468 --- [HIV Clinic Backend] [           main] org.hibernate.SQL                        : 
    insert 
    into
        Notifications
        (CreatedAt, IsRead, Message, Priority, RelatedEntityID, RelatedEntityType, ScheduledFor, SentAt, status, Title, Type, UpdatedAt, UserID) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        Notifications
        (CreatedAt, IsRead, Message, Priority, RelatedEntityID, RelatedEntityType, ScheduledFor, SentAt, status, Title, Type, UpdatedAt, UserID) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2025-07-10T16:38:19.874+07:00 DEBUG 5468 --- [HIV Clinic Backend] [           main] org.hibernate.SQL                        : 
    insert 
    into
        Notifications
        (CreatedAt, IsRead, Message, Priority, RelatedEntityID, RelatedEntityType, ScheduledFor, SentAt, status, Title, Type, UpdatedAt, UserID) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        Notifications
        (CreatedAt, IsRead, Message, Priority, RelatedEntityID, RelatedEntityType, ScheduledFor, SentAt, status, Title, Type, UpdatedAt, UserID) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
DEBUG: NotificationService.markAllAsRead called for userId=1
2025-07-10T16:38:19.881+07:00 DEBUG 5468 --- [HIV Clinic Backend] [           main] org.hibernate.SQL                        : 
    delete 
    from
        Notifications 
    where
        notificationId=?
Hibernate: 
    delete 
    from
        Notifications 
    where
        notificationId=?
2025-07-10T16:38:19.888+07:00 DEBUG 5468 --- [HIV Clinic Backend] [           main] org.hibernate.SQL                        : 
    select
        n1_0.notificationId,
        n1_0.CreatedAt,
        n1_0.IsRead,
        n1_0.Message,
        n1_0.Priority,
        n1_0.RelatedEntityID,
        n1_0.RelatedEntityType,
        n1_0.ScheduledFor,
        n1_0.SentAt,
        n1_0.status,
        n1_0.Title,
        n1_0.Type,
        n1_0.UpdatedAt,
        n1_0.UserID 
    from
        Notifications n1_0 
    where
        n1_0.UserID=? 
        and n1_0.IsRead=?
Hibernate: 
    select
        n1_0.notificationId,
        n1_0.CreatedAt,
        n1_0.IsRead,
        n1_0.Message,
        n1_0.Priority,
        n1_0.RelatedEntityID,
        n1_0.RelatedEntityType,
        n1_0.ScheduledFor,
        n1_0.SentAt,
        n1_0.status,
        n1_0.Title,
        n1_0.Type,
        n1_0.UpdatedAt,
        n1_0.UserID 
    from
        Notifications n1_0 
    where
        n1_0.UserID=? 
        and n1_0.IsRead=?
DEBUG: Found 3 unread notifications to mark as read
2025-07-10T16:38:19.918+07:00 DEBUG 5468 --- [HIV Clinic Backend] [           main] org.hibernate.SQL                        : 
    update
        Notifications 
    set
        IsRead=1,
        status='READ' 
    where
        UserID=? 
        and IsRead=0
Hibernate: 
    update
        Notifications 
    set
        IsRead=1,
        status='READ' 
    where
        UserID=? 
        and IsRead=0
DEBUG: Repository method updated 3 notifications for userId=1
2025-07-10T16:38:19.934+07:00 DEBUG 5468 --- [HIV Clinic Backend] [           main] org.hibernate.SQL                        : 
    select
        n1_0.notificationId,
        n1_0.CreatedAt,
        n1_0.IsRead,
        n1_0.Message,
        n1_0.Priority,
        n1_0.RelatedEntityID,
        n1_0.RelatedEntityType,
        n1_0.ScheduledFor,
        n1_0.SentAt,
        n1_0.status,
        n1_0.Title,
        n1_0.Type,
        n1_0.UpdatedAt,
        n1_0.UserID 
    from
        Notifications n1_0 
    where
        n1_0.notificationId=?
Hibernate: 
    select
        n1_0.notificationId,
        n1_0.CreatedAt,
        n1_0.IsRead,
        n1_0.Message,
        n1_0.Priority,
        n1_0.RelatedEntityID,
        n1_0.RelatedEntityType,
        n1_0.ScheduledFor,
        n1_0.SentAt,
        n1_0.status,
        n1_0.Title,
        n1_0.Type,
        n1_0.UpdatedAt,
        n1_0.UserID 
    from
        Notifications n1_0 
    where
        n1_0.notificationId=?
DEBUG: Verification - notification ID=9, isRead=true, status=READ
2025-07-10T16:38:19.940+07:00 DEBUG 5468 --- [HIV Clinic Backend] [           main] org.hibernate.SQL                        : 
    select
        n1_0.notificationId,
        n1_0.CreatedAt,
        n1_0.IsRead,
        n1_0.Message,
        n1_0.Priority,
        n1_0.RelatedEntityID,
        n1_0.RelatedEntityType,
        n1_0.ScheduledFor,
        n1_0.SentAt,
        n1_0.status,
        n1_0.Title,
        n1_0.Type,
        n1_0.UpdatedAt,
        n1_0.UserID 
    from
        Notifications n1_0 
    where
        n1_0.notificationId=?
Hibernate: 
    select
        n1_0.notificationId,
        n1_0.CreatedAt,
        n1_0.IsRead,
        n1_0.Message,
        n1_0.Priority,
        n1_0.RelatedEntityID,
        n1_0.RelatedEntityType,
        n1_0.ScheduledFor,
        n1_0.SentAt,
        n1_0.status,
        n1_0.Title,
        n1_0.Type,
        n1_0.UpdatedAt,
        n1_0.UserID 
    from
        Notifications n1_0 
    where
        n1_0.notificationId=?
DEBUG: Verification - notification ID=10, isRead=true, status=READ
2025-07-10T16:38:19.952+07:00 DEBUG 5468 --- [HIV Clinic Backend] [           main] org.hibernate.SQL                        : 
    select
        n1_0.notificationId,
        n1_0.CreatedAt,
        n1_0.IsRead,
        n1_0.Message,
        n1_0.Priority,
        n1_0.RelatedEntityID,
        n1_0.RelatedEntityType,
        n1_0.ScheduledFor,
        n1_0.SentAt,
        n1_0.status,
        n1_0.Title,
        n1_0.Type,
        n1_0.UpdatedAt,
        n1_0.UserID 
    from
        Notifications n1_0 
    where
        n1_0.notificationId=?
Hibernate: 
    select
        n1_0.notificationId,
        n1_0.CreatedAt,
        n1_0.IsRead,
        n1_0.Message,
        n1_0.Priority,
        n1_0.RelatedEntityID,
        n1_0.RelatedEntityType,
        n1_0.ScheduledFor,
        n1_0.SentAt,
        n1_0.status,
        n1_0.Title,
        n1_0.Type,
        n1_0.UpdatedAt,
        n1_0.UserID 
    from
        Notifications n1_0 
    where
        n1_0.notificationId=?
DEBUG: Verification - notification ID=11, isRead=true, status=READ
DEBUG: Successfully marked all notifications as read for userId=1. Verified 3 notifications.
]]></system-out>
  </testcase>
</testsuite>