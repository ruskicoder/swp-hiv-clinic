import{u as te,a as re,r as t,d as u,j as e,E as g}from"./index-ottAEAuo.js";import{D as ne}from"./DashboardHeader-BBOE_SHF.js";import{s as n,a as $,c as le}from"./renderUtils-BkDR37Se.js";import"./UserProfileDropdown-Cl9Ss_zV.js";const he=()=>{const{logout:ie}=te();re();const[p,E]=t.useState("overview"),[V,S]=t.useState(!0),[C,N]=t.useState(""),[b,O]=t.useState([]),[H,z]=t.useState([]),[f,J]=t.useState([]),[D,K]=t.useState([]),[y,Q]=t.useState([]),[j,w]=t.useState(!0),[F,U]=t.useState(""),[B,G]=t.useState(""),[T,R]=t.useState(""),[P,L]=t.useState(!1),[d,I]=t.useState({}),c=t.useCallback(async()=>{S(!0),N(""),G(""),R(""),w(!0),U("");try{console.log("Loading admin dashboard data...");const[s,r,o,m,x]=await Promise.allSettled([u.get("/admin/users"),u.get("/admin/patients"),u.get("/admin/doctors"),u.get("/admin/appointments"),u.get("/admin/specialties")]);s.status==="fulfilled"&&s.value?.data?O(Array.isArray(s.value.data)?s.value.data:[]):G("Failed to load users"),r.status==="fulfilled"&&r.value?.data&&z(Array.isArray(r.value.data)?r.value.data:[]),o.status==="fulfilled"&&o.value?.data&&J(Array.isArray(o.value.data)?o.value.data:[]),m.status==="fulfilled"&&m.value?.data?K(Array.isArray(m.value.data)?m.value.data:[]):R("Failed to load appointments"),x.status==="fulfilled"&&x.value?.data?(Q(Array.isArray(x.value.data)?x.value.data:[]),w(!1)):(U("Failed to load specialties"),w(!1))}catch(s){console.error("Dashboard error:",s),N("Failed to load dashboard data. Please try again."),w(!1)}finally{S(!1)}},[]);t.useEffect(()=>{c()},[c]);const k=async s=>{try{await u.put(`/admin/users/${s}/toggle-status`),c()}catch(r){console.error("Toggle user status error:",r),N("Failed to toggle user status")}},W=async s=>{const r=prompt("Enter new password:");if(r)try{await u.put(`/admin/users/${s}/reset-password`,null,{params:{newPassword:r}}),alert("Password reset successfully")}catch(o){console.error("Reset password error:",o),N("Failed to reset password")}},X=[{id:"overview",label:"Overview",icon:"üìä"},{id:"users",label:"Manage Users",icon:"üë•"},{id:"doctors",label:"Manage Doctors",icon:"üë®‚Äç‚öïÔ∏è"},{id:"appointments",label:"All Appointments",icon:"üìÖ"},{id:"create-doctor",label:"Create Doctor",icon:"‚ûï"}],Y=()=>e.jsx(g,{children:e.jsxs("div",{className:"overview-section",children:[e.jsx("div",{className:"content-header",children:e.jsx("h2",{children:"Admin Dashboard"})}),e.jsxs("div",{className:"stats-grid",children:[e.jsxs("div",{className:"stat-card",children:[e.jsx("h3",{children:"Total Users"}),e.jsx("p",{className:"stat-number",children:b?.length||0})]}),e.jsxs("div",{className:"stat-card",children:[e.jsx("h3",{children:"Total Patients"}),e.jsx("p",{className:"stat-number",children:H?.length||0})]}),e.jsxs("div",{className:"stat-card",children:[e.jsx("h3",{children:"Total Doctors"}),e.jsx("p",{className:"stat-number",children:f?.length||0})]}),e.jsxs("div",{className:"stat-card",children:[e.jsx("h3",{children:"Total Appointments"}),e.jsx("p",{className:"stat-number",children:D?.length||0})]})]}),C&&e.jsxs("div",{className:"error-message",children:[C,e.jsx("button",{onClick:c,className:"retry-btn",children:"Retry"})]})]})}),Z=()=>e.jsx(g,{children:e.jsxs("div",{className:"users-section",children:[e.jsxs("div",{className:"content-header",children:[e.jsx("h2",{children:"Manage Users"}),e.jsx("p",{children:"View and manage all system users"})]}),B&&e.jsx("div",{className:"error-message",children:B}),!b||b.length===0?e.jsxs("div",{className:"no-data",children:[e.jsx("p",{children:"No users found."}),e.jsx("button",{className:"refresh-btn",onClick:c,children:"Refresh"})]}):e.jsx("div",{className:"users-table-container",children:e.jsxs("table",{className:"users-table",children:[e.jsx("thead",{children:e.jsxs("tr",{children:[e.jsx("th",{children:"Username"}),e.jsx("th",{children:"Email"}),e.jsx("th",{children:"Role"}),e.jsx("th",{children:"Status"}),e.jsx("th",{children:"Created"}),e.jsx("th",{children:"Actions"})]})}),e.jsx("tbody",{children:b.map((s,r)=>e.jsxs("tr",{children:[e.jsx("td",{children:n(s?.username)}),e.jsx("td",{children:n(s?.email)}),e.jsx("td",{children:n(s?.role?.roleName||s?.role)}),e.jsx("td",{children:e.jsx("span",{className:`status-badge ${s?.isActive?"active":"inactive"}`,children:s?.isActive?"Active":"Inactive"})}),e.jsx("td",{children:$(s?.createdAt)}),e.jsx("td",{children:e.jsxs("div",{className:"action-buttons",children:[e.jsx("button",{className:"btn-toggle",onClick:()=>k(s?.userId),children:s?.isActive?"Deactivate":"Activate"}),e.jsx("button",{className:"btn-reset",onClick:()=>W(s?.userId),children:"Reset Password"})]})})]},s?.userId||r))})]})})]})}),_=()=>e.jsx(g,{children:e.jsxs("div",{className:"doctors-section",children:[e.jsxs("div",{className:"content-header",children:[e.jsx("h2",{children:"Manage Doctors"}),e.jsx("p",{children:"View and manage doctor accounts"})]}),!f||f.length===0?e.jsxs("div",{className:"no-data",children:[e.jsx("p",{children:"No doctors found."}),e.jsx("button",{className:"refresh-btn",onClick:c,children:"Refresh"})]}):e.jsx("div",{className:"doctors-grid",children:f.map((s,r)=>e.jsx(g,{children:e.jsxs("div",{className:"doctor-card",children:[e.jsxs("h4",{children:["Dr. ",n(s?.username)]}),e.jsxs("p",{children:[e.jsx("strong",{children:"Email:"})," ",n(s?.email)]}),e.jsxs("p",{children:[e.jsx("strong",{children:"Status:"}),e.jsx("span",{className:`status-badge ${s?.isActive?"active":"inactive"}`,children:s?.isActive?"Active":"Inactive"})]}),e.jsxs("p",{children:[e.jsx("strong",{children:"Created:"})," ",$(s?.createdAt)]}),e.jsx("div",{className:"doctor-actions",children:e.jsx("button",{className:"btn-toggle",onClick:()=>k(s?.userId),children:s?.isActive?"Deactivate":"Activate"})})]})},s?.userId||r))})]})}),ee=()=>e.jsx(g,{children:e.jsxs("div",{className:"appointments-section",children:[e.jsxs("div",{className:"content-header",children:[e.jsx("h2",{children:"All Appointments"}),e.jsx("p",{children:"View all system appointments"})]}),T&&e.jsx("div",{className:"error-message",children:T}),!D||D.length===0?e.jsxs("div",{className:"no-data",children:[e.jsx("p",{children:"No appointments found."}),e.jsx("button",{className:"refresh-btn",onClick:c,children:"Refresh"})]}):e.jsx("div",{className:"appointments-table-container",children:e.jsxs("table",{className:"appointments-table",children:[e.jsx("thead",{children:e.jsxs("tr",{children:[e.jsx("th",{children:"Patient"}),e.jsx("th",{children:"Doctor"}),e.jsx("th",{children:"Date & Time"}),e.jsx("th",{children:"Duration"}),e.jsx("th",{children:"Status"}),e.jsx("th",{children:"Notes"})]})}),e.jsx("tbody",{children:D.map((s,r)=>e.jsxs("tr",{children:[e.jsx("td",{children:n(s?.patientUser?.username)}),e.jsxs("td",{children:["Dr. ",n(s?.doctorUser?.username)]}),e.jsx("td",{children:le(s?.appointmentDateTime)}),e.jsxs("td",{children:[n(s?.durationMinutes)," min"]}),e.jsx("td",{children:e.jsx("span",{className:`status ${n(s?.status).toLowerCase()}`,children:n(s?.status)})}),e.jsx("td",{children:n(s?.appointmentNotes)})]},s?.appointmentId||r))})]})})]})}),se=()=>{console.log("üîç DEBUG: CreateDoctorForm component rendering"),console.log("üîç DEBUG: Available specialties:",y),console.log("üîç DEBUG: Specialties length:",y?.length),console.log("üîç DEBUG: Specialties loading:",j);const[s,r]=t.useState(()=>({username:d.username||"",email:d.email||"",password:d.password||"",firstName:d.firstName||"",lastName:d.lastName||"",phoneNumber:d.phoneNumber||"",specialtyId:d.specialtyId||"",bio:d.bio||""})),[o,m]=t.useState(!1),[x,A]=t.useState(""),[M,q]=t.useState(""),ae=async i=>{i.preventDefault(),console.log("üîç DEBUG: Form submission started"),console.log("üîç DEBUG: Current form data:",s),console.log("üîç DEBUG: Available specialties for validation:",y),m(!0),A(""),q("");try{if(!s.username||!s.email||!s.password||!s.firstName||!s.lastName){A("Please fill in all required fields"),m(!1);return}const a=new URLSearchParams;a.append("username",s.username),a.append("email",s.email),a.append("password",s.password),a.append("firstName",s.firstName),a.append("lastName",s.lastName),a.append("phoneNumber",s.phoneNumber||""),a.append("specialtyId",s.specialtyId||""),a.append("bio",s.bio||""),console.log("üîç DEBUG: Form data being sent:",Array.from(a.entries()));const l=await u.post("/admin/doctors",a,{headers:{"Content-Type":"application/x-www-form-urlencoded"}});if(console.log("üîç DEBUG: API response received:",l.data),l.data&&(l.data.success||l.data.isSuccess)){console.log("üîç DEBUG: Doctor created successfully, response:",l.data),q("Doctor created successfully!");const v={username:"",email:"",password:"",firstName:"",lastName:"",phoneNumber:"",specialtyId:"",bio:""};r(v),I(v),c(),setTimeout(()=>{E("doctors")},1500)}else{console.log("üîç DEBUG: Doctor creation failed, response:",l.data);const v=l.data?.message||l.data?.msg||"Failed to create doctor";console.log("üîç DEBUG: Setting form error:",v),A(v)}}catch(a){console.log("üîç DEBUG: Exception during doctor creation:",a),console.log("üîç DEBUG: Error response:",a?.response?.data);const l=a?.response?.data?.message||a?.response?.data?.msg||a?.response?.data?.error||a?.message||"Failed to create doctor";console.log("üîç DEBUG: Setting form error from exception:",l),A(l)}finally{console.log("üîç DEBUG: Form submission completed, loading:",!1),m(!1)}},h=i=>{console.log("üîç DEBUG: Form field changed:",i.target.name,"=",i.target.value);const a={...s,[i.target.name]:i.target.value};r(a),I(a)};return e.jsx(g,{children:e.jsxs("div",{className:"create-doctor-section",children:[e.jsxs("div",{className:"content-header",children:[e.jsx("h2",{children:"Create Doctor Account"}),e.jsx("p",{children:"Add a new doctor to the system"})]}),j&&e.jsx("div",{className:"loading-message",children:e.jsx("p",{children:"Loading form data..."})}),e.jsxs("form",{onSubmit:ae,className:"create-doctor-form",children:[x&&e.jsx("div",{className:"error-message",children:x}),M&&e.jsx("div",{className:"success-message",children:M}),e.jsxs("div",{className:"form-row",children:[e.jsxs("div",{className:"form-group",children:[e.jsx("label",{htmlFor:"username",children:"Username"}),e.jsx("input",{type:"text",id:"username",name:"username",value:s.username,onChange:h,required:!0})]}),e.jsxs("div",{className:"form-group",children:[e.jsx("label",{htmlFor:"email",children:"Email"}),e.jsx("input",{type:"email",id:"email",name:"email",value:s.email,onChange:h,required:!0})]})]}),e.jsxs("div",{className:"form-group",children:[e.jsx("label",{htmlFor:"password",children:"Password"}),e.jsx("input",{type:"password",id:"password",name:"password",value:s.password,onChange:h,required:!0})]}),e.jsxs("div",{className:"form-row",children:[e.jsxs("div",{className:"form-group",children:[e.jsx("label",{htmlFor:"firstName",children:"First Name"}),e.jsx("input",{type:"text",id:"firstName",name:"firstName",value:s.firstName,onChange:h,required:!0})]}),e.jsxs("div",{className:"form-group",children:[e.jsx("label",{htmlFor:"lastName",children:"Last Name"}),e.jsx("input",{type:"text",id:"lastName",name:"lastName",value:s.lastName,onChange:h,required:!0})]})]}),e.jsxs("div",{className:"form-group",children:[e.jsx("label",{htmlFor:"phoneNumber",children:"Phone Number"}),e.jsx("input",{type:"tel",id:"phoneNumber",name:"phoneNumber",value:s.phoneNumber,onChange:h})]}),e.jsxs("div",{className:"form-group",children:[e.jsx("label",{htmlFor:"specialtyId",children:"Specialty"}),e.jsxs("select",{id:"specialtyId",name:"specialtyId",value:s.specialtyId,onChange:h,disabled:j,children:[e.jsx("option",{value:"",children:j?"Loading specialties...":"Select a specialty..."}),!j&&y.map((i,a)=>e.jsx("option",{value:i?.specialtyId,children:n(i?.specialtyName)},i?.specialtyId||a))]}),F&&e.jsx("div",{className:"field-error",children:F})]}),e.jsxs("div",{className:"form-group",children:[e.jsx("label",{htmlFor:"bio",children:"Biography"}),e.jsx("textarea",{id:"bio",name:"bio",value:s.bio,onChange:h,placeholder:"Enter doctor's biography...",rows:"4"})]}),e.jsx("button",{type:"submit",className:"submit-btn",disabled:o||j,children:o?"Creating...":"Create Doctor"})]})]})})};return V?e.jsx("div",{className:"admin-dashboard",children:e.jsx("div",{className:"loading",children:"Loading dashboard data..."})}):e.jsxs("div",{className:"admin-dashboard",children:[e.jsx(ne,{title:"Admin Dashboard",subtitle:"System overview and management"}),e.jsxs("div",{className:"dashboard-layout",children:[e.jsx("aside",{className:"manager-sidebar",children:X.map(s=>e.jsxs("button",{className:`sidebar-option${p===s.id?" active":""}`,onClick:()=>{console.log("üîç DEBUG: Tab switching from",p,"to",s.id),L(!0),E(s.id),setTimeout(()=>L(!1),300)},children:[s.icon," ",s.label]},s.id))}),e.jsxs("main",{className:"dashboard-main",children:[P&&e.jsx("div",{className:"tab-transition-loading",children:e.jsx("p",{children:"Loading..."})}),!P&&e.jsxs(e.Fragment,{children:[p==="overview"&&Y(),p==="users"&&Z(),p==="doctors"&&_(),p==="appointments"&&ee(),p==="create-doctor"&&e.jsxs("div",{children:[console.log("üîç DEBUG: Rendering CreateDoctorForm component"),e.jsx(se,{})]})]})]})]})]})};export{he as default};
