import{r as c,j as e,R as ge,u as re,a as fe,d as V,E as z}from"./index-CScRpsKl.js";import{P as r,n as H,D as ve}from"./DashboardHeader-BQ5_pi8w.js";import{U as be,P as ye}from"./UnifiedCalendar-CchpoKmO.js";import{s as G,c as ae,a as ie}from"./renderUtils-HeC9N5td.js";import"./UserProfileDropdown-Cd9gt73g.js";import"./SafeComponents-BBO7G56W.js";const we=({isOpen:d,onClose:E,onSubmit:F,formData:v,onChange:A})=>{const[s,f]=c.useState({regimen:"",startDate:"",endDate:"",adherence:"",sideEffects:"",notes:"",setAsTemplate:!1}),[N,M]=c.useState(!1);c.useEffect(()=>{v&&(f({regimen:v.regimen||"",startDate:v.startDate||"",endDate:v.endDate||"",adherence:v.adherence||"",sideEffects:v.sideEffects||"",notes:v.notes||"",setAsTemplate:v.setAsTemplate||!1}),M(v.setAsTemplate||!1))},[v]);const x=p=>{const{name:D,value:j}=p.target;f(R=>({...R,[D]:j})),A(p)},b=p=>{M(p.target.checked),A({target:{name:"setAsTemplate",value:p.target.checked}}),p.target.checked?(A({target:{name:"notes",value:"template"}}),f(D=>({...D,notes:"template"}))):(A({target:{name:"notes",value:""}}),f(D=>({...D,notes:""})))},S=p=>{N||A(p)},y=p=>{p.preventDefault(),F({...s,setAsTemplate:N})};return d?e.jsx("div",{className:"modal-overlay",children:e.jsxs("div",{className:"modal-content",children:[e.jsxs("div",{className:"modal-header",children:[e.jsx("h3",{children:v?"Edit ARV Treatment":"Add New ARV Treatment"}),e.jsx("button",{className:"close-btn",onClick:E,children:"×"})]}),e.jsxs("form",{onSubmit:y,className:"arv-form",children:[e.jsxs("div",{className:"form-row",children:[e.jsxs("div",{className:"form-group",children:[e.jsx("label",{children:"Regimen:"}),e.jsx("input",{type:"text",name:"regimen",value:s.regimen,onChange:x,placeholder:"Enter ARV regimen",required:!0})]}),e.jsxs("div",{className:"form-group",children:[e.jsx("label",{children:"Start Date:"}),e.jsx("input",{type:"date",name:"startDate",value:s.startDate,onChange:x,required:!0})]})]}),e.jsxs("div",{className:"form-row",children:[e.jsxs("div",{className:"form-group",children:[e.jsx("label",{children:"End Date:"}),e.jsx("input",{type:"date",name:"endDate",value:s.endDate,onChange:x})]}),e.jsxs("div",{className:"form-group",children:[e.jsx("label",{children:"Adherence:"}),e.jsxs("select",{name:"adherence",value:s.adherence,onChange:x,children:[e.jsx("option",{value:"",children:"Select adherence level"}),e.jsx("option",{value:"Excellent",children:"Excellent (95-100%)"}),e.jsx("option",{value:"Good",children:"Good (85-94%)"}),e.jsx("option",{value:"Fair",children:"Fair (75-84%)"}),e.jsx("option",{value:"Poor",children:"Poor (Under 75%)"})]})]})]}),e.jsxs("div",{className:"form-group",children:[e.jsx("label",{children:"Side Effects:"}),e.jsx("textarea",{name:"sideEffects",value:s.sideEffects,onChange:x,rows:"3",placeholder:"Enter any side effects..."})]}),e.jsx("div",{className:"form-group",children:e.jsxs("label",{children:[e.jsx("input",{type:"checkbox",checked:N,onChange:b})," ","Set as template"]})}),e.jsxs("div",{className:"form-group",children:[e.jsx("label",{children:"Notes:"}),e.jsx("textarea",{name:"notes",value:s.notes,onChange:S,rows:"3",placeholder:N?"Notes will be set as 'template'":"Enter additional notes...",disabled:N,style:N?{background:"#eee"}:{}})]}),e.jsxs("div",{className:"form-actions",children:[e.jsx("button",{type:"submit",className:"btn-primary",children:v?"Save Changes":"Add Treatment"}),e.jsx("button",{type:"button",className:"btn-secondary",onClick:E,children:"Cancel"})]})]})]})}):null},le=({patients:d,selectedPatientIds:E,onSelectionChange:F,multiple:v=!1,error:A,disabled:s=!1,placeholder:f="Search patients..."})=>{const[N,M]=c.useState(""),[x,b]=c.useState(!1),[S,y]=c.useState([]);c.useEffect(()=>{const m=d.filter(C=>{const L=`${C.firstName||""} ${C.lastName||""}`.toLowerCase(),O=(C.email||"").toLowerCase(),o=N.toLowerCase();return L.includes(o)||O.includes(o)});y(m)},[d,N]);const p=m=>{if(s)return;let C;v?E.includes(m)?C=E.filter(L=>L!==m):C=[...E,m]:(C=E.includes(m)?[]:[m],b(!1)),F(C)},D=m=>{if(s)return;const C=E.filter(L=>L!==m);F(C)},j=()=>d.filter(m=>E.includes(m.userId)),R=m=>{M(m.target.value),b(!0)},$=()=>{s||b(!0)},k=m=>{m.target.closest(".patient-selector")||b(!1)};c.useEffect(()=>(document.addEventListener("click",k),()=>document.removeEventListener("click",k)),[]);const U=j();return e.jsxs("div",{className:`patient-selector ${A?"error":""} ${s?"disabled":""}`,children:[U.length>0&&e.jsx("div",{className:"selected-patients",children:U.map(m=>e.jsxs("div",{className:"selected-patient-tag",children:[e.jsxs("span",{className:"patient-info",children:[e.jsxs("span",{className:"patient-name",children:[m.firstName||"Unknown"," ",m.lastName||"Patient"]}),e.jsx("span",{className:"patient-email",children:m.email||"No email"})]}),e.jsx("button",{type:"button",className:"remove-patient",onClick:()=>D(m.userId),disabled:s,"aria-label":`Remove ${m.firstName} ${m.lastName}`,children:"×"})]},m.userId))}),e.jsxs("div",{className:"search-input-container",children:[e.jsx("input",{type:"text",className:"search-input",placeholder:U.length>0?"Add more patients...":f,value:N,onChange:R,onFocus:$,disabled:s,"aria-expanded":x,"aria-haspopup":"listbox",role:"combobox"}),e.jsx("div",{className:"search-icon",children:e.jsxs("svg",{viewBox:"0 0 24 24",fill:"none",stroke:"currentColor",strokeWidth:"2",children:[e.jsx("circle",{cx:"11",cy:"11",r:"8"}),e.jsx("path",{d:"m21 21-4.35-4.35"})]})})]}),x&&!s&&e.jsx("div",{className:"patient-dropdown",role:"listbox",children:S.length>0?e.jsxs(e.Fragment,{children:[v&&e.jsxs("div",{className:"dropdown-header",children:[e.jsxs("span",{children:["Select patients (",E.length," selected)"]}),E.length>0&&e.jsx("button",{type:"button",className:"clear-all",onClick:()=>F([]),children:"Clear All"})]}),e.jsx("div",{className:"patient-list",children:S.map(m=>{const C=E.includes(m.userId);return e.jsxs("div",{className:`patient-option ${C?"selected":""}`,onClick:()=>p(m.userId),role:"option","aria-selected":C,children:[e.jsxs("div",{className:"patient-info",children:[e.jsxs("div",{className:"patient-name",children:[m.firstName||"Unknown"," ",m.lastName||"Patient"]}),e.jsxs("div",{className:"patient-details",children:[e.jsx("span",{className:"patient-email",children:m.email||"No email"}),m.lastAppointment&&e.jsxs("span",{className:"last-appointment",children:["Last visit: ",new Date(m.lastAppointment).toLocaleDateString()]})]})]}),v&&e.jsx("div",{className:"selection-indicator",children:C?e.jsx("svg",{viewBox:"0 0 24 24",fill:"currentColor",children:e.jsx("path",{d:"M9 16.17L4.83 12l-1.42 1.41L9 19 21 7l-1.41-1.41z"})}):e.jsx("div",{className:"checkbox-empty"})})]},m.userId)})})]}):e.jsx("div",{className:"no-patients",children:N?e.jsxs(e.Fragment,{children:[e.jsx("span",{className:"icon",children:"🔍"}),e.jsxs("span",{children:['No patients found matching "',N,'"']})]}):e.jsxs(e.Fragment,{children:[e.jsx("span",{className:"icon",children:"👥"}),e.jsx("span",{children:"No patients with appointments found"})]})})}),v&&E.length>0&&e.jsxs("div",{className:"selection-summary",children:[e.jsxs("span",{className:"summary-text",children:[E.length," patient",E.length!==1?"s":""," selected"]}),e.jsxs("button",{type:"button",className:"view-selection",onClick:()=>b(!x),disabled:s,children:[x?"Hide":"View"," Selection"]})]}),A&&e.jsxs("div",{className:"error-message",role:"alert",children:[e.jsx("span",{className:"error-icon",children:"⚠️"}),e.jsx("span",{children:A})]}),e.jsx("div",{className:"help-text",children:v?"Search and select multiple patients to send notifications to":"Search and select a patient to send notification to"})]})};le.propTypes={patients:r.arrayOf(r.shape({userId:r.number.isRequired,firstName:r.string.isRequired,lastName:r.string.isRequired,email:r.string.isRequired,lastAppointment:r.string})).isRequired,selectedPatientIds:r.arrayOf(r.number).isRequired,onSelectionChange:r.func.isRequired,multiple:r.bool,error:r.string,disabled:r.bool,placeholder:r.string};const ce=({isOpen:d,onClose:E,onSend:F,patients:v,templates:A})=>{const[s,f]=c.useState({patientIds:[],templateId:"",customMessage:"",subject:"",priority:"MEDIUM",sendNow:!0,scheduledDateTime:"",useCustomMessage:!1}),[N,M]=c.useState(""),[x,b]=c.useState(null),[S,y]=c.useState(!1),[p,D]=c.useState(""),[j,R]=c.useState({});c.useEffect(()=>{d&&$()},[d]),c.useEffect(()=>{C()},[s.templateId,s.customMessage,s.useCustomMessage,s.patientIds]);const $=()=>{f({patientIds:[],templateId:"",customMessage:"",subject:"",priority:"MEDIUM",sendNow:!0,scheduledDateTime:"",useCustomMessage:!1}),M(""),b(null),D(""),R({})},k=o=>{const{name:w,value:I,type:i,checked:n}=o.target;f(t=>({...t,[w]:i==="checkbox"?n:I})),j[w]&&R(t=>({...t,[w]:""}))},U=o=>{const w=o.target.value,I=A.find(i=>i.templateId===parseInt(w));f(i=>({...i,templateId:w,subject:I?I.subject:"",useCustomMessage:!1})),b(I)},m=o=>{f(w=>({...w,patientIds:o}))},C=()=>{if(s.useCustomMessage&&s.customMessage){M(s.customMessage);return}if(!x){M("");return}let o=x.body||x.content||"";if(s.patientIds.length===1){const w=v.find(I=>I.userId===s.patientIds[0]);w&&(o=o.replace(/\{\{patientName\}\}/g,`${w.firstName} ${w.lastName}`).replace(/\{\{firstName\}\}/g,w.firstName).replace(/\{\{lastName\}\}/g,w.lastName).replace(/\{patientName\}/g,`${w.firstName} ${w.lastName}`).replace(/\{firstName\}/g,w.firstName).replace(/\{lastName\}/g,w.lastName))}else s.patientIds.length>1&&(o=o.replace(/\{\{patientName\}\}/g,"[Patient Name]").replace(/\{\{firstName\}\}/g,"[First Name]").replace(/\{\{lastName\}\}/g,"[Last Name]").replace(/\{patientName\}/g,"[Patient Name]").replace(/\{firstName\}/g,"[First Name]").replace(/\{lastName\}/g,"[Last Name]"));o=o.replace(/\{\{doctorName\}\}/g,"Dr. [Doctor Name]").replace(/\{\{clinicName\}\}/g,"HIV Medical Clinic").replace(/\{\{currentDate\}\}/g,new Date().toLocaleDateString()).replace(/\{\{currentTime\}\}/g,new Date().toLocaleTimeString()).replace(/\{\{date\}\}/g,new Date().toLocaleDateString()).replace(/\{\{time\}\}/g,new Date().toLocaleTimeString()).replace(/\{doctorName\}/g,"Dr. [Doctor Name]").replace(/\{clinicName\}/g,"HIV Medical Clinic").replace(/\{date\}/g,new Date().toLocaleDateString()).replace(/\{time\}/g,new Date().toLocaleTimeString()),M(o)},L=()=>{const o={};return s.patientIds.length===0&&(o.patients="Please select at least one patient"),!s.useCustomMessage&&!s.templateId&&(o.template="Please select a template or use custom message"),s.useCustomMessage&&!s.customMessage.trim()&&(o.customMessage="Please enter a custom message"),s.subject.trim()||(o.subject="Please enter a subject"),!s.sendNow&&!s.scheduledDateTime&&(o.scheduledDateTime="Please select a date and time for scheduling"),!s.sendNow&&s.scheduledDateTime&&new Date(s.scheduledDateTime)<=new Date&&(o.scheduledDateTime="Scheduled time must be in the future"),R(o),Object.keys(o).length===0},O=async o=>{if(o.preventDefault(),!!L()){y(!0),D("");try{const w={...s,message:s.useCustomMessage?s.customMessage:x?.body||x?.content||"",templateName:x?.name||"Custom Message"},I=await F(w);I.success?E():D(I.error||"Failed to send notification")}catch(w){D("An unexpected error occurred"),console.error("Error sending notification:",w)}finally{y(!1)}}};return d?e.jsx("div",{className:"notification-send-modal-overlay",onClick:E,children:e.jsxs("div",{className:"notification-send-modal",onClick:o=>o.stopPropagation(),children:[e.jsxs("div",{className:"modal-header",children:[e.jsx("h2",{children:"Send Notification"}),e.jsx("button",{className:"close-btn",onClick:E,"aria-label":"Close modal",disabled:S,children:"×"})]}),e.jsxs("form",{onSubmit:O,className:"modal-form",children:[p&&e.jsxs("div",{className:"error-alert",role:"alert",children:[e.jsx("span",{className:"icon",children:"⚠️"}),e.jsx("span",{children:p})]}),e.jsxs("div",{className:"form-section",children:[e.jsx("h3",{children:"Select Recipients"}),e.jsx(le,{patients:v,selectedPatientIds:s.patientIds,onSelectionChange:m,error:j.patients,multiple:!0})]}),e.jsxs("div",{className:"form-section",children:[e.jsx("h3",{children:"Message Content"}),e.jsxs("div",{className:"message-type-selection",children:[e.jsxs("label",{className:"radio-option",children:[e.jsx("input",{type:"radio",name:"messageType",checked:!s.useCustomMessage,onChange:()=>f(o=>({...o,useCustomMessage:!1})),disabled:S}),e.jsx("span",{children:"Use Template"})]}),e.jsxs("label",{className:"radio-option",children:[e.jsx("input",{type:"radio",name:"messageType",checked:s.useCustomMessage,onChange:()=>f(o=>({...o,useCustomMessage:!0})),disabled:S}),e.jsx("span",{children:"Custom Message"})]})]})]}),!s.useCustomMessage&&e.jsxs("div",{className:"form-section",children:[e.jsx("label",{htmlFor:"template-select",children:"Select Template:"}),e.jsxs("select",{id:"template-select",name:"templateId",value:s.templateId,onChange:U,disabled:S,className:j.template?"error":"",children:[e.jsx("option",{value:"",children:"-- Select a template --"}),A.map(o=>e.jsxs("option",{value:o.templateId,children:[o.name," (",o.type,")"]},o.templateId))]}),j.template&&e.jsx("span",{className:"error-text",children:j.template}),x&&e.jsxs("div",{className:"help-text",children:[e.jsxs("p",{children:[e.jsx("strong",{children:"Available variables in templates:"})," ","{{patientName}}",", ","{{firstName}}",", ","{{lastName}}",", ","{{doctorName}}",", ","{{clinicName}}",", ","{{currentDate}}",", ","{{currentTime}}"]}),e.jsx("p",{children:e.jsx("small",{children:"These variables will be automatically replaced with actual values when the notification is sent."})})]})]}),s.useCustomMessage&&e.jsxs("div",{className:"form-section",children:[e.jsx("label",{htmlFor:"custom-message",children:"Custom Message:"}),e.jsx("textarea",{id:"custom-message",name:"customMessage",value:s.customMessage,onChange:k,disabled:S,rows:"6",placeholder:"Enter your custom message here...",className:j.customMessage?"error":""}),j.customMessage&&e.jsx("span",{className:"error-text",children:j.customMessage}),e.jsxs("div",{className:"help-text",children:[e.jsxs("p",{children:[e.jsx("strong",{children:"Available variables:"})," ","{{patientName}}",", ","{{firstName}}",", ","{{lastName}}",", ","{{doctorName}}",", ","{{clinicName}}",", ","{{currentDate}}",", ","{{currentTime}}"]}),e.jsx("p",{children:e.jsxs("small",{children:["Note: Single curly braces ","{patientName}"," are also supported for backward compatibility."]})})]})]}),e.jsxs("div",{className:"form-section",children:[e.jsx("label",{htmlFor:"subject",children:"Subject:"}),e.jsx("input",{type:"text",id:"subject",name:"subject",value:s.subject,onChange:k,disabled:S,placeholder:"Enter notification subject",className:j.subject?"error":""}),j.subject&&e.jsx("span",{className:"error-text",children:j.subject})]}),e.jsxs("div",{className:"form-section",children:[e.jsx("label",{htmlFor:"priority",children:"Priority:"}),e.jsxs("select",{id:"priority",name:"priority",value:s.priority,onChange:k,disabled:S,children:[e.jsx("option",{value:"LOW",children:"Low"}),e.jsx("option",{value:"MEDIUM",children:"Medium"}),e.jsx("option",{value:"HIGH",children:"High"}),e.jsx("option",{value:"URGENT",children:"Urgent"})]})]}),e.jsxs("div",{className:"form-section",children:[e.jsx("h3",{children:"Delivery Options"}),e.jsxs("div",{className:"scheduling-options",children:[e.jsxs("label",{className:"radio-option",children:[e.jsx("input",{type:"radio",name:"deliveryType",checked:s.sendNow,onChange:()=>f(o=>({...o,sendNow:!0})),disabled:S}),e.jsx("span",{children:"Send Now"})]}),e.jsxs("label",{className:"radio-option",children:[e.jsx("input",{type:"radio",name:"deliveryType",checked:!s.sendNow,onChange:()=>f(o=>({...o,sendNow:!1})),disabled:S}),e.jsx("span",{children:"Schedule for Later"})]})]}),!s.sendNow&&e.jsxs("div",{className:"scheduled-time-section",children:[e.jsx("label",{htmlFor:"scheduled-time",children:"Scheduled Date & Time:"}),e.jsx("input",{type:"datetime-local",id:"scheduled-time",name:"scheduledDateTime",value:s.scheduledDateTime,onChange:k,disabled:S,min:new Date().toISOString().slice(0,16),className:j.scheduledDateTime?"error":""}),j.scheduledDateTime&&e.jsx("span",{className:"error-text",children:j.scheduledDateTime})]})]}),N&&e.jsxs("div",{className:"form-section",children:[e.jsx("h3",{children:"Message Preview"}),e.jsxs("div",{className:"message-preview",children:[e.jsxs("div",{className:"preview-header",children:[e.jsx("strong",{children:"Subject:"})," ",s.subject]}),e.jsx("div",{className:"preview-content",children:N}),e.jsx("div",{className:"preview-footer",children:e.jsxs("small",{children:["Priority: ",s.priority," | Recipients: ",s.patientIds.length]})})]})]}),e.jsxs("div",{className:"modal-actions",children:[e.jsx("button",{type:"button",className:"btn-secondary",onClick:E,disabled:S,children:"Cancel"}),e.jsx("button",{type:"submit",className:"btn-primary",disabled:S||s.patientIds.length===0,children:S?e.jsxs(e.Fragment,{children:[e.jsx("span",{className:"loading-spinner small"}),"Sending..."]}):e.jsxs(e.Fragment,{children:[e.jsx("span",{className:"icon",children:"📤"}),s.sendNow?"Send Now":"Schedule Notification"]})})]})]})]})}):null};ce.propTypes={isOpen:r.bool.isRequired,onClose:r.func.isRequired,onSend:r.func.isRequired,patients:r.arrayOf(r.shape({userId:r.number.isRequired,firstName:r.string.isRequired,lastName:r.string.isRequired,email:r.string.isRequired})).isRequired,templates:r.arrayOf(r.shape({templateId:r.number.isRequired,name:r.string.isRequired,subject:r.string.isRequired,body:r.string,content:r.string,type:r.string.isRequired})).isRequired};const oe=({notifications:d,patients:E,onUnsend:F,onBulkOperation:v,onRefresh:A})=>{const[s,f]=c.useState({key:"createdAt",direction:"desc"}),[N,M]=c.useState([]),[x,b]=c.useState(!1),[S,y]=c.useState([]),p=c.useMemo(()=>s.key?[...d].sort((i,n)=>{let t=i[s.key],u=n[s.key];return(s.key==="createdAt"||s.key==="sentAt"||s.key==="scheduledAt")&&(t=new Date(t),u=new Date(u)),t<u?s.direction==="asc"?-1:1:t>u?s.direction==="asc"?1:-1:0}):d,[d,s]),D=i=>{f(n=>({key:i,direction:n.key===i&&n.direction==="asc"?"desc":"asc"}))},j=i=>{M(n=>n.includes(i)?n.filter(t=>t!==i):[...n,i])},R=()=>{N.length===d.length?M([]):M(d.map(i=>i.notificationId))},$=async i=>{if(N.length!==0){b(!0);try{(await v(i,N)).success&&M([])}catch(n){console.error(`Error performing bulk ${i}:`,n)}finally{b(!1)}}},k=async i=>{b(!0);try{await F(i)}catch(n){console.error("Error unsending notification:",n)}finally{b(!1)}},U=i=>{y(n=>n.includes(i)?n.filter(t=>t!==i):[...n,i])},m=i=>{if(i.patientName)return i.patientName;const n=E.find(t=>t.userId===i.patientId);return n?`${n.firstName} ${n.lastName}`:"Unknown Patient"},C=i=>({SENT:{class:"sent",text:"Sent",icon:"✓"},PENDING:{class:"pending",text:"Pending",icon:"⏳"},DELIVERED:{class:"delivered",text:"Delivered",icon:"📧"},FAILED:{class:"failed",text:"Failed",icon:"⚠️"},CANCELLED:{class:"cancelled",text:"Cancelled",icon:"✕"},READ:{class:"read",text:"Read",icon:"👁️"}})[i]||{class:"unknown",text:i,icon:"?"},L=i=>({LOW:{class:"low",text:"Low"},MEDIUM:{class:"medium",text:"Medium"},HIGH:{class:"high",text:"High"},URGENT:{class:"urgent",text:"Urgent"}})[i]||{class:"medium",text:i},O=i=>{if(!i)return"-";try{return new Date(i).toLocaleString()}catch{return"Invalid Date"}},o=i=>i?i.length>35?`${i.substring(0,35)}...`:i:"-",w=i=>i.status==="PENDING"||i.status==="SCHEDULED",I=N.filter(i=>{const n=d.find(t=>t.notificationId===i);return n&&w(n)}).length;return d.length===0?e.jsxs("div",{className:"notification-history-empty",children:[e.jsx("div",{className:"empty-icon",children:"📨"}),e.jsx("h3",{children:"No Notifications Found"}),e.jsx("p",{children:"No notification history available. Send your first notification to see it here."}),e.jsxs("button",{className:"btn-primary",onClick:A,children:[e.jsx("span",{className:"icon",children:"🔄"}),"Refresh"]})]}):e.jsxs("div",{className:"notification-history-table",children:[N.length>0&&e.jsxs("div",{className:"bulk-actions-bar",children:[e.jsxs("div",{className:"selection-info",children:[e.jsxs("span",{children:[N.length," notification",N.length!==1?"s":""," selected"]}),I>0&&e.jsxs("span",{className:"unsendable-count",children:["(",I," can be unsent)"]})]}),e.jsxs("div",{className:"bulk-actions",children:[I>0&&e.jsxs("button",{className:"btn-danger",onClick:()=>$("unsend"),disabled:x,children:[e.jsx("span",{className:"icon",children:"🚫"}),"Unsend Selected"]}),e.jsx("button",{className:"btn-secondary",onClick:()=>M([]),disabled:x,children:"Clear Selection"})]})]}),e.jsx("div",{className:"table-container",children:e.jsxs("table",{className:"notifications-table",children:[e.jsx("thead",{children:e.jsxs("tr",{children:[e.jsx("th",{className:"checkbox-column",children:e.jsx("input",{type:"checkbox",checked:N.length===d.length&&d.length>0,onChange:R,disabled:x,"aria-label":"Select all notifications"})}),e.jsxs("th",{className:`sortable ${s.key==="subject"?s.direction:""}`,onClick:()=>D("subject"),children:["Subject",e.jsx("span",{className:"sort-indicator",children:s.key==="subject"&&(s.direction==="asc"?"↑":"↓")})]}),e.jsxs("th",{className:`sortable ${s.key==="patientId"?s.direction:""}`,onClick:()=>D("patientId"),children:["Patient",e.jsx("span",{className:"sort-indicator",children:s.key==="patientId"&&(s.direction==="asc"?"↑":"↓")})]}),e.jsxs("th",{className:`sortable ${s.key==="status"?s.direction:""}`,onClick:()=>D("status"),children:["Status",e.jsx("span",{className:"sort-indicator",children:s.key==="status"&&(s.direction==="asc"?"↑":"↓")})]}),e.jsxs("th",{className:`sortable ${s.key==="priority"?s.direction:""}`,onClick:()=>D("priority"),children:["Priority",e.jsx("span",{className:"sort-indicator",children:s.key==="priority"&&(s.direction==="asc"?"↑":"↓")})]}),e.jsxs("th",{className:`sortable ${s.key==="createdAt"?s.direction:""}`,onClick:()=>D("createdAt"),children:["Created",e.jsx("span",{className:"sort-indicator",children:s.key==="createdAt"&&(s.direction==="asc"?"↑":"↓")})]}),e.jsxs("th",{className:`sortable ${s.key==="sentAt"?s.direction:""}`,onClick:()=>D("sentAt"),children:["Sent",e.jsx("span",{className:"sort-indicator",children:s.key==="sentAt"&&(s.direction==="asc"?"↑":"↓")})]}),e.jsx("th",{children:"Actions"})]})}),e.jsx("tbody",{children:p.map(i=>{const n=C(i.status),t=L(i.priority),u=S.includes(i.notificationId),h=N.includes(i.notificationId);return e.jsxs(ge.Fragment,{children:[e.jsxs("tr",{className:`notification-row ${h?"selected":""}`,children:[e.jsx("td",{className:"checkbox-column",children:e.jsx("input",{type:"checkbox",checked:h,onChange:()=>j(i.notificationId),disabled:x,"aria-label":`Select notification ${i.subject}`})}),e.jsxs("td",{className:"subject-column",children:[e.jsxs("div",{className:"subject-content",children:[e.jsx("span",{className:"subject-text",children:o(i.subject)}),e.jsx("button",{className:"expand-btn",onClick:()=>U(i.notificationId),"aria-label":`${u?"Collapse":"Expand"} message content`,children:u?"▼":"▶"})]}),e.jsx("div",{className:"template-name",children:i.templateName&&e.jsxs("span",{className:"template-badge",children:["📋 ",i.templateName]})})]}),e.jsx("td",{className:"patient-column",children:m(i)}),e.jsx("td",{className:"status-column",children:e.jsxs("span",{className:`status-badge ${n.class}`,children:[e.jsx("span",{className:"status-icon",children:n.icon}),n.text]})}),e.jsx("td",{className:"priority-column",children:e.jsx("span",{className:`priority-badge ${t.class}`,children:t.text})}),e.jsx("td",{className:"date-column",children:O(i.createdAt)}),e.jsx("td",{className:"date-column",children:O(i.sentAt)}),e.jsx("td",{className:"actions-column",children:e.jsxs("div",{className:"action-buttons",children:[w(i)&&e.jsx("button",{className:"btn-danger-small",onClick:()=>k(i.notificationId),disabled:x,title:"Unsend notification",children:"🚫"}),e.jsx("button",{className:"btn-secondary-small",onClick:()=>U(i.notificationId),title:"View message content",children:"👁️"})]})})]}),u&&e.jsx("tr",{className:"expanded-row",children:e.jsx("td",{colSpan:"8",children:e.jsxs("div",{className:"expanded-content",children:[e.jsxs("div",{className:"message-content",children:[e.jsx("h4",{children:"Message Content:"}),e.jsx("div",{className:"message-text",children:i.message||i.content})]}),i.scheduledAt&&e.jsxs("div",{className:"scheduled-info",children:[e.jsx("h4",{children:"Scheduling Information:"}),e.jsxs("p",{children:[e.jsx("strong",{children:"Scheduled for:"})," ",O(i.scheduledAt)]})]}),i.errorMessage&&e.jsxs("div",{className:"error-info",children:[e.jsx("h4",{children:"Error Details:"}),e.jsx("p",{className:"error-text",children:i.errorMessage})]})]})})})]},i.notificationId)})})]})}),x&&e.jsxs("div",{className:"loading-overlay",children:[e.jsx("div",{className:"loading-spinner"}),e.jsx("span",{children:"Processing..."})]})]})};oe.propTypes={notifications:r.arrayOf(r.shape({notificationId:r.number.isRequired,subject:r.string.isRequired,message:r.string,content:r.string,patientId:r.number.isRequired,status:r.string.isRequired,priority:r.string.isRequired,createdAt:r.string.isRequired,sentAt:r.string,scheduledAt:r.string,templateName:r.string,errorMessage:r.string})).isRequired,patients:r.arrayOf(r.shape({userId:r.number.isRequired,firstName:r.string.isRequired,lastName:r.string.isRequired})).isRequired,onUnsend:r.func.isRequired,onBulkOperation:r.func.isRequired,onRefresh:r.func.isRequired};const de=({isOpen:d,onClose:E,templates:F=[],onRefresh:v})=>{const[A,s]=c.useState("browse"),[f,N]=c.useState(null),[M,x]=c.useState(!1),[b,S]=c.useState(null),[y,p]=c.useState(!1),[D,j]=c.useState(""),[R,$]=c.useState({name:"",subject:"",content:"",type:"APPOINTMENT_REMINDER",priority:"MEDIUM",description:""}),[k,U]=c.useState({}),m=()=>{$({name:"",subject:"",content:"",type:"APPOINTMENT_REMINDER",priority:"MEDIUM",description:""}),U({}),j(""),S(null),x(!1)},C=n=>{const{name:t,value:u}=n.target;$(h=>({...h,[t]:u})),k[t]&&U(h=>({...h,[t]:""}))},L=n=>{$({name:n.name||"",subject:n.subject||"",content:n.content||"",type:n.type||"APPOINTMENT_REMINDER",priority:n.priority||"MEDIUM",description:n.description||""}),S(n),x(!0),s("create")},O=()=>{const n={};return R.name.trim()||(n.name="Template name is required"),R.subject.trim()||(n.subject="Subject is required"),R.content.trim()||(n.content="Content is required"),U(n),Object.keys(n).length===0},o=async n=>{if(n.preventDefault(),!!O()){p(!0),j("");try{const t=b?`/api/v1/doctor/notifications/templates/${b.templateId}`:"/api/v1/doctor/notifications/templates",g=await(await fetch(t,{method:b?"PUT":"POST",headers:{"Content-Type":"application/json",Authorization:`Bearer ${localStorage.getItem("token")}`},body:JSON.stringify(R)})).json();g.success?(m(),s("browse"),v()):j(g.message||"Failed to save template")}catch(t){j("An unexpected error occurred"),console.error("Error saving template:",t)}finally{p(!1)}}},w=async n=>{if(window.confirm("Are you sure you want to delete this template?")){p(!0),j("");try{const u=await(await fetch(`/api/v1/doctor/notifications/templates/${n}`,{method:"DELETE",headers:{Authorization:`Bearer ${localStorage.getItem("token")}`}})).json();u.success?v():j(u.message||"Failed to delete template")}catch(t){j("An unexpected error occurred"),console.error("Error deleting template:",t)}finally{p(!1)}}},I=n=>({APPOINTMENT_REMINDER:"Appointment Reminder",MEDICATION_REMINDER:"Medication Reminder",FOLLOW_UP:"Follow-up",GENERAL:"General",EMERGENCY:"Emergency",EDUCATIONAL:"Educational"})[n]||n,i=n=>({LOW:{class:"low",text:"Low"},MEDIUM:{class:"medium",text:"Medium"},HIGH:{class:"high",text:"High"},URGENT:{class:"urgent",text:"Urgent"}})[n]||{class:"medium",text:n};return d?e.jsx("div",{className:"template-selector-overlay",onClick:E,children:e.jsxs("div",{className:"template-selector-modal",onClick:n=>n.stopPropagation(),children:[e.jsxs("div",{className:"modal-header",children:[e.jsx("h2",{children:"Notification Templates"}),e.jsx("button",{className:"close-btn",onClick:E,"aria-label":"Close modal",disabled:y,children:"×"})]}),D&&e.jsxs("div",{className:"error-alert",role:"alert",children:[e.jsx("span",{className:"icon",children:"⚠️"}),e.jsx("span",{children:D}),e.jsx("button",{className:"close-error-btn",onClick:()=>j(""),"aria-label":"Close error message",children:"×"})]}),e.jsxs("div",{className:"tab-navigation",children:[e.jsxs("button",{className:`tab-btn ${A==="browse"?"active":""}`,onClick:()=>{s("browse"),x(!1),m()},disabled:y,children:[e.jsx("span",{className:"icon",children:"📚"}),"Browse Templates"]}),e.jsxs("button",{className:`tab-btn ${A==="create"?"active":""}`,onClick:()=>{s("create"),x(!0),b||m()},disabled:y,children:[e.jsx("span",{className:"icon",children:"➕"}),b?"Edit Template":"Create Template"]})]}),e.jsxs("div",{className:"tab-content",children:[A==="browse"&&e.jsx("div",{className:"browse-templates",children:!F||F.length===0?e.jsxs("div",{className:"no-templates",children:[e.jsx("div",{className:"no-templates-icon",children:"📝"}),e.jsx("h3",{children:"No Templates Found"}),e.jsx("p",{children:"Create your first notification template to get started."}),e.jsxs("button",{className:"btn-primary",onClick:()=>{s("create"),x(!0)},children:[e.jsx("span",{className:"icon",children:"➕"}),"Create Template"]})]}):e.jsx("div",{className:"templates-grid",children:(F||[]).map(n=>{const t=i(n.priority);return e.jsxs("div",{className:"template-card",children:[e.jsxs("div",{className:"template-header",children:[e.jsx("h3",{className:"template-name",children:n.name||"Unnamed Template"}),e.jsxs("div",{className:"template-badges",children:[e.jsx("span",{className:"type-badge",children:I(n.type)}),e.jsx("span",{className:`priority-badge ${t.class}`,children:t.text})]})]}),e.jsxs("div",{className:"template-content",children:[e.jsxs("div",{className:"template-subject",children:[e.jsx("strong",{children:"Subject:"})," ",n.subject||"No subject"]}),e.jsxs("div",{className:"template-description",children:[n.description&&e.jsxs("p",{children:[e.jsx("strong",{children:"Description:"})," ",n.description]}),e.jsxs("div",{className:"template-preview",children:[e.jsx("strong",{children:"Content Preview:"}),e.jsx("div",{className:"content-preview",children:n.content&&n.content.length>150?`${n.content.substring(0,150)}...`:n.content||"No content available"})]})]})]}),e.jsxs("div",{className:"template-actions",children:[e.jsxs("button",{className:"btn-secondary",onClick:()=>N(n),disabled:y,title:"Preview template",children:[e.jsx("span",{className:"icon",children:"👁️"}),"Preview"]}),e.jsxs("button",{className:"btn-primary",onClick:()=>L(n),disabled:y,title:"Edit template",children:[e.jsx("span",{className:"icon",children:"✏️"}),"Edit"]}),e.jsxs("button",{className:"btn-danger",onClick:()=>w(n.templateId),disabled:y,title:"Delete template",children:[e.jsx("span",{className:"icon",children:"🗑️"}),"Delete"]})]})]},n.templateId)})})}),A==="create"&&e.jsx("div",{className:"create-template",children:e.jsxs("form",{onSubmit:o,className:"template-form",children:[e.jsxs("div",{className:"form-section",children:[e.jsx("h3",{children:b?"Edit Template":"Create New Template"}),e.jsxs("div",{className:"form-row",children:[e.jsxs("div",{className:"form-group",children:[e.jsx("label",{htmlFor:"template-name",children:"Template Name *"}),e.jsx("input",{type:"text",id:"template-name",name:"name",value:R.name,onChange:C,placeholder:"Enter template name",disabled:y,className:k.name?"error":""}),k.name&&e.jsx("span",{className:"error-text",children:k.name})]}),e.jsxs("div",{className:"form-group",children:[e.jsx("label",{htmlFor:"template-type",children:"Template Type"}),e.jsxs("select",{id:"template-type",name:"type",value:R.type,onChange:C,disabled:y,children:[e.jsx("option",{value:"APPOINTMENT_REMINDER",children:"Appointment Reminder"}),e.jsx("option",{value:"MEDICATION_REMINDER",children:"Medication Reminder"}),e.jsx("option",{value:"FOLLOW_UP",children:"Follow-up"}),e.jsx("option",{value:"GENERAL",children:"General"}),e.jsx("option",{value:"EMERGENCY",children:"Emergency"}),e.jsx("option",{value:"EDUCATIONAL",children:"Educational"})]})]})]}),e.jsxs("div",{className:"form-row",children:[e.jsxs("div",{className:"form-group",children:[e.jsx("label",{htmlFor:"template-subject",children:"Subject *"}),e.jsx("input",{type:"text",id:"template-subject",name:"subject",value:R.subject,onChange:C,placeholder:"Enter notification subject",disabled:y,className:k.subject?"error":""}),k.subject&&e.jsx("span",{className:"error-text",children:k.subject})]}),e.jsxs("div",{className:"form-group",children:[e.jsx("label",{htmlFor:"template-priority",children:"Priority"}),e.jsxs("select",{id:"template-priority",name:"priority",value:R.priority,onChange:C,disabled:y,children:[e.jsx("option",{value:"LOW",children:"Low"}),e.jsx("option",{value:"MEDIUM",children:"Medium"}),e.jsx("option",{value:"HIGH",children:"High"}),e.jsx("option",{value:"URGENT",children:"Urgent"})]})]})]}),e.jsxs("div",{className:"form-group",children:[e.jsx("label",{htmlFor:"template-description",children:"Description"}),e.jsx("input",{type:"text",id:"template-description",name:"description",value:R.description,onChange:C,placeholder:"Brief description of when to use this template",disabled:y})]}),e.jsxs("div",{className:"form-group",children:[e.jsx("label",{htmlFor:"template-content",children:"Content *"}),e.jsx("textarea",{id:"template-content",name:"content",value:R.content,onChange:C,placeholder:"Enter notification content...",disabled:y,rows:"8",className:k.content?"error":""}),k.content&&e.jsx("span",{className:"error-text",children:k.content}),e.jsxs("div",{className:"help-text",children:[e.jsxs("p",{children:[e.jsx("strong",{children:"Available variables:"})," ","{{patientName}}",", ","{{firstName}}",", ","{{lastName}}",", ","{{doctorName}}",", ","{{clinicName}}",", ","{{currentDate}}",", ","{{currentTime}}"]}),e.jsx("p",{children:e.jsxs("small",{children:["Note: Single curly braces ","{patientName}"," are also supported for backward compatibility."]})})]})]})]}),e.jsxs("div",{className:"form-actions",children:[e.jsx("button",{type:"button",className:"btn-secondary",onClick:()=>{s("browse"),m()},disabled:y,children:"Cancel"}),e.jsx("button",{type:"submit",className:"btn-primary",disabled:y,children:y?e.jsxs(e.Fragment,{children:[e.jsx("span",{className:"loading-spinner small"}),b?"Updating...":"Creating..."]}):e.jsxs(e.Fragment,{children:[e.jsx("span",{className:"icon",children:b?"💾":"➕"}),b?"Update Template":"Create Template"]})})]})]})})]}),f&&e.jsx("div",{className:"template-preview-overlay",onClick:()=>N(null),children:e.jsxs("div",{className:"template-preview-modal",onClick:n=>n.stopPropagation(),children:[e.jsxs("div",{className:"preview-header",children:[e.jsxs("h3",{children:["Template Preview: ",f.name||"Unnamed Template"]}),e.jsx("button",{className:"close-btn",onClick:()=>N(null),"aria-label":"Close preview",children:"×"})]}),e.jsxs("div",{className:"preview-content",children:[e.jsxs("div",{className:"preview-meta",children:[e.jsxs("div",{className:"meta-item",children:[e.jsx("strong",{children:"Type:"})," ",I(f.type)]}),e.jsxs("div",{className:"meta-item",children:[e.jsx("strong",{children:"Priority:"})," ",i(f.priority).text]}),f.description&&e.jsxs("div",{className:"meta-item",children:[e.jsx("strong",{children:"Description:"})," ",f.description]})]}),e.jsxs("div",{className:"preview-message",children:[e.jsxs("div",{className:"message-subject",children:[e.jsx("strong",{children:"Subject:"})," ",f.subject||"No subject"]}),e.jsxs("div",{className:"message-content",children:[e.jsx("strong",{children:"Content:"}),e.jsx("div",{className:"content-text",children:f.content||"No content available"})]})]})]}),e.jsxs("div",{className:"preview-actions",children:[e.jsxs("button",{className:"btn-primary",onClick:()=>{L(f),N(null)},children:[e.jsx("span",{className:"icon",children:"✏️"}),"Edit Template"]}),e.jsx("button",{className:"btn-secondary",onClick:()=>N(null),children:"Close"})]})]})}),y&&e.jsxs("div",{className:"loading-overlay",children:[e.jsx("div",{className:"loading-spinner"}),e.jsx("span",{children:"Processing..."})]})]})}):null};de.propTypes={isOpen:r.bool.isRequired,onClose:r.func.isRequired,templates:r.arrayOf(r.shape({templateId:r.number.isRequired,name:r.string.isRequired,subject:r.string.isRequired,content:r.string.isRequired,type:r.string.isRequired,priority:r.string.isRequired,description:r.string})),onRefresh:r.func.isRequired};const Se=()=>{const{user:d}=re(),[E,F]=c.useState(!0),[v,A]=c.useState(""),[s,f]=c.useState(!1),[N,M]=c.useState(!1),[x,b]=c.useState([]),[S,y]=c.useState([]),[p,D]=c.useState([]),[j,R]=c.useState({totalSent:0,pendingNotifications:0,todaysSent:0,mostUsedTemplate:null}),[$,k]=c.useState(""),[U,m]=c.useState("all"),[C,L]=c.useState("week");c.useEffect(()=>{d&&(d.userId||d.id)&&O()},[d]);const O=c.useCallback(async()=>{try{F(!0),A("");const t=d?.userId||d?.id;if(!t){A("Doctor ID not found. Please login again."),F(!1);return}console.log("Loading dashboard data for doctor:",t);const[u,h,g]=await Promise.allSettled([H.getPatientsWithAppointments(t),H.getNotificationTemplates(),H.getNotificationHistory(t)]);if(u.status==="fulfilled"&&u.value.success?b(u.value.data||[]):(console.error("Failed to load patients:",u.value?.error||u.reason),b([])),h.status==="fulfilled"&&h.value.success?(console.log("Templates loaded successfully:",h.value.data),y(h.value.data||[])):(console.error("Failed to load templates:",h.value?.error||h.reason),y([]),h.status==="rejected"&&A("Failed to load notification templates. Please try refreshing the page.")),g.status==="fulfilled"&&g.value.success){const q=g.value.data||[];D(q),o(q)}else console.error("Failed to load notification history:",g.value?.error||g.reason),D([])}catch(t){console.error("Error loading dashboard data:",t),A("Failed to load dashboard data")}finally{F(!1)}},[d]),o=t=>{const u=new Date().toDateString(),h=t.filter(P=>new Date(P.sentAt).toDateString()===u&&P.status==="SENT").length,g=t.filter(P=>P.status==="PENDING").length,q=t.filter(P=>P.status==="SENT").length,W=t.filter(P=>P.status==="DELIVERED").length,K=t.filter(P=>P.status==="FAILED").length,Q=t.filter(P=>P.status==="CANCELLED").length,X=t.filter(P=>P.status==="READ").length,B={};t.forEach(P=>{P.templateName&&(B[P.templateName]=(B[P.templateName]||0)+1)});const Z=Object.keys(B).length>0?Object.keys(B).reduce((P,J)=>B[P]>B[J]?P:J):null;R({totalSent:q,pendingNotifications:g,todaysSent:h,mostUsedTemplate:Z,delivered:W,failed:K,cancelled:Q,read:X})},w=async t=>{try{const u=d?.userId||d?.id;if(!u)return{success:!1,error:"Doctor ID not found. Please login again."};const h=await H.sendNotification(t,u);if(h.success){f(!1);const g=await H.getNotificationHistory(u);if(g.success){const q=g.data||[];D(q),o(q)}return{success:!0,message:h.message||"Notification sent successfully!"}}else return{success:!1,error:h.error||"Failed to send notification"}}catch(u){return console.error("Error sending notification:",u),{success:!1,error:"An unexpected error occurred while sending notification"}}},I=async t=>{try{const u=d?.userId||d?.id;if(!u)return{success:!1,error:"Doctor ID not found. Please login again."};const h=await H.unsendNotification(t,u);if(h.success){const g=await H.getNotificationHistory(u);if(g.success){const q=g.data||[];D(q),o(q)}return{success:!0,message:h.message||"Notification cancelled successfully!"}}else return{success:!1,error:h.error||"Failed to cancel notification"}}catch(u){return console.error("Error cancelling notification:",u),{success:!1,error:"An unexpected error occurred while cancelling notification"}}},i=async(t,u)=>{try{const h=await H.bulkOperation(t,u);if(h.success){const g=d?.userId||d?.id;if(g){const q=await H.getNotificationHistory(g);if(q.success){const W=q.data||[];D(W),o(W)}}return{success:!0,message:h.message||`Bulk ${t} completed successfully!`}}else return{success:!1,error:h.error||`Failed to perform bulk ${t}`}}catch(h){return console.error(`Error performing bulk ${t}:`,h),{success:!1,error:`An unexpected error occurred during bulk ${t}`}}},n=()=>{let t=[...p];$&&(t=t.filter(g=>g.patientId===parseInt($))),U!=="all"&&(t=t.filter(g=>g.status===U.toUpperCase()));const u=new Date,h=new Date;switch(C){case"today":h.setHours(0,0,0,0);break;case"week":h.setDate(u.getDate()-7);break;case"month":h.setMonth(u.getMonth()-1);break;default:h.setFullYear(1900)}return t=t.filter(g=>new Date(g.createdAt)>=h),t.sort((g,q)=>new Date(q.createdAt)-new Date(g.createdAt))};return E?e.jsxs("div",{className:"notification-management-loading",children:[e.jsx("div",{className:"loading-spinner"}),e.jsx("p",{children:"Loading notification management dashboard..."})]}):!d||!d.userId&&!d.id?e.jsx("div",{className:"notification-management-loading",children:e.jsxs("div",{className:"error-message",children:[e.jsx("span",{className:"icon",children:"⚠️"}),e.jsx("p",{children:"Please login to access the notification management dashboard."})]})}):e.jsxs("div",{className:"notification-management-dashboard",children:[e.jsxs("div",{className:"dashboard-header",children:[e.jsxs("div",{className:"header-info",children:[e.jsx("h1",{children:"Notification Management"}),e.jsx("p",{children:"Send notifications and manage communication with your patients"})]}),e.jsxs("div",{className:"header-actions",children:[e.jsxs("button",{className:"btn-secondary",onClick:()=>M(!0),"aria-label":"Manage notification templates",children:[e.jsx("span",{className:"icon",children:"📋"}),"Manage Templates"]}),e.jsxs("button",{className:"btn-primary",onClick:()=>f(!0),"aria-label":"Send new notification",children:[e.jsx("span",{className:"icon",children:"📤"}),"Send Notification"]})]})]}),v&&e.jsxs("div",{className:"error-alert",role:"alert",children:[e.jsx("span",{className:"icon",children:"⚠️"}),e.jsx("span",{children:v}),e.jsx("button",{className:"close-btn",onClick:()=>A(""),"aria-label":"Close error message",children:"×"})]}),e.jsxs("div",{className:"analytics-grid",children:[e.jsxs("div",{className:"analytics-card",children:[e.jsx("div",{className:"card-icon sent",children:"📤"}),e.jsxs("div",{className:"card-content",children:[e.jsx("h3",{children:"Total Sent"}),e.jsx("p",{className:"stat-number",children:j.totalSent})]})]}),e.jsxs("div",{className:"analytics-card",children:[e.jsx("div",{className:"card-icon pending",children:"⏳"}),e.jsxs("div",{className:"card-content",children:[e.jsx("h3",{children:"Pending"}),e.jsx("p",{className:"stat-number",children:j.pendingNotifications})]})]}),e.jsxs("div",{className:"analytics-card",children:[e.jsx("div",{className:"card-icon today",children:"📅"}),e.jsxs("div",{className:"card-content",children:[e.jsx("h3",{children:"Today's Sent"}),e.jsx("p",{className:"stat-number",children:j.todaysSent})]})]}),e.jsxs("div",{className:"analytics-card",children:[e.jsx("div",{className:"card-icon template",children:"🎯"}),e.jsxs("div",{className:"card-content",children:[e.jsx("h3",{children:"Most Used Template"}),e.jsx("p",{className:"stat-text",children:j.mostUsedTemplate||"None"})]})]})]}),e.jsx("div",{className:"filters-section",children:e.jsxs("div",{className:"filters-group",children:[e.jsxs("div",{className:"filter-item",children:[e.jsx("label",{htmlFor:"patient-filter",children:"Filter by Patient:"}),e.jsxs("select",{id:"patient-filter",value:$,onChange:t=>k(t.target.value),className:"filter-select",children:[e.jsx("option",{value:"",children:"All Patients"}),x.map(t=>e.jsxs("option",{value:t.userId,children:[t.firstName||"Unknown"," ",t.lastName||"Patient"," (",t.email||"No email",")"]},t.userId))]})]}),e.jsxs("div",{className:"filter-item",children:[e.jsx("label",{htmlFor:"status-filter",children:"Filter by Status:"}),e.jsxs("select",{id:"status-filter",value:U,onChange:t=>m(t.target.value),className:"filter-select",children:[e.jsx("option",{value:"all",children:"All Status"}),e.jsx("option",{value:"SENT",children:"Sent"}),e.jsx("option",{value:"PENDING",children:"Pending"}),e.jsx("option",{value:"DELIVERED",children:"Delivered"}),e.jsx("option",{value:"FAILED",children:"Failed"}),e.jsx("option",{value:"CANCELLED",children:"Cancelled"}),e.jsx("option",{value:"READ",children:"Read"})]})]}),e.jsxs("div",{className:"filter-item",children:[e.jsx("label",{htmlFor:"date-filter",children:"Date Range:"}),e.jsxs("select",{id:"date-filter",value:C,onChange:t=>L(t.target.value),className:"filter-select",children:[e.jsx("option",{value:"today",children:"Today"}),e.jsx("option",{value:"week",children:"Past Week"}),e.jsx("option",{value:"month",children:"Past Month"}),e.jsx("option",{value:"all",children:"All Time"})]})]}),e.jsx("button",{className:"btn-secondary reset-filters",onClick:()=>{k(""),m("all"),L("week")},"aria-label":"Reset all filters",children:"Reset Filters"})]})}),e.jsxs("div",{className:"history-section",children:[e.jsxs("div",{className:"section-header",children:[e.jsx("h2",{children:"Notification History"}),e.jsx("div",{className:"history-actions",children:e.jsxs("button",{className:"btn-secondary",onClick:()=>O(),"aria-label":"Refresh notification history",children:[e.jsx("span",{className:"icon",children:"🔄"}),"Refresh"]})})]}),e.jsx(oe,{notifications:n(),patients:x,onUnsend:t=>I(t),onBulkOperation:i,onRefresh:()=>{const t=d?.userId||d?.id;t&&H.getNotificationHistory(t).then(u=>{if(u.success){const h=u.data||[];D(h),o(h)}})}})]}),s&&e.jsx(ce,{isOpen:s,onClose:()=>f(!1),onSend:w,patients:x,templates:S}),N&&e.jsx(de,{isOpen:N,onClose:()=>M(!1),templates:S,onRefresh:O})]})},me=({isActive:d})=>d?e.jsx("div",{className:"notification-manager-tab",children:e.jsx("div",{className:"tab-content-wrapper",children:e.jsx(Se,{})})}):null;me.propTypes={isActive:r.bool.isRequired};const Re=()=>{const{user:d,logout:E}=re();fe();const F=d?.firstName?`${d.firstName} ${d.lastName||""}`:d?.username||"Doctor",[v,A]=c.useState("overview"),[s,f]=c.useState(!0),[N,M]=c.useState(""),[x,b]=c.useState([]),[S,y]=c.useState([]),[p,D]=c.useState(null),[j,R]=c.useState(null),[$,k]=c.useState([]),[U,m]=c.useState(!1),[C,L]=c.useState(!1),[O,o]=c.useState([]),[w,I]=c.useState({regimen:"",startDate:"",endDate:"",adherence:"",sideEffects:"",notes:"",setAsTemplate:!1}),[i,n]=c.useState({status:"Scheduled",notes:"",scheduleRecheck:!1,recheckDateTime:"",durationMinutes:30}),[t,u]=c.useState(!1);c.useEffect(()=>{h()},[]);const h=async()=>{try{f(!0),M("");const[a,l]=await Promise.allSettled([V.get("/appointments/doctor/my-appointments"),V.get("/doctors/availability/my-slots")]);if(a.status==="fulfilled"){const T=a.value?.data;Array.isArray(T)?b(T):(console.warn("Appointments data is not an array:",T),b([]))}else console.error("Failed to load appointments:",a.reason),b([]);if(l.status==="fulfilled"){const T=l.value?.data;Array.isArray(T)?y(T):(console.warn("Availability slots data is not an array:",T),y([]))}else console.error("Failed to load availability slots:",l.reason),y([])}catch(a){console.error("Error loading dashboard data:",a),M("Failed to load dashboard data"),b([]),y([])}finally{f(!1)}},g=async a=>{try{if(D(a),n({status:a.status||"Scheduled",notes:a.appointmentNotes||"",scheduleRecheck:!1,recheckDateTime:"",durationMinutes:a.durationMinutes||30}),a.status==="Completed"){R(null),k([]);return}const l=await V.get(`/appointments/${a.appointmentId}/patient-record`);if(!l.data.success){console.warn("Failed to load patient record:",l.data.message),R(null),k([]);return}R(l.data);const T=await V.get(`/arv-treatments/patient/${a.patientUser.userId}`);k(Array.isArray(T.data)?T.data:[]),A("patient-record")}catch(l){console.error("Error loading patient record:",l),alert("Failed to load patient record")}},q=async()=>{try{const a=await V.get("/arv-treatments/templates");o(Array.isArray(a.data)?a.data:[])}catch{o([])}},W=async a=>{try{const l=await V.post("/doctors/availability",{slotDate:a.slotDate,startTime:a.startTime,durationMinutes:parseInt(a.durationMinutes),notes:a.notes||""});if(l.data.success)return await h(),{success:!0};throw new Error(l.data.message||"Failed to add slot")}catch(l){return console.error("Failed to add slot:",l),{success:!1,error:l.response?.data?.message||l.message||"Failed to add slot"}}},K=async a=>{try{console.log("Deleting slot:",a);const l=await V.delete(`/doctors/availability/${a}`);l.data.success?(alert("Availability slot deleted successfully!"),h()):alert(l.data.message||"Failed to delete slot")}catch(l){console.error("Error deleting slot:",l),alert("Failed to delete availability slot")}},Q=async a=>{try{if(!p)return;const l=await V.put(`/patient-records/patient/${p.patientUser.userId}`,a);l.data.success?(alert("Patient record updated successfully!"),g(p)):alert(l.data.message||"Failed to update record")}catch(l){console.error("Error saving patient record:",l),alert("Failed to save patient record")}},X=async a=>{try{if(!p)throw new Error("No appointment selected");console.debug("Uploading image for patient:",{patientId:p.patientUser.userId,dataLength:a?.length});const l=await V.post("/patient-records/upload-image",{imageData:a});if(l.data?.success)return await g(p),!0;throw new Error(l.data?.message||"Failed to upload image")}catch(l){throw console.error("Error uploading image:",l),l}},B=a=>{const{name:l,value:T,type:_,checked:Y}=a.target;I(te=>({...te,[l]:_==="checkbox"?Y:T}))},Z=a=>{I({regimen:a.regimen,startDate:new Date().toISOString().slice(0,10),endDate:"",adherence:a.adherence||"",sideEffects:a.sideEffects||"",notes:"",setAsTemplate:!1}),L(!1),m(!0)},P=async a=>{try{if(!p)return;const l=await V.post("/arv-treatments/add",{...a,patientUserId:p.patientUser.userId,appointmentId:p.appointmentId});l.data.success?(alert("ARV treatment added successfully!"),m(!1),I({regimen:"",startDate:"",endDate:"",adherence:"",sideEffects:"",notes:""}),g(p)):alert(l.data.message||"Failed to add ARV treatment")}catch(l){console.error("Error adding ARV treatment:",l),alert("Failed to add ARV treatment")}},J=async a=>{try{const l=await V.delete(`/arv-treatments/${a}`);l.data.success?(alert("ARV treatment deleted successfully!"),g(p)):alert(l.data.message||"Failed to delete ARV treatment")}catch(l){console.error("Error deleting ARV treatment:",l),alert("Failed to delete ARV treatment")}},ee=a=>{const{name:l,value:T,type:_,checked:Y}=a.target;n(te=>({...te,[l]:_==="checkbox"?Y:T}))},he=async()=>{try{if(!p)return;const a=await V.put(`/appointments/${p.appointmentId}/status`,i);a.data.success?(alert("Appointment updated successfully!"),h(),g(p)):alert(a.data.message||"Failed to update appointment")}catch(a){console.error("Error updating appointment:",a),alert("Failed to update appointment")}},se=[{id:"overview",label:"Overview",icon:"📊"},{id:"appointments",label:"Appointments",icon:"📅"},{id:"patient-record",label:"Patient Records",icon:"📋"},{id:"availability",label:"My Availability",icon:"🕒"},{id:"notifications",label:"Notifications",icon:"🔔"}];console.log("Navigation items array:",se),console.log("Navigation items length:",se.length);const ne=()=>{const a=Array.isArray(S)?S:[],l=Array.isArray(x)?x:[];return e.jsx(z,{children:e.jsxs("div",{className:"overview-content",children:[e.jsxs("div",{className:"content-header",children:[e.jsx("h2",{children:"Dashboard Overview"}),e.jsxs("p",{children:["Welcome, Dr. ",F]})]}),e.jsxs("div",{className:"stats-grid",children:[e.jsxs("div",{className:"stat-card",children:[e.jsx("h3",{children:"Total Appointments"}),e.jsx("p",{className:"stat-number",children:l.length})]}),e.jsxs("div",{className:"stat-card",children:[e.jsx("h3",{children:"Available Slots"}),e.jsx("p",{className:"stat-number",children:a.filter(T=>!T.isBooked).length})]}),e.jsxs("div",{className:"stat-card",children:[e.jsx("h3",{children:"Booked Slots"}),e.jsx("p",{className:"stat-number",children:a.filter(T=>T.isBooked).length})]}),e.jsxs("div",{className:"stat-card",children:[e.jsx("h3",{children:"Today's Appointments"}),e.jsx("p",{className:"stat-number",children:l.filter(T=>{try{const _=new Date().toDateString(),Y=new Date(T.appointmentDateTime).toDateString();return _===Y}catch{return!1}}).length})]})]}),e.jsxs("div",{className:"recent-appointments",children:[e.jsx("h3",{children:"Recent Appointments"}),l.length>0?e.jsx("div",{className:"appointments-list",children:l.slice(0,5).map(T=>e.jsxs("div",{className:"appointment-card",children:[e.jsxs("div",{className:"appointment-header",children:[e.jsxs("h4",{children:["Patient: ",G(T.patientUser?.username)]}),e.jsx("span",{className:`status ${T.status?.toLowerCase()}`,children:G(T.status)})]}),e.jsxs("div",{className:"appointment-details",children:[e.jsxs("p",{children:[e.jsx("strong",{children:"Date:"})," ",ae(T.appointmentDateTime)]}),e.jsxs("p",{children:[e.jsx("strong",{children:"Duration:"})," ",T.durationMinutes||30," minutes"]})]}),e.jsx("div",{className:"appointment-actions",children:e.jsx("button",{className:"btn-primary",onClick:()=>g(T),children:"View Record"})})]},T.appointmentId))}):e.jsx("div",{className:"no-data",children:e.jsx("p",{children:"No appointments found."})})]})]})})},ue=()=>{const a=Array.isArray(x)?x:[];return e.jsx(z,{children:e.jsxs("div",{className:"appointments-content",children:[e.jsxs("div",{className:"content-header",children:[e.jsx("h2",{children:"My Appointments"}),e.jsx("p",{children:"Manage your scheduled appointments"})]}),a.length>0?e.jsx("div",{className:"appointments-list",children:a.map(l=>e.jsxs("div",{className:"appointment-card",children:[e.jsxs("div",{className:"appointment-header",children:[e.jsxs("h4",{children:["Patient: ",G(l.patientUser?.username)]}),e.jsx("span",{className:`status ${l.status?.toLowerCase()}`,children:G(l.status)})]}),e.jsxs("div",{className:"appointment-details",children:[e.jsxs("p",{children:[e.jsx("strong",{children:"Date & Time:"})," ",ae(l.appointmentDateTime)]}),e.jsxs("p",{children:[e.jsx("strong",{children:"Duration:"})," ",l.durationMinutes||30," minutes"]}),e.jsxs("p",{children:[e.jsx("strong",{children:"Patient Email:"})," ",G(l.patientUser?.email)]}),l.appointmentNotes&&e.jsxs("p",{children:[e.jsx("strong",{children:"Notes:"})," ",G(l.appointmentNotes)]})]}),e.jsx("div",{className:"appointment-actions",children:l.status!=="Completed"&&e.jsx("button",{className:"btn-primary",onClick:()=>g(l),children:"View Patient Record"})})]},l.appointmentId))}):e.jsx("div",{className:"no-data",children:e.jsx("p",{children:"No appointments scheduled."})})]})})},pe=()=>e.jsx(z,{children:e.jsx("div",{className:"patient-record-content",children:p?e.jsxs(e.Fragment,{children:[e.jsxs("div",{className:"appointment-header",children:[e.jsxs("h3",{children:["Patient Record - ",j?.isPrivate?"Anonymous":p.patientUser?.username]}),e.jsxs("p",{children:["Appointment: ",ae(p.appointmentDateTime)]})]}),j?.isPrivate&&e.jsxs("div",{className:"privacy-alert",children:[e.jsx("i",{className:"fas fa-lock"}),e.jsx("p",{children:"This patient has enabled private mode. Some information will be hidden for privacy reasons."})]}),e.jsx(ye,{record:j,onSave:Q,onImageUpload:X,hideImage:j?.isPrivate}),e.jsxs("div",{className:"arv-treatments-section",children:[e.jsxs("div",{className:"section-header",children:[e.jsx("h3",{children:"ARV Treatments"}),e.jsx("button",{className:"btn-secondary",onClick:()=>{q(),L(!0)},style:{marginRight:8},children:"Select from templates"}),e.jsx("button",{className:"btn-primary",onClick:()=>m(!0),children:"Create custom ARV"})]}),Array.isArray($)&&$.length>0?e.jsx("div",{className:"treatments-list",children:$.map(a=>e.jsxs("div",{className:"treatment-card",children:[e.jsxs("div",{className:"treatment-header",children:[e.jsx("h4",{children:G(a.regimen)}),e.jsx("span",{className:`status ${a.isActive?"active":"inactive"}`,children:a.isActive?"Active":"Inactive"})]}),e.jsxs("div",{className:"treatment-details",children:[e.jsxs("p",{children:[e.jsx("strong",{children:"Start Date:"})," ",ie(a.startDate)]}),a.endDate&&e.jsxs("p",{children:[e.jsx("strong",{children:"End Date:"})," ",ie(a.endDate)]}),a.adherence&&e.jsxs("p",{children:[e.jsx("strong",{children:"Adherence:"})," ",G(a.adherence)]}),a.sideEffects&&e.jsxs("p",{children:[e.jsx("strong",{children:"Side Effects:"})," ",G(a.sideEffects)]}),a.notes&&e.jsxs("p",{children:[e.jsx("strong",{children:"Notes:"})," ",G(a.notes)]})]}),e.jsx("div",{className:"treatment-actions",children:e.jsx("button",{className:"btn-danger",onClick:()=>J(a.arvTreatmentId),children:"Delete"})})]},a.arvTreatmentId))}):e.jsx("div",{className:"no-data",children:e.jsx("p",{children:"No ARV treatments recorded."})})]}),e.jsxs("div",{className:"appointment-update-section",children:[e.jsx("h3",{children:"Update Appointment"}),e.jsxs("div",{className:"form-row",children:[e.jsxs("div",{className:"form-group",children:[e.jsx("label",{children:"Status:"}),e.jsxs("select",{name:"status",value:i.status,onChange:ee,children:[e.jsx("option",{value:"Scheduled",children:"Scheduled"}),e.jsx("option",{value:"In Progress",children:"In Progress"}),e.jsx("option",{value:"Completed",children:"Completed"}),e.jsx("option",{value:"Cancelled",children:"Cancelled"})]})]}),e.jsxs("div",{className:"form-group",children:[e.jsx("label",{children:"Duration (minutes):"}),e.jsx("input",{type:"number",name:"durationMinutes",value:i.durationMinutes,onChange:ee,min:"15",max:"120"})]})]}),e.jsxs("div",{className:"form-group",children:[e.jsx("label",{children:"Notes:"}),e.jsx("textarea",{name:"notes",value:i.notes,onChange:ee,rows:"3",placeholder:"Add appointment notes..."})]}),e.jsx("button",{className:"btn-primary",onClick:he,children:"Update Appointment"})]})]}):e.jsxs("div",{className:"no-selection",children:[e.jsx("p",{children:"Please select an appointment from the appointments tab to view patient records."}),e.jsx("button",{className:"btn-primary",onClick:()=>A("appointments"),children:"Go to Appointments"})]})})}),xe=()=>{const a=Array.isArray(S)?S:[];return e.jsxs("div",{className:"availability-content",children:[e.jsx("h3",{children:"Manage Your Availability"}),e.jsx(z,{children:e.jsx(be,{slots:a,userRole:"doctor",currentUserId:d?.userId||d?.id,doctorInfo:{userId:d?.userId||d?.id,firstName:d?.firstName||"Doctor",lastName:d?.lastName||d?.username||""},onAddSlot:W,onDeleteSlot:K,onBookSlot:null,onCancelBooking:null})})]})},je=()=>e.jsx(z,{children:e.jsx(me,{isActive:v==="notifications"})}),Ne=()=>{switch(v){case"overview":return ne();case"appointments":return ue();case"patient-record":return pe();case"availability":return xe();case"notifications":return je();default:return ne()}};return s?e.jsxs("div",{className:"loading-container",children:[e.jsx("div",{className:"loading-spinner"}),e.jsx("p",{children:"Loading dashboard..."})]}):e.jsxs("div",{className:"doctor-dashboard",children:[e.jsx(ve,{title:"Doctor Dashboard",subtitle:`Welcome, Dr. ${F}`}),e.jsxs("div",{className:"dashboard-layout",children:[e.jsxs("div",{className:"dashboard-sidebar",children:[e.jsx("div",{className:"sidebar-header",children:e.jsx("h1",{children:"Navigation"})}),e.jsx("nav",{className:"dashboard-nav",children:se.map(a=>e.jsx("div",{className:"nav-item",children:e.jsxs("button",{className:`nav-button ${v===a.id?"active":""}`,onClick:()=>A(a.id),children:[e.jsx("span",{className:"nav-icon",children:a.icon}),a.label]})},a.id))})]}),e.jsx("div",{className:"dashboard-main",children:e.jsxs("div",{className:"dashboard-content",children:[N&&e.jsxs("div",{className:"error-banner",children:[e.jsx("span",{children:N}),e.jsx("button",{className:"close-error",onClick:()=>M(""),children:"×"})]}),Ne()]})})]}),C&&e.jsx("div",{className:"modal-overlay",children:e.jsxs("div",{className:"modal-content",style:{width:"700px",maxWidth:"95vw",minHeight:"350px",maxHeight:"80vh",overflow:"visible",padding:"2rem"},children:[e.jsxs("div",{className:"modal-header",style:{marginBottom:"1rem"},children:[e.jsx("h3",{children:"Select ARV Template"}),e.jsx("button",{className:"close-btn",onClick:()=>L(!1),children:"×"})]}),e.jsx("div",{style:{maxHeight:"55vh",overflowY:"auto",minHeight:"180px"},children:O.length===0?e.jsx("div",{children:"No templates available."}):e.jsxs("table",{className:"patient-detail-table",style:{minWidth:600},children:[e.jsx("thead",{children:e.jsxs("tr",{children:[e.jsx("th",{children:"Regimen"}),e.jsx("th",{children:"Adherence"}),e.jsx("th",{children:"Side Effects"}),e.jsx("th",{children:"Notes"}),e.jsx("th",{children:"Type"}),e.jsx("th",{children:"Action"})]})}),e.jsx("tbody",{children:O.map(a=>e.jsxs("tr",{children:[e.jsx("td",{children:a.regimen}),e.jsx("td",{children:a.adherence}),e.jsx("td",{children:a.sideEffects}),e.jsx("td",{children:a.notes}),e.jsx("td",{children:a.notes==="default template"?"Default":a.notes==="template"?"Template":"Custom"}),e.jsx("td",{children:e.jsx("button",{className:"btn-primary",onClick:()=>Z(a),children:"Use"})})]},a.arvTreatmentId))})]})})]})}),U&&e.jsx(we,{isOpen:U,onClose:()=>m(!1),onSubmit:P,formData:w,onChange:B})]})};export{Re as default};
