import{r as c,j as e,R as xe,u as ne,n as H,d as V,E as K}from"./index-ottAEAuo.js";import{P as r,D as je}from"./DashboardHeader-BBOE_SHF.js";import{U as Ne,P as ge}from"./UnifiedCalendar-C8K6WHrd.js";import{s as G,c as se,a as ae}from"./renderUtils-BkDR37Se.js";import"./UserProfileDropdown-Cl9Ss_zV.js";import"./SafeComponents-D2JEnfCK.js";const fe=({isOpen:o,onClose:D,onSubmit:P,formData:g,onChange:E})=>{const[s,f]=c.useState({regimen:"",startDate:"",endDate:"",adherence:"",sideEffects:"",notes:"",setAsTemplate:!1}),[j,M]=c.useState(!1);c.useEffect(()=>{g&&(f({regimen:g.regimen||"",startDate:g.startDate||"",endDate:g.endDate||"",adherence:g.adherence||"",sideEffects:g.sideEffects||"",notes:g.notes||"",setAsTemplate:g.setAsTemplate||!1}),M(g.setAsTemplate||!1))},[g]);const x=T=>{const{name:v,value:N}=T.target;f(k=>({...k,[v]:N})),E(T)},y=T=>{M(T.target.checked),E({target:{name:"setAsTemplate",value:T.target.checked}}),T.target.checked?(E({target:{name:"notes",value:"template"}}),f(v=>({...v,notes:"template"}))):(E({target:{name:"notes",value:""}}),f(v=>({...v,notes:""})))},S=T=>{j||E(T)},m=T=>{T.preventDefault(),P({...s,setAsTemplate:j})};return o?e.jsx("div",{className:"modal-overlay",children:e.jsxs("div",{className:"modal-content",children:[e.jsxs("div",{className:"modal-header",children:[e.jsx("h3",{children:g?"Edit ARV Treatment":"Add New ARV Treatment"}),e.jsx("button",{className:"close-btn",onClick:D,children:"×"})]}),e.jsxs("form",{onSubmit:m,className:"arv-form",children:[e.jsxs("div",{className:"form-row",children:[e.jsxs("div",{className:"form-group",children:[e.jsx("label",{children:"Regimen:"}),e.jsx("input",{type:"text",name:"regimen",value:s.regimen,onChange:x,placeholder:"Enter ARV regimen",required:!0})]}),e.jsxs("div",{className:"form-group",children:[e.jsx("label",{children:"Start Date:"}),e.jsx("input",{type:"date",name:"startDate",value:s.startDate,onChange:x,required:!0})]})]}),e.jsxs("div",{className:"form-row",children:[e.jsxs("div",{className:"form-group",children:[e.jsx("label",{children:"End Date:"}),e.jsx("input",{type:"date",name:"endDate",value:s.endDate,onChange:x})]}),e.jsxs("div",{className:"form-group",children:[e.jsx("label",{children:"Adherence:"}),e.jsxs("select",{name:"adherence",value:s.adherence,onChange:x,children:[e.jsx("option",{value:"",children:"Select adherence level"}),e.jsx("option",{value:"Excellent",children:"Excellent (95-100%)"}),e.jsx("option",{value:"Good",children:"Good (85-94%)"}),e.jsx("option",{value:"Fair",children:"Fair (75-84%)"}),e.jsx("option",{value:"Poor",children:"Poor (Under 75%)"})]})]})]}),e.jsxs("div",{className:"form-group",children:[e.jsx("label",{children:"Side Effects:"}),e.jsx("textarea",{name:"sideEffects",value:s.sideEffects,onChange:x,rows:"3",placeholder:"Enter any side effects..."})]}),e.jsx("div",{className:"form-group",children:e.jsxs("label",{children:[e.jsx("input",{type:"checkbox",checked:j,onChange:y})," ","Set as template"]})}),e.jsxs("div",{className:"form-group",children:[e.jsx("label",{children:"Notes:"}),e.jsx("textarea",{name:"notes",value:s.notes,onChange:S,rows:"3",placeholder:j?"Notes will be set as 'template'":"Enter additional notes...",disabled:j,style:j?{background:"#eee"}:{}})]}),e.jsxs("div",{className:"form-actions",children:[e.jsx("button",{type:"submit",className:"btn-primary",children:g?"Save Changes":"Add Treatment"}),e.jsx("button",{type:"button",className:"btn-secondary",onClick:D,children:"Cancel"})]})]})]})}):null},ie=({patients:o,selectedPatientIds:D,onSelectionChange:P,multiple:g=!1,error:E,disabled:s=!1,placeholder:f="Search patients..."})=>{const[j,M]=c.useState(""),[x,y]=c.useState(!1),[S,m]=c.useState([]);c.useEffect(()=>{const h=o.filter(w=>{const L=`${w.firstName||""} ${w.lastName||""}`.toLowerCase(),$=(w.email||"").toLowerCase(),d=j.toLowerCase();return L.includes(d)||$.includes(d)});m(h)},[o,j]);const T=h=>{if(s)return;let w;g?D.includes(h)?w=D.filter(L=>L!==h):w=[...D,h]:(w=D.includes(h)?[]:[h],y(!1)),P(w)},v=h=>{if(s)return;const w=D.filter(L=>L!==h);P(w)},N=()=>o.filter(h=>D.includes(h.userId)),k=h=>{M(h.target.value),y(!0)},q=()=>{s||y(!0)},R=h=>{h.target.closest(".patient-selector")||y(!1)};c.useEffect(()=>(document.addEventListener("click",R),()=>document.removeEventListener("click",R)),[]);const U=N();return e.jsxs("div",{className:`patient-selector ${E?"error":""} ${s?"disabled":""}`,children:[U.length>0&&e.jsx("div",{className:"selected-patients",children:U.map(h=>e.jsxs("div",{className:"selected-patient-tag",children:[e.jsxs("span",{className:"patient-info",children:[e.jsxs("span",{className:"patient-name",children:[h.firstName||"Unknown"," ",h.lastName||"Patient"]}),e.jsx("span",{className:"patient-email",children:h.email||"No email"})]}),e.jsx("button",{type:"button",className:"remove-patient",onClick:()=>v(h.userId),disabled:s,"aria-label":`Remove ${h.firstName} ${h.lastName}`,children:"×"})]},h.userId))}),e.jsxs("div",{className:"search-input-container",children:[e.jsx("input",{type:"text",className:"search-input",placeholder:U.length>0?"Add more patients...":f,value:j,onChange:k,onFocus:q,disabled:s,"aria-expanded":x,"aria-haspopup":"listbox",role:"combobox"}),e.jsx("div",{className:"search-icon",children:e.jsxs("svg",{viewBox:"0 0 24 24",fill:"none",stroke:"currentColor",strokeWidth:"2",children:[e.jsx("circle",{cx:"11",cy:"11",r:"8"}),e.jsx("path",{d:"m21 21-4.35-4.35"})]})})]}),x&&!s&&e.jsx("div",{className:"patient-dropdown",role:"listbox",children:S.length>0?e.jsxs(e.Fragment,{children:[g&&e.jsxs("div",{className:"dropdown-header",children:[e.jsxs("span",{children:["Select patients (",D.length," selected)"]}),D.length>0&&e.jsx("button",{type:"button",className:"clear-all",onClick:()=>P([]),children:"Clear All"})]}),e.jsx("div",{className:"patient-list",children:S.map(h=>{const w=D.includes(h.userId);return e.jsxs("div",{className:`patient-option ${w?"selected":""}`,onClick:()=>T(h.userId),role:"option","aria-selected":w,children:[e.jsxs("div",{className:"patient-info",children:[e.jsxs("div",{className:"patient-name",children:[h.firstName||"Unknown"," ",h.lastName||"Patient"]}),e.jsxs("div",{className:"patient-details",children:[e.jsx("span",{className:"patient-email",children:h.email||"No email"}),h.lastAppointment&&e.jsxs("span",{className:"last-appointment",children:["Last visit: ",new Date(h.lastAppointment).toLocaleDateString()]})]})]}),g&&e.jsx("div",{className:"selection-indicator",children:w?e.jsx("svg",{viewBox:"0 0 24 24",fill:"currentColor",children:e.jsx("path",{d:"M9 16.17L4.83 12l-1.42 1.41L9 19 21 7l-1.41-1.41z"})}):e.jsx("div",{className:"checkbox-empty"})})]},h.userId)})})]}):e.jsx("div",{className:"no-patients",children:j?e.jsxs(e.Fragment,{children:[e.jsx("span",{className:"icon",children:"🔍"}),e.jsxs("span",{children:['No patients found matching "',j,'"']})]}):e.jsxs(e.Fragment,{children:[e.jsx("span",{className:"icon",children:"👥"}),e.jsx("span",{children:"No patients with appointments found"})]})})}),g&&D.length>0&&e.jsxs("div",{className:"selection-summary",children:[e.jsxs("span",{className:"summary-text",children:[D.length," patient",D.length!==1?"s":""," selected"]}),e.jsxs("button",{type:"button",className:"view-selection",onClick:()=>y(!x),disabled:s,children:[x?"Hide":"View"," Selection"]})]}),E&&e.jsxs("div",{className:"error-message",role:"alert",children:[e.jsx("span",{className:"error-icon",children:"⚠️"}),e.jsx("span",{children:E})]}),e.jsx("div",{className:"help-text",children:g?"Search and select multiple patients to send notifications to":"Search and select a patient to send notification to"})]})};ie.propTypes={patients:r.arrayOf(r.shape({userId:r.number.isRequired,firstName:r.string.isRequired,lastName:r.string.isRequired,email:r.string.isRequired,lastAppointment:r.string})).isRequired,selectedPatientIds:r.arrayOf(r.number).isRequired,onSelectionChange:r.func.isRequired,multiple:r.bool,error:r.string,disabled:r.bool,placeholder:r.string};const re=({isOpen:o,onClose:D,onSend:P,patients:g,templates:E})=>{const[s,f]=c.useState({patientIds:[],templateId:"",customMessage:"",subject:"",priority:"MEDIUM",sendNow:!0,scheduledDateTime:"",useCustomMessage:!1}),[j,M]=c.useState(""),[x,y]=c.useState(null),[S,m]=c.useState(!1),[T,v]=c.useState(""),[N,k]=c.useState({});c.useEffect(()=>{o&&q()},[o]),c.useEffect(()=>{w()},[s.templateId,s.customMessage,s.useCustomMessage,s.patientIds,w]);const q=()=>{f({patientIds:[],templateId:"",customMessage:"",subject:"",priority:"MEDIUM",sendNow:!0,scheduledDateTime:"",useCustomMessage:!1}),M(""),y(null),v(""),k({})},R=d=>{const{name:b,value:I,type:i,checked:a}=d.target;f(t=>({...t,[b]:i==="checkbox"?a:I})),N[b]&&k(t=>({...t,[b]:""}))},U=d=>{const b=d.target.value,I=E.find(i=>i.templateId===parseInt(b));f(i=>({...i,templateId:b,subject:I?I.subject:"",useCustomMessage:!1})),y(I)},h=d=>{f(b=>({...b,patientIds:d}))},w=c.useCallback(()=>{if(s.useCustomMessage&&s.customMessage){M(s.customMessage);return}if(!x){M("");return}let d=x.body||x.content||"";if(s.patientIds.length===1){const b=g.find(I=>I.userId===s.patientIds[0]);b&&(d=d.replace(/\{\{patientName\}\}/g,`${b.firstName} ${b.lastName}`).replace(/\{\{firstName\}\}/g,b.firstName).replace(/\{\{lastName\}\}/g,b.lastName).replace(/\{patientName\}/g,`${b.firstName} ${b.lastName}`).replace(/\{firstName\}/g,b.firstName).replace(/\{lastName\}/g,b.lastName))}else s.patientIds.length>1&&(d=d.replace(/\{\{patientName\}\}/g,"[Patient Name]").replace(/\{\{firstName\}\}/g,"[First Name]").replace(/\{\{lastName\}\}/g,"[Last Name]").replace(/\{patientName\}/g,"[Patient Name]").replace(/\{firstName\}/g,"[First Name]").replace(/\{lastName\}/g,"[Last Name]"));d=d.replace(/\{\{doctorName\}\}/g,"Dr. [Doctor Name]").replace(/\{\{clinicName\}\}/g,"HIV Medical Clinic").replace(/\{\{currentDate\}\}/g,new Date().toLocaleDateString()).replace(/\{\{currentTime\}\}/g,new Date().toLocaleTimeString()).replace(/\{\{date\}\}/g,new Date().toLocaleDateString()).replace(/\{\{time\}\}/g,new Date().toLocaleTimeString()).replace(/\{doctorName\}/g,"Dr. [Doctor Name]").replace(/\{clinicName\}/g,"HIV Medical Clinic").replace(/\{date\}/g,new Date().toLocaleDateString()).replace(/\{time\}/g,new Date().toLocaleTimeString()),M(d)},[s.useCustomMessage,s.customMessage,x,s.patientIds,g]),L=()=>{const d={};return s.patientIds.length===0&&(d.patients="Please select at least one patient"),!s.useCustomMessage&&!s.templateId&&(d.template="Please select a template or use custom message"),s.useCustomMessage&&!s.customMessage.trim()&&(d.customMessage="Please enter a custom message"),s.subject.trim()||(d.subject="Please enter a subject"),!s.sendNow&&!s.scheduledDateTime&&(d.scheduledDateTime="Please select a date and time for scheduling"),!s.sendNow&&s.scheduledDateTime&&new Date(s.scheduledDateTime)<=new Date&&(d.scheduledDateTime="Scheduled time must be in the future"),k(d),Object.keys(d).length===0},$=async d=>{if(d.preventDefault(),!!L()){m(!0),v("");try{const b={...s,message:s.useCustomMessage?s.customMessage:x?.body||x?.content||"",templateName:x?.name||"Custom Message"},I=await P(b);I.success?D():v(I.error||"Failed to send notification")}catch(b){v("An unexpected error occurred"),console.error("Error sending notification:",b)}finally{m(!1)}}};return o?e.jsx("div",{className:"notification-send-modal-overlay",onClick:D,children:e.jsxs("div",{className:"notification-send-modal",onClick:d=>d.stopPropagation(),children:[e.jsxs("div",{className:"modal-header",children:[e.jsx("h2",{children:"Send Notification"}),e.jsx("button",{className:"close-btn",onClick:D,"aria-label":"Close modal",disabled:S,children:"×"})]}),e.jsxs("form",{onSubmit:$,className:"modal-form",children:[T&&e.jsxs("div",{className:"error-alert",role:"alert",children:[e.jsx("span",{className:"icon",children:"⚠️"}),e.jsx("span",{children:T})]}),e.jsxs("div",{className:"form-section",children:[e.jsx("h3",{children:"Select Recipients"}),e.jsx(ie,{patients:g,selectedPatientIds:s.patientIds,onSelectionChange:h,error:N.patients,multiple:!0})]}),e.jsxs("div",{className:"form-section",children:[e.jsx("h3",{children:"Message Content"}),e.jsxs("div",{className:"message-type-selection",children:[e.jsxs("label",{className:"radio-option",children:[e.jsx("input",{type:"radio",name:"messageType",checked:!s.useCustomMessage,onChange:()=>f(d=>({...d,useCustomMessage:!1})),disabled:S}),e.jsx("span",{children:"Use Template"})]}),e.jsxs("label",{className:"radio-option",children:[e.jsx("input",{type:"radio",name:"messageType",checked:s.useCustomMessage,onChange:()=>f(d=>({...d,useCustomMessage:!0})),disabled:S}),e.jsx("span",{children:"Custom Message"})]})]})]}),!s.useCustomMessage&&e.jsxs("div",{className:"form-section",children:[e.jsx("label",{htmlFor:"template-select",children:"Select Template:"}),e.jsxs("select",{id:"template-select",name:"templateId",value:s.templateId,onChange:U,disabled:S,className:N.template?"error":"",children:[e.jsx("option",{value:"",children:"-- Select a template --"}),E.map(d=>e.jsxs("option",{value:d.templateId,children:[d.name," (",d.type,")"]},d.templateId))]}),N.template&&e.jsx("span",{className:"error-text",children:N.template}),x&&e.jsxs("div",{className:"help-text",children:[e.jsxs("p",{children:[e.jsx("strong",{children:"Available variables in templates:"})," ","{{patientName}}",", ","{{firstName}}",", ","{{lastName}}",", ","{{doctorName}}",", ","{{clinicName}}",", ","{{currentDate}}",", ","{{currentTime}}"]}),e.jsx("p",{children:e.jsx("small",{children:"These variables will be automatically replaced with actual values when the notification is sent."})})]})]}),s.useCustomMessage&&e.jsxs("div",{className:"form-section",children:[e.jsx("label",{htmlFor:"custom-message",children:"Custom Message:"}),e.jsx("textarea",{id:"custom-message",name:"customMessage",value:s.customMessage,onChange:R,disabled:S,rows:"6",placeholder:"Enter your custom message here...",className:N.customMessage?"error":""}),N.customMessage&&e.jsx("span",{className:"error-text",children:N.customMessage}),e.jsxs("div",{className:"help-text",children:[e.jsxs("p",{children:[e.jsx("strong",{children:"Available variables:"})," ","{{patientName}}",", ","{{firstName}}",", ","{{lastName}}",", ","{{doctorName}}",", ","{{clinicName}}",", ","{{currentDate}}",", ","{{currentTime}}"]}),e.jsx("p",{children:e.jsxs("small",{children:["Note: Single curly braces ","{patientName}"," are also supported for backward compatibility."]})})]})]}),e.jsxs("div",{className:"form-section",children:[e.jsx("label",{htmlFor:"subject",children:"Subject:"}),e.jsx("input",{type:"text",id:"subject",name:"subject",value:s.subject,onChange:R,disabled:S,placeholder:"Enter notification subject",className:N.subject?"error":""}),N.subject&&e.jsx("span",{className:"error-text",children:N.subject})]}),e.jsxs("div",{className:"form-section",children:[e.jsx("label",{htmlFor:"priority",children:"Priority:"}),e.jsxs("select",{id:"priority",name:"priority",value:s.priority,onChange:R,disabled:S,children:[e.jsx("option",{value:"LOW",children:"Low"}),e.jsx("option",{value:"MEDIUM",children:"Medium"}),e.jsx("option",{value:"HIGH",children:"High"}),e.jsx("option",{value:"URGENT",children:"Urgent"})]})]}),e.jsxs("div",{className:"form-section",children:[e.jsx("h3",{children:"Delivery Options"}),e.jsxs("div",{className:"scheduling-options",children:[e.jsxs("label",{className:"radio-option",children:[e.jsx("input",{type:"radio",name:"deliveryType",checked:s.sendNow,onChange:()=>f(d=>({...d,sendNow:!0})),disabled:S}),e.jsx("span",{children:"Send Now"})]}),e.jsxs("label",{className:"radio-option",children:[e.jsx("input",{type:"radio",name:"deliveryType",checked:!s.sendNow,onChange:()=>f(d=>({...d,sendNow:!1})),disabled:S}),e.jsx("span",{children:"Schedule for Later"})]})]}),!s.sendNow&&e.jsxs("div",{className:"scheduled-time-section",children:[e.jsx("label",{htmlFor:"scheduled-time",children:"Scheduled Date & Time:"}),e.jsx("input",{type:"datetime-local",id:"scheduled-time",name:"scheduledDateTime",value:s.scheduledDateTime,onChange:R,disabled:S,min:new Date().toISOString().slice(0,16),className:N.scheduledDateTime?"error":""}),N.scheduledDateTime&&e.jsx("span",{className:"error-text",children:N.scheduledDateTime})]})]}),j&&e.jsxs("div",{className:"form-section",children:[e.jsx("h3",{children:"Message Preview"}),e.jsxs("div",{className:"message-preview",children:[e.jsxs("div",{className:"preview-header",children:[e.jsx("strong",{children:"Subject:"})," ",s.subject]}),e.jsx("div",{className:"preview-content",children:j}),e.jsx("div",{className:"preview-footer",children:e.jsxs("small",{children:["Priority: ",s.priority," | Recipients: ",s.patientIds.length]})})]})]}),e.jsxs("div",{className:"modal-actions",children:[e.jsx("button",{type:"button",className:"btn-secondary",onClick:D,disabled:S,children:"Cancel"}),e.jsx("button",{type:"submit",className:"btn-primary",disabled:S||s.patientIds.length===0,children:S?e.jsxs(e.Fragment,{children:[e.jsx("span",{className:"loading-spinner small"}),"Sending..."]}):e.jsxs(e.Fragment,{children:[e.jsx("span",{className:"icon",children:"📤"}),s.sendNow?"Send Now":"Schedule Notification"]})})]})]})]})}):null};re.propTypes={isOpen:r.bool.isRequired,onClose:r.func.isRequired,onSend:r.func.isRequired,patients:r.arrayOf(r.shape({userId:r.number.isRequired,firstName:r.string.isRequired,lastName:r.string.isRequired,email:r.string.isRequired})).isRequired,templates:r.arrayOf(r.shape({templateId:r.number.isRequired,name:r.string.isRequired,subject:r.string.isRequired,body:r.string,content:r.string,type:r.string.isRequired})).isRequired};const le=({notifications:o,patients:D,onUnsend:P,onBulkOperation:g,onRefresh:E})=>{const[s,f]=c.useState({key:"createdAt",direction:"desc"}),[j,M]=c.useState([]),[x,y]=c.useState(!1),[S,m]=c.useState([]),T=c.useMemo(()=>s.key?[...o].sort((i,a)=>{let t=i[s.key],u=a[s.key];return(s.key==="createdAt"||s.key==="sentAt"||s.key==="scheduledAt")&&(t=new Date(t),u=new Date(u)),t<u?s.direction==="asc"?-1:1:t>u?s.direction==="asc"?1:-1:0}):o,[o,s]),v=i=>{f(a=>({key:i,direction:a.key===i&&a.direction==="asc"?"desc":"asc"}))},N=i=>{M(a=>a.includes(i)?a.filter(t=>t!==i):[...a,i])},k=()=>{j.length===o.length?M([]):M(o.map(i=>i.notificationId))},q=async i=>{if(j.length!==0){y(!0);try{(await g(i,j)).success&&M([])}catch(a){console.error(`Error performing bulk ${i}:`,a)}finally{y(!1)}}},R=async i=>{y(!0);try{await P(i)}catch(a){console.error("Error unsending notification:",a)}finally{y(!1)}},U=i=>{m(a=>a.includes(i)?a.filter(t=>t!==i):[...a,i])},h=i=>{if(i.patientName)return i.patientName;const a=D.find(t=>t.userId===i.patientId);return a?`${a.firstName} ${a.lastName}`:"Unknown Patient"},w=i=>({SENT:{class:"sent",text:"Sent",icon:"✓"},PENDING:{class:"pending",text:"Pending",icon:"⏳"},DELIVERED:{class:"delivered",text:"Delivered",icon:"📧"},FAILED:{class:"failed",text:"Failed",icon:"⚠️"},CANCELLED:{class:"cancelled",text:"Cancelled",icon:"✕"},READ:{class:"read",text:"Read",icon:"👁️"}})[i]||{class:"unknown",text:i,icon:"?"},L=i=>({LOW:{class:"low",text:"Low"},MEDIUM:{class:"medium",text:"Medium"},HIGH:{class:"high",text:"High"},URGENT:{class:"urgent",text:"Urgent"}})[i]||{class:"medium",text:i},$=i=>{if(!i)return"-";try{return new Date(i).toLocaleString()}catch{return"Invalid Date"}},d=i=>i?i.length>35?`${i.substring(0,35)}...`:i:"-",b=i=>i.status==="PENDING"||i.status==="SCHEDULED",I=j.filter(i=>{const a=o.find(t=>t.notificationId===i);return a&&b(a)}).length;return o.length===0?e.jsxs("div",{className:"notification-history-empty",children:[e.jsx("div",{className:"empty-icon",children:"📨"}),e.jsx("h3",{children:"No Notifications Found"}),e.jsx("p",{children:"No notification history available. Send your first notification to see it here."}),e.jsxs("button",{className:"btn-primary",onClick:E,children:[e.jsx("span",{className:"icon",children:"🔄"}),"Refresh"]})]}):e.jsxs("div",{className:"notification-history-table",children:[j.length>0&&e.jsxs("div",{className:"bulk-actions-bar",children:[e.jsxs("div",{className:"selection-info",children:[e.jsxs("span",{children:[j.length," notification",j.length!==1?"s":""," selected"]}),I>0&&e.jsxs("span",{className:"unsendable-count",children:["(",I," can be unsent)"]})]}),e.jsxs("div",{className:"bulk-actions",children:[I>0&&e.jsxs("button",{className:"btn-danger",onClick:()=>q("unsend"),disabled:x,children:[e.jsx("span",{className:"icon",children:"🚫"}),"Unsend Selected"]}),e.jsx("button",{className:"btn-secondary",onClick:()=>M([]),disabled:x,children:"Clear Selection"})]})]}),e.jsx("div",{className:"table-container",children:e.jsxs("table",{className:"notifications-table",children:[e.jsx("thead",{children:e.jsxs("tr",{children:[e.jsx("th",{className:"checkbox-column",children:e.jsx("input",{type:"checkbox",checked:j.length===o.length&&o.length>0,onChange:k,disabled:x,"aria-label":"Select all notifications"})}),e.jsxs("th",{className:`sortable ${s.key==="subject"?s.direction:""}`,onClick:()=>v("subject"),children:["Subject",e.jsx("span",{className:"sort-indicator",children:s.key==="subject"&&(s.direction==="asc"?"↑":"↓")})]}),e.jsxs("th",{className:`sortable ${s.key==="patientId"?s.direction:""}`,onClick:()=>v("patientId"),children:["Patient",e.jsx("span",{className:"sort-indicator",children:s.key==="patientId"&&(s.direction==="asc"?"↑":"↓")})]}),e.jsxs("th",{className:`sortable ${s.key==="status"?s.direction:""}`,onClick:()=>v("status"),children:["Status",e.jsx("span",{className:"sort-indicator",children:s.key==="status"&&(s.direction==="asc"?"↑":"↓")})]}),e.jsxs("th",{className:`sortable ${s.key==="priority"?s.direction:""}`,onClick:()=>v("priority"),children:["Priority",e.jsx("span",{className:"sort-indicator",children:s.key==="priority"&&(s.direction==="asc"?"↑":"↓")})]}),e.jsxs("th",{className:`sortable ${s.key==="createdAt"?s.direction:""}`,onClick:()=>v("createdAt"),children:["Created",e.jsx("span",{className:"sort-indicator",children:s.key==="createdAt"&&(s.direction==="asc"?"↑":"↓")})]}),e.jsxs("th",{className:`sortable ${s.key==="sentAt"?s.direction:""}`,onClick:()=>v("sentAt"),children:["Sent",e.jsx("span",{className:"sort-indicator",children:s.key==="sentAt"&&(s.direction==="asc"?"↑":"↓")})]}),e.jsx("th",{children:"Actions"})]})}),e.jsx("tbody",{children:T.map(i=>{const a=w(i.status),t=L(i.priority),u=S.includes(i.notificationId),p=j.includes(i.notificationId);return e.jsxs(xe.Fragment,{children:[e.jsxs("tr",{className:`notification-row ${p?"selected":""}`,children:[e.jsx("td",{className:"checkbox-column",children:e.jsx("input",{type:"checkbox",checked:p,onChange:()=>N(i.notificationId),disabled:x,"aria-label":`Select notification ${i.subject}`})}),e.jsxs("td",{className:"subject-column",children:[e.jsxs("div",{className:"subject-content",children:[e.jsx("span",{className:"subject-text",children:d(i.subject)}),e.jsx("button",{className:"expand-btn",onClick:()=>U(i.notificationId),"aria-label":`${u?"Collapse":"Expand"} message content`,children:u?"▼":"▶"})]}),e.jsx("div",{className:"template-name",children:i.templateName&&e.jsxs("span",{className:"template-badge",children:["📋 ",i.templateName]})})]}),e.jsx("td",{className:"patient-column",children:h(i)}),e.jsx("td",{className:"status-column",children:e.jsxs("span",{className:`status-badge ${a.class}`,children:[e.jsx("span",{className:"status-icon",children:a.icon}),a.text]})}),e.jsx("td",{className:"priority-column",children:e.jsx("span",{className:`priority-badge ${t.class}`,children:t.text})}),e.jsx("td",{className:"date-column",children:$(i.createdAt)}),e.jsx("td",{className:"date-column",children:$(i.sentAt)}),e.jsx("td",{className:"actions-column",children:e.jsxs("div",{className:"action-buttons",children:[b(i)&&e.jsx("button",{className:"btn-danger-small",onClick:()=>R(i.notificationId),disabled:x,title:"Unsend notification",children:"🚫"}),e.jsx("button",{className:"btn-secondary-small",onClick:()=>U(i.notificationId),title:"View message content",children:"👁️"})]})})]}),u&&e.jsx("tr",{className:"expanded-row",children:e.jsx("td",{colSpan:"8",children:e.jsxs("div",{className:"expanded-content",children:[e.jsxs("div",{className:"message-content",children:[e.jsx("h4",{children:"Message Content:"}),e.jsx("div",{className:"message-text",children:i.message||i.content})]}),i.scheduledAt&&e.jsxs("div",{className:"scheduled-info",children:[e.jsx("h4",{children:"Scheduling Information:"}),e.jsxs("p",{children:[e.jsx("strong",{children:"Scheduled for:"})," ",$(i.scheduledAt)]})]}),i.errorMessage&&e.jsxs("div",{className:"error-info",children:[e.jsx("h4",{children:"Error Details:"}),e.jsx("p",{className:"error-text",children:i.errorMessage})]})]})})})]},i.notificationId)})})]})}),x&&e.jsxs("div",{className:"loading-overlay",children:[e.jsx("div",{className:"loading-spinner"}),e.jsx("span",{children:"Processing..."})]})]})};le.propTypes={notifications:r.arrayOf(r.shape({notificationId:r.number.isRequired,subject:r.string.isRequired,message:r.string,content:r.string,patientId:r.number.isRequired,status:r.string.isRequired,priority:r.string.isRequired,createdAt:r.string.isRequired,sentAt:r.string,scheduledAt:r.string,templateName:r.string,errorMessage:r.string})).isRequired,patients:r.arrayOf(r.shape({userId:r.number.isRequired,firstName:r.string.isRequired,lastName:r.string.isRequired})).isRequired,onUnsend:r.func.isRequired,onBulkOperation:r.func.isRequired,onRefresh:r.func.isRequired};const ce=({isOpen:o,onClose:D,templates:P=[],onRefresh:g})=>{const[E,s]=c.useState("browse"),[f,j]=c.useState(null),[M,x]=c.useState(!1),[y,S]=c.useState(null),[m,T]=c.useState(!1),[v,N]=c.useState(""),[k,q]=c.useState({name:"",subject:"",content:"",type:"APPOINTMENT_REMINDER",priority:"MEDIUM",description:""}),[R,U]=c.useState({}),h=()=>{q({name:"",subject:"",content:"",type:"APPOINTMENT_REMINDER",priority:"MEDIUM",description:""}),U({}),N(""),S(null),x(!1)},w=a=>{const{name:t,value:u}=a.target;q(p=>({...p,[t]:u})),R[t]&&U(p=>({...p,[t]:""}))},L=a=>{q({name:a.name||"",subject:a.subject||"",content:a.content||"",type:a.type||"APPOINTMENT_REMINDER",priority:a.priority||"MEDIUM",description:a.description||""}),S(a),x(!0),s("create")},$=()=>{const a={};return k.name.trim()||(a.name="Template name is required"),k.subject.trim()||(a.subject="Subject is required"),k.content.trim()||(a.content="Content is required"),U(a),Object.keys(a).length===0},d=async a=>{if(a.preventDefault(),!!$()){T(!0),N("");try{const t=y?`/api/v1/doctor/notifications/templates/${y.templateId}`:"/api/v1/doctor/notifications/templates",C=await(await fetch(t,{method:y?"PUT":"POST",headers:{"Content-Type":"application/json",Authorization:`Bearer ${localStorage.getItem("token")}`},body:JSON.stringify(k)})).json();C.success?(h(),s("browse"),g()):N(C.message||"Failed to save template")}catch(t){N("An unexpected error occurred"),console.error("Error saving template:",t)}finally{T(!1)}}},b=async a=>{if(window.confirm("Are you sure you want to delete this template?")){T(!0),N("");try{const u=await(await fetch(`/api/v1/doctor/notifications/templates/${a}`,{method:"DELETE",headers:{Authorization:`Bearer ${localStorage.getItem("token")}`}})).json();u.success?g():N(u.message||"Failed to delete template")}catch(t){N("An unexpected error occurred"),console.error("Error deleting template:",t)}finally{T(!1)}}},I=a=>({APPOINTMENT_REMINDER:"Appointment Reminder",MEDICATION_REMINDER:"Medication Reminder",FOLLOW_UP:"Follow-up",GENERAL:"General",EMERGENCY:"Emergency",EDUCATIONAL:"Educational"})[a]||a,i=a=>({LOW:{class:"low",text:"Low"},MEDIUM:{class:"medium",text:"Medium"},HIGH:{class:"high",text:"High"},URGENT:{class:"urgent",text:"Urgent"}})[a]||{class:"medium",text:a};return o?e.jsx("div",{className:"template-selector-overlay",onClick:D,children:e.jsxs("div",{className:"template-selector-modal",onClick:a=>a.stopPropagation(),children:[e.jsxs("div",{className:"modal-header",children:[e.jsx("h2",{children:"Notification Templates"}),e.jsx("button",{className:"close-btn",onClick:D,"aria-label":"Close modal",disabled:m,children:"×"})]}),v&&e.jsxs("div",{className:"error-alert",role:"alert",children:[e.jsx("span",{className:"icon",children:"⚠️"}),e.jsx("span",{children:v}),e.jsx("button",{className:"close-error-btn",onClick:()=>N(""),"aria-label":"Close error message",children:"×"})]}),e.jsxs("div",{className:"tab-navigation",children:[e.jsxs("button",{className:`tab-btn ${E==="browse"?"active":""}`,onClick:()=>{s("browse"),x(!1),h()},disabled:m,children:[e.jsx("span",{className:"icon",children:"📚"}),"Browse Templates"]}),e.jsxs("button",{className:`tab-btn ${E==="create"?"active":""}`,onClick:()=>{s("create"),x(!0),y||h()},disabled:m,children:[e.jsx("span",{className:"icon",children:"➕"}),y?"Edit Template":"Create Template"]})]}),e.jsxs("div",{className:"tab-content",children:[E==="browse"&&e.jsx("div",{className:"browse-templates",children:!P||P.length===0?e.jsxs("div",{className:"no-templates",children:[e.jsx("div",{className:"no-templates-icon",children:"📝"}),e.jsx("h3",{children:"No Templates Found"}),e.jsx("p",{children:"Create your first notification template to get started."}),e.jsxs("button",{className:"btn-primary",onClick:()=>{s("create"),x(!0)},children:[e.jsx("span",{className:"icon",children:"➕"}),"Create Template"]})]}):e.jsx("div",{className:"templates-grid",children:(P||[]).map(a=>{const t=i(a.priority);return e.jsxs("div",{className:"template-card",children:[e.jsxs("div",{className:"template-header",children:[e.jsx("h3",{className:"template-name",children:a.name||"Unnamed Template"}),e.jsxs("div",{className:"template-badges",children:[e.jsx("span",{className:"type-badge",children:I(a.type)}),e.jsx("span",{className:`priority-badge ${t.class}`,children:t.text})]})]}),e.jsxs("div",{className:"template-content",children:[e.jsxs("div",{className:"template-subject",children:[e.jsx("strong",{children:"Subject:"})," ",a.subject||"No subject"]}),e.jsxs("div",{className:"template-description",children:[a.description&&e.jsxs("p",{children:[e.jsx("strong",{children:"Description:"})," ",a.description]}),e.jsxs("div",{className:"template-preview",children:[e.jsx("strong",{children:"Content Preview:"}),e.jsx("div",{className:"content-preview",children:a.content&&a.content.length>150?`${a.content.substring(0,150)}...`:a.content||"No content available"})]})]})]}),e.jsxs("div",{className:"template-actions",children:[e.jsxs("button",{className:"btn-secondary",onClick:()=>j(a),disabled:m,title:"Preview template",children:[e.jsx("span",{className:"icon",children:"👁️"}),"Preview"]}),e.jsxs("button",{className:"btn-primary",onClick:()=>L(a),disabled:m,title:"Edit template",children:[e.jsx("span",{className:"icon",children:"✏️"}),"Edit"]}),e.jsxs("button",{className:"btn-danger",onClick:()=>b(a.templateId),disabled:m,title:"Delete template",children:[e.jsx("span",{className:"icon",children:"🗑️"}),"Delete"]})]})]},a.templateId)})})}),E==="create"&&e.jsx("div",{className:"create-template",children:e.jsxs("form",{onSubmit:d,className:"template-form",children:[e.jsxs("div",{className:"form-section",children:[e.jsx("h3",{children:y?"Edit Template":"Create New Template"}),e.jsxs("div",{className:"form-row",children:[e.jsxs("div",{className:"form-group",children:[e.jsx("label",{htmlFor:"template-name",children:"Template Name *"}),e.jsx("input",{type:"text",id:"template-name",name:"name",value:k.name,onChange:w,placeholder:"Enter template name",disabled:m,className:R.name?"error":""}),R.name&&e.jsx("span",{className:"error-text",children:R.name})]}),e.jsxs("div",{className:"form-group",children:[e.jsx("label",{htmlFor:"template-type",children:"Template Type"}),e.jsxs("select",{id:"template-type",name:"type",value:k.type,onChange:w,disabled:m,children:[e.jsx("option",{value:"APPOINTMENT_REMINDER",children:"Appointment Reminder"}),e.jsx("option",{value:"MEDICATION_REMINDER",children:"Medication Reminder"}),e.jsx("option",{value:"FOLLOW_UP",children:"Follow-up"}),e.jsx("option",{value:"GENERAL",children:"General"}),e.jsx("option",{value:"EMERGENCY",children:"Emergency"}),e.jsx("option",{value:"EDUCATIONAL",children:"Educational"})]})]})]}),e.jsxs("div",{className:"form-row",children:[e.jsxs("div",{className:"form-group",children:[e.jsx("label",{htmlFor:"template-subject",children:"Subject *"}),e.jsx("input",{type:"text",id:"template-subject",name:"subject",value:k.subject,onChange:w,placeholder:"Enter notification subject",disabled:m,className:R.subject?"error":""}),R.subject&&e.jsx("span",{className:"error-text",children:R.subject})]}),e.jsxs("div",{className:"form-group",children:[e.jsx("label",{htmlFor:"template-priority",children:"Priority"}),e.jsxs("select",{id:"template-priority",name:"priority",value:k.priority,onChange:w,disabled:m,children:[e.jsx("option",{value:"LOW",children:"Low"}),e.jsx("option",{value:"MEDIUM",children:"Medium"}),e.jsx("option",{value:"HIGH",children:"High"}),e.jsx("option",{value:"URGENT",children:"Urgent"})]})]})]}),e.jsxs("div",{className:"form-group",children:[e.jsx("label",{htmlFor:"template-description",children:"Description"}),e.jsx("input",{type:"text",id:"template-description",name:"description",value:k.description,onChange:w,placeholder:"Brief description of when to use this template",disabled:m})]}),e.jsxs("div",{className:"form-group",children:[e.jsx("label",{htmlFor:"template-content",children:"Content *"}),e.jsx("textarea",{id:"template-content",name:"content",value:k.content,onChange:w,placeholder:"Enter notification content...",disabled:m,rows:"8",className:R.content?"error":""}),R.content&&e.jsx("span",{className:"error-text",children:R.content}),e.jsxs("div",{className:"help-text",children:[e.jsxs("p",{children:[e.jsx("strong",{children:"Available variables:"})," ","{{patientName}}",", ","{{firstName}}",", ","{{lastName}}",", ","{{doctorName}}",", ","{{clinicName}}",", ","{{currentDate}}",", ","{{currentTime}}"]}),e.jsx("p",{children:e.jsxs("small",{children:["Note: Single curly braces ","{patientName}"," are also supported for backward compatibility."]})})]})]})]}),e.jsxs("div",{className:"form-actions",children:[e.jsx("button",{type:"button",className:"btn-secondary",onClick:()=>{s("browse"),h()},disabled:m,children:"Cancel"}),e.jsx("button",{type:"submit",className:"btn-primary",disabled:m,children:m?e.jsxs(e.Fragment,{children:[e.jsx("span",{className:"loading-spinner small"}),y?"Updating...":"Creating..."]}):e.jsxs(e.Fragment,{children:[e.jsx("span",{className:"icon",children:y?"💾":"➕"}),y?"Update Template":"Create Template"]})})]})]})})]}),f&&e.jsx("div",{className:"template-preview-overlay",onClick:()=>j(null),children:e.jsxs("div",{className:"template-preview-modal",onClick:a=>a.stopPropagation(),children:[e.jsxs("div",{className:"preview-header",children:[e.jsxs("h3",{children:["Template Preview: ",f.name||"Unnamed Template"]}),e.jsx("button",{className:"close-btn",onClick:()=>j(null),"aria-label":"Close preview",children:"×"})]}),e.jsxs("div",{className:"preview-content",children:[e.jsxs("div",{className:"preview-meta",children:[e.jsxs("div",{className:"meta-item",children:[e.jsx("strong",{children:"Type:"})," ",I(f.type)]}),e.jsxs("div",{className:"meta-item",children:[e.jsx("strong",{children:"Priority:"})," ",i(f.priority).text]}),f.description&&e.jsxs("div",{className:"meta-item",children:[e.jsx("strong",{children:"Description:"})," ",f.description]})]}),e.jsxs("div",{className:"preview-message",children:[e.jsxs("div",{className:"message-subject",children:[e.jsx("strong",{children:"Subject:"})," ",f.subject||"No subject"]}),e.jsxs("div",{className:"message-content",children:[e.jsx("strong",{children:"Content:"}),e.jsx("div",{className:"content-text",children:f.content||"No content available"})]})]})]}),e.jsxs("div",{className:"preview-actions",children:[e.jsxs("button",{className:"btn-primary",onClick:()=>{L(f),j(null)},children:[e.jsx("span",{className:"icon",children:"✏️"}),"Edit Template"]}),e.jsx("button",{className:"btn-secondary",onClick:()=>j(null),children:"Close"})]})]})}),m&&e.jsxs("div",{className:"loading-overlay",children:[e.jsx("div",{className:"loading-spinner"}),e.jsx("span",{children:"Processing..."})]})]})}):null};ce.propTypes={isOpen:r.bool.isRequired,onClose:r.func.isRequired,templates:r.arrayOf(r.shape({templateId:r.number.isRequired,name:r.string.isRequired,subject:r.string.isRequired,content:r.string.isRequired,type:r.string.isRequired,priority:r.string.isRequired,description:r.string})),onRefresh:r.func.isRequired};const ve=()=>{const{user:o}=ne(),[D,P]=c.useState(!0),[g,E]=c.useState(""),[s,f]=c.useState(!1),[j,M]=c.useState(!1),[x,y]=c.useState([]),[S,m]=c.useState([]),[T,v]=c.useState([]),[N,k]=c.useState({totalSent:0,pendingNotifications:0,todaysSent:0,mostUsedTemplate:null}),[q,R]=c.useState(""),[U,h]=c.useState("all"),[w,L]=c.useState("week"),$=c.useCallback(async()=>{try{P(!0),E("");const t=o?.userId||o?.id;if(!t){E("Doctor ID not found. Please login again."),P(!1);return}console.log("Loading dashboard data for doctor:",t);const[u,p,C]=await Promise.allSettled([H.getPatientsWithAppointments(t),H.getNotificationTemplates(),H.getNotificationHistory(t)]);if(u.status==="fulfilled"&&u.value.success?y(u.value.data||[]):(console.error("Failed to load patients:",u.value?.error||u.reason),y([])),p.status==="fulfilled"&&p.value.success?(console.log("Templates loaded successfully:",p.value.data),m(p.value.data||[])):(console.error("Failed to load templates:",p.value?.error||p.reason),m([]),p.status==="rejected"&&E("Failed to load notification templates. Please try refreshing the page.")),C.status==="fulfilled"&&C.value.success){const O=C.value.data||[];v(O),d(O)}else console.error("Failed to load notification history:",C.value?.error||C.reason),v([])}catch(t){console.error("Error loading dashboard data:",t),E("Failed to load dashboard data")}finally{P(!1)}},[o]);c.useEffect(()=>{o&&(o.userId||o.id)&&$&&$()},[o,$]);const d=t=>{const u=new Date().toDateString(),p=t.filter(F=>new Date(F.sentAt).toDateString()===u&&F.status==="SENT").length,C=t.filter(F=>F.status==="PENDING").length,O=t.filter(F=>F.status==="SENT").length,W=t.filter(F=>F.status==="DELIVERED").length,Q=t.filter(F=>F.status==="FAILED").length,X=t.filter(F=>F.status==="CANCELLED").length,Z=t.filter(F=>F.status==="READ").length,B={};t.forEach(F=>{F.templateName&&(B[F.templateName]=(B[F.templateName]||0)+1)});const z=Object.keys(B).length>0?Object.keys(B).reduce((F,_)=>B[F]>B[_]?F:_):null;k({totalSent:O,pendingNotifications:C,todaysSent:p,mostUsedTemplate:z,delivered:W,failed:Q,cancelled:X,read:Z})},b=async t=>{try{const u=o?.userId||o?.id;if(!u)return{success:!1,error:"Doctor ID not found. Please login again."};const p=await H.sendNotification(t,u);if(p.success){f(!1);const C=await H.getNotificationHistory(u);if(C.success){const O=C.data||[];v(O),d(O)}return{success:!0,message:p.message||"Notification sent successfully!"}}else return{success:!1,error:p.error||"Failed to send notification"}}catch(u){return console.error("Error sending notification:",u),{success:!1,error:"An unexpected error occurred while sending notification"}}},I=async t=>{try{const u=o?.userId||o?.id;if(!u)return{success:!1,error:"Doctor ID not found. Please login again."};const p=await H.unsendNotification(t,u);if(p.success){const C=await H.getNotificationHistory(u);if(C.success){const O=C.data||[];v(O),d(O)}return{success:!0,message:p.message||"Notification cancelled successfully!"}}else return{success:!1,error:p.error||"Failed to cancel notification"}}catch(u){return console.error("Error cancelling notification:",u),{success:!1,error:"An unexpected error occurred while cancelling notification"}}},i=async(t,u)=>{try{const p=await H.bulkOperation(t,u);if(p.success){const C=o?.userId||o?.id;if(C){const O=await H.getNotificationHistory(C);if(O.success){const W=O.data||[];v(W),d(W)}}return{success:!0,message:p.message||`Bulk ${t} completed successfully!`}}else return{success:!1,error:p.error||`Failed to perform bulk ${t}`}}catch(p){return console.error(`Error performing bulk ${t}:`,p),{success:!1,error:`An unexpected error occurred during bulk ${t}`}}},a=()=>{let t=[...T];q&&(t=t.filter(C=>C.patientId===parseInt(q))),U!=="all"&&(t=t.filter(C=>C.status===U.toUpperCase()));const u=new Date,p=new Date;switch(w){case"today":p.setHours(0,0,0,0);break;case"week":p.setDate(u.getDate()-7);break;case"month":p.setMonth(u.getMonth()-1);break;default:p.setFullYear(1900)}return t=t.filter(C=>new Date(C.createdAt)>=p),t.sort((C,O)=>new Date(O.createdAt)-new Date(C.createdAt))};return D?e.jsxs("div",{className:"notification-management-loading",children:[e.jsx("div",{className:"loading-spinner"}),e.jsx("p",{children:"Loading notification management dashboard..."})]}):!o||!o.userId&&!o.id?e.jsx("div",{className:"notification-management-loading",children:e.jsxs("div",{className:"error-message",children:[e.jsx("span",{className:"icon",children:"⚠️"}),e.jsx("p",{children:"Please login to access the notification management dashboard."})]})}):e.jsxs("div",{className:"notification-management-dashboard",children:[e.jsxs("div",{className:"dashboard-header",children:[e.jsxs("div",{className:"header-info",children:[e.jsx("h1",{children:"Notification Management"}),e.jsx("p",{children:"Send notifications and manage communication with your patients"})]}),e.jsxs("div",{className:"header-actions",children:[e.jsxs("button",{className:"btn-secondary",onClick:()=>M(!0),"aria-label":"Manage notification templates",children:[e.jsx("span",{className:"icon",children:"📋"}),"Manage Templates"]}),e.jsxs("button",{className:"btn-primary",onClick:()=>f(!0),"aria-label":"Send new notification",children:[e.jsx("span",{className:"icon",children:"📤"}),"Send Notification"]})]})]}),g&&e.jsxs("div",{className:"error-alert",role:"alert",children:[e.jsx("span",{className:"icon",children:"⚠️"}),e.jsx("span",{children:g}),e.jsx("button",{className:"close-btn",onClick:()=>E(""),"aria-label":"Close error message",children:"×"})]}),e.jsxs("div",{className:"analytics-grid",children:[e.jsxs("div",{className:"analytics-card",children:[e.jsx("div",{className:"card-icon sent",children:"📤"}),e.jsxs("div",{className:"card-content",children:[e.jsx("h3",{children:"Total Sent"}),e.jsx("p",{className:"stat-number",children:N.totalSent})]})]}),e.jsxs("div",{className:"analytics-card",children:[e.jsx("div",{className:"card-icon pending",children:"⏳"}),e.jsxs("div",{className:"card-content",children:[e.jsx("h3",{children:"Pending"}),e.jsx("p",{className:"stat-number",children:N.pendingNotifications})]})]}),e.jsxs("div",{className:"analytics-card",children:[e.jsx("div",{className:"card-icon today",children:"📅"}),e.jsxs("div",{className:"card-content",children:[e.jsx("h3",{children:"Today's Sent"}),e.jsx("p",{className:"stat-number",children:N.todaysSent})]})]}),e.jsxs("div",{className:"analytics-card",children:[e.jsx("div",{className:"card-icon template",children:"🎯"}),e.jsxs("div",{className:"card-content",children:[e.jsx("h3",{children:"Most Used Template"}),e.jsx("p",{className:"stat-text",children:N.mostUsedTemplate||"None"})]})]})]}),e.jsx("div",{className:"filters-section",children:e.jsxs("div",{className:"filters-group",children:[e.jsxs("div",{className:"filter-item",children:[e.jsx("label",{htmlFor:"patient-filter",children:"Filter by Patient:"}),e.jsxs("select",{id:"patient-filter",value:q,onChange:t=>R(t.target.value),className:"filter-select",children:[e.jsx("option",{value:"",children:"All Patients"}),x.map(t=>e.jsxs("option",{value:t.userId,children:[t.firstName||"Unknown"," ",t.lastName||"Patient"," (",t.email||"No email",")"]},t.userId))]})]}),e.jsxs("div",{className:"filter-item",children:[e.jsx("label",{htmlFor:"status-filter",children:"Filter by Status:"}),e.jsxs("select",{id:"status-filter",value:U,onChange:t=>h(t.target.value),className:"filter-select",children:[e.jsx("option",{value:"all",children:"All Status"}),e.jsx("option",{value:"SENT",children:"Sent"}),e.jsx("option",{value:"PENDING",children:"Pending"}),e.jsx("option",{value:"DELIVERED",children:"Delivered"}),e.jsx("option",{value:"FAILED",children:"Failed"}),e.jsx("option",{value:"CANCELLED",children:"Cancelled"}),e.jsx("option",{value:"READ",children:"Read"})]})]}),e.jsxs("div",{className:"filter-item",children:[e.jsx("label",{htmlFor:"date-filter",children:"Date Range:"}),e.jsxs("select",{id:"date-filter",value:w,onChange:t=>L(t.target.value),className:"filter-select",children:[e.jsx("option",{value:"today",children:"Today"}),e.jsx("option",{value:"week",children:"Past Week"}),e.jsx("option",{value:"month",children:"Past Month"}),e.jsx("option",{value:"all",children:"All Time"})]})]}),e.jsx("button",{className:"btn-secondary reset-filters",onClick:()=>{R(""),h("all"),L("week")},"aria-label":"Reset all filters",children:"Reset Filters"})]})}),e.jsxs("div",{className:"history-section",children:[e.jsxs("div",{className:"section-header",children:[e.jsx("h2",{children:"Notification History"}),e.jsx("div",{className:"history-actions",children:e.jsxs("button",{className:"btn-secondary",onClick:()=>$(),"aria-label":"Refresh notification history",children:[e.jsx("span",{className:"icon",children:"🔄"}),"Refresh"]})})]}),e.jsx(le,{notifications:a(),patients:x,onUnsend:t=>I(t),onBulkOperation:i,onRefresh:()=>{const t=o?.userId||o?.id;t&&H.getNotificationHistory(t).then(u=>{if(u.success){const p=u.data||[];v(p),d(p)}})}})]}),s&&e.jsx(re,{isOpen:s,onClose:()=>f(!1),onSend:b,patients:x,templates:S}),j&&e.jsx(ce,{isOpen:j,onClose:()=>M(!1),templates:S,onRefresh:$})]})},oe=({isActive:o})=>o?e.jsx("div",{className:"notification-manager-tab",children:e.jsx("div",{className:"tab-content-wrapper",children:e.jsx(ve,{})})}):null;oe.propTypes={isActive:r.bool.isRequired};const Ae=()=>{const{user:o}=ne(),D=o?.firstName?`${o.firstName} ${o.lastName||""}`:o?.username||"Doctor",[P,g]=c.useState("overview"),[E,s]=c.useState(!0),[f,j]=c.useState(""),[M,x]=c.useState([]),[y,S]=c.useState([]),[m,T]=c.useState(null),[v,N]=c.useState(null),[k,q]=c.useState([]),[R,U]=c.useState(!1),[h,w]=c.useState(!1),[L,$]=c.useState([]),[d,b]=c.useState({regimen:"",startDate:"",endDate:"",adherence:"",sideEffects:"",notes:"",setAsTemplate:!1}),[I,i]=c.useState({status:"Scheduled",notes:"",scheduleRecheck:!1,recheckDateTime:"",durationMinutes:30});c.useEffect(()=>{a()},[]);const a=async()=>{try{s(!0),j("");const[n,l]=await Promise.allSettled([V.get("/appointments/doctor/my-appointments"),V.get("/doctors/availability/my-slots")]);if(n.status==="fulfilled"){const A=n.value?.data;Array.isArray(A)?x(A):(console.warn("Appointments data is not an array:",A),x([]))}else console.error("Failed to load appointments:",n.reason),x([]);if(l.status==="fulfilled"){const A=l.value?.data;Array.isArray(A)?S(A):(console.warn("Availability slots data is not an array:",A),S([]))}else console.error("Failed to load availability slots:",l.reason),S([])}catch(n){console.error("Error loading dashboard data:",n),j("Failed to load dashboard data"),x([]),S([])}finally{s(!1)}},t=async n=>{try{if(T(n),i({status:n.status||"Scheduled",notes:n.appointmentNotes||"",scheduleRecheck:!1,recheckDateTime:"",durationMinutes:n.durationMinutes||30}),n.status==="Completed"){N(null),q([]);return}const l=await V.get(`/appointments/${n.appointmentId}/patient-record`);if(!l.data.success){console.warn("Failed to load patient record:",l.data.message),N(null),q([]);return}N(l.data);const A=await V.get(`/arv-treatments/patient/${n.patientUser.userId}`);q(Array.isArray(A.data)?A.data:[]),g("patient-record")}catch(l){console.error("Error loading patient record:",l),alert("Failed to load patient record")}},u=async()=>{try{const n=await V.get("/arv-treatments/templates");$(Array.isArray(n.data)?n.data:[])}catch{$([])}},p=async n=>{try{const l=await V.post("/doctors/availability",{slotDate:n.slotDate,startTime:n.startTime,durationMinutes:parseInt(n.durationMinutes),notes:n.notes||""});if(l.data.success)return await a(),{success:!0};throw new Error(l.data.message||"Failed to add slot")}catch(l){return console.error("Failed to add slot:",l),{success:!1,error:l.response?.data?.message||l.message||"Failed to add slot"}}},C=async n=>{try{console.log("Deleting slot:",n);const l=await V.delete(`/doctors/availability/${n}`);l.data.success?(alert("Availability slot deleted successfully!"),a()):alert(l.data.message||"Failed to delete slot")}catch(l){console.error("Error deleting slot:",l),alert("Failed to delete availability slot")}},O=async n=>{try{if(!m)return;const l=await V.put(`/patient-records/patient/${m.patientUser.userId}`,n);l.data.success?(alert("Patient record updated successfully!"),t(m)):alert(l.data.message||"Failed to update record")}catch(l){console.error("Error saving patient record:",l),alert("Failed to save patient record")}},W=async n=>{try{if(!m)throw new Error("No appointment selected");console.debug("Uploading image for patient:",{patientId:m.patientUser.userId,dataLength:n?.length});const l=await V.post("/patient-records/upload-image",{imageData:n});if(l.data?.success)return await t(m),!0;throw new Error(l.data?.message||"Failed to upload image")}catch(l){throw console.error("Error uploading image:",l),l}},Q=n=>{const{name:l,value:A,type:Y,checked:J}=n.target;b(ee=>({...ee,[l]:Y==="checkbox"?J:A}))},X=n=>{b({regimen:n.regimen,startDate:new Date().toISOString().slice(0,10),endDate:"",adherence:n.adherence||"",sideEffects:n.sideEffects||"",notes:"",setAsTemplate:!1}),w(!1),U(!0)},Z=async n=>{try{if(!m)return;const l=await V.post("/arv-treatments/add",{...n,patientUserId:m.patientUser.userId,appointmentId:m.appointmentId});l.data.success?(alert("ARV treatment added successfully!"),U(!1),b({regimen:"",startDate:"",endDate:"",adherence:"",sideEffects:"",notes:""}),t(m)):alert(l.data.message||"Failed to add ARV treatment")}catch(l){console.error("Error adding ARV treatment:",l),alert("Failed to add ARV treatment")}},B=async n=>{try{const l=await V.delete(`/arv-treatments/${n}`);l.data.success?(alert("ARV treatment deleted successfully!"),t(m)):alert(l.data.message||"Failed to delete ARV treatment")}catch(l){console.error("Error deleting ARV treatment:",l),alert("Failed to delete ARV treatment")}},z=n=>{const{name:l,value:A,type:Y,checked:J}=n.target;i(ee=>({...ee,[l]:Y==="checkbox"?J:A}))},F=async()=>{try{if(!m)return;const n=await V.put(`/appointments/${m.appointmentId}/status`,I);n.data.success?(alert("Appointment updated successfully!"),a(),t(m)):alert(n.data.message||"Failed to update appointment")}catch(n){console.error("Error updating appointment:",n),alert("Failed to update appointment")}},_=[{id:"overview",label:"Overview",icon:"📊"},{id:"appointments",label:"Appointments",icon:"📅"},{id:"patient-record",label:"Patient Records",icon:"📋"},{id:"availability",label:"My Availability",icon:"🕒"},{id:"notifications",label:"Notifications",icon:"🔔"}];console.log("Navigation items array:",_),console.log("Navigation items length:",_.length);const te=()=>{const n=Array.isArray(y)?y:[],l=Array.isArray(M)?M:[];return e.jsx(K,{children:e.jsxs("div",{className:"overview-content",children:[e.jsxs("div",{className:"content-header",children:[e.jsx("h2",{children:"Dashboard Overview"}),e.jsxs("p",{children:["Welcome, Dr. ",D]})]}),e.jsxs("div",{className:"stats-grid",children:[e.jsxs("div",{className:"stat-card",children:[e.jsx("h3",{children:"Total Appointments"}),e.jsx("p",{className:"stat-number",children:l.length})]}),e.jsxs("div",{className:"stat-card",children:[e.jsx("h3",{children:"Available Slots"}),e.jsx("p",{className:"stat-number",children:n.filter(A=>!A.isBooked).length})]}),e.jsxs("div",{className:"stat-card",children:[e.jsx("h3",{children:"Booked Slots"}),e.jsx("p",{className:"stat-number",children:n.filter(A=>A.isBooked).length})]}),e.jsxs("div",{className:"stat-card",children:[e.jsx("h3",{children:"Today's Appointments"}),e.jsx("p",{className:"stat-number",children:l.filter(A=>{try{const Y=new Date().toDateString(),J=new Date(A.appointmentDateTime).toDateString();return Y===J}catch{return!1}}).length})]})]}),e.jsxs("div",{className:"recent-appointments",children:[e.jsx("h3",{children:"Recent Appointments"}),l.length>0?e.jsx("div",{className:"appointments-list",children:l.slice(0,5).map(A=>e.jsxs("div",{className:"appointment-card",children:[e.jsxs("div",{className:"appointment-header",children:[e.jsxs("h4",{children:["Patient: ",G(A.patientUser?.username)]}),e.jsx("span",{className:`status ${A.status?.toLowerCase()}`,children:G(A.status)})]}),e.jsxs("div",{className:"appointment-details",children:[e.jsxs("p",{children:[e.jsx("strong",{children:"Date:"})," ",se(A.appointmentDateTime)]}),e.jsxs("p",{children:[e.jsx("strong",{children:"Duration:"})," ",A.durationMinutes||30," minutes"]})]}),e.jsx("div",{className:"appointment-actions",children:e.jsx("button",{className:"btn-primary",onClick:()=>t(A),children:"View Record"})})]},A.appointmentId))}):e.jsx("div",{className:"no-data",children:e.jsx("p",{children:"No appointments found."})})]})]})})},de=()=>{const n=Array.isArray(M)?M:[];return e.jsx(K,{children:e.jsxs("div",{className:"appointments-content",children:[e.jsxs("div",{className:"content-header",children:[e.jsx("h2",{children:"My Appointments"}),e.jsx("p",{children:"Manage your scheduled appointments"})]}),n.length>0?e.jsx("div",{className:"appointments-list",children:n.map(l=>e.jsxs("div",{className:"appointment-card",children:[e.jsxs("div",{className:"appointment-header",children:[e.jsxs("h4",{children:["Patient: ",G(l.patientUser?.username)]}),e.jsx("span",{className:`status ${l.status?.toLowerCase()}`,children:G(l.status)})]}),e.jsxs("div",{className:"appointment-details",children:[e.jsxs("p",{children:[e.jsx("strong",{children:"Date & Time:"})," ",se(l.appointmentDateTime)]}),e.jsxs("p",{children:[e.jsx("strong",{children:"Duration:"})," ",l.durationMinutes||30," minutes"]}),e.jsxs("p",{children:[e.jsx("strong",{children:"Patient Email:"})," ",G(l.patientUser?.email)]}),l.appointmentNotes&&e.jsxs("p",{children:[e.jsx("strong",{children:"Notes:"})," ",G(l.appointmentNotes)]})]}),e.jsx("div",{className:"appointment-actions",children:l.status!=="Completed"&&e.jsx("button",{className:"btn-primary",onClick:()=>t(l),children:"View Patient Record"})})]},l.appointmentId))}):e.jsx("div",{className:"no-data",children:e.jsx("p",{children:"No appointments scheduled."})})]})})},me=()=>e.jsx(K,{children:e.jsx("div",{className:"patient-record-content",children:m?e.jsxs(e.Fragment,{children:[e.jsxs("div",{className:"appointment-header",children:[e.jsxs("h3",{children:["Patient Record - ",v?.isPrivate?"Anonymous":m.patientUser?.username]}),e.jsxs("p",{children:["Appointment: ",se(m.appointmentDateTime)]})]}),v?.isPrivate&&e.jsxs("div",{className:"privacy-alert",children:[e.jsx("i",{className:"fas fa-lock"}),e.jsx("p",{children:"This patient has enabled private mode. Some information will be hidden for privacy reasons."})]}),e.jsx(ge,{record:v,onSave:O,onImageUpload:W,hideImage:v?.isPrivate}),e.jsxs("div",{className:"arv-treatments-section",children:[e.jsxs("div",{className:"section-header",children:[e.jsx("h3",{children:"ARV Treatments"}),e.jsx("button",{className:"btn-secondary",onClick:()=>{u(),w(!0)},style:{marginRight:8},children:"Select from templates"}),e.jsx("button",{className:"btn-primary",onClick:()=>U(!0),children:"Create custom ARV"})]}),Array.isArray(k)&&k.length>0?e.jsx("div",{className:"treatments-list",children:k.map(n=>e.jsxs("div",{className:"treatment-card",children:[e.jsxs("div",{className:"treatment-header",children:[e.jsx("h4",{children:G(n.regimen)}),e.jsx("span",{className:`status ${n.isActive?"active":"inactive"}`,children:n.isActive?"Active":"Inactive"})]}),e.jsxs("div",{className:"treatment-details",children:[e.jsxs("p",{children:[e.jsx("strong",{children:"Start Date:"})," ",ae(n.startDate)]}),n.endDate&&e.jsxs("p",{children:[e.jsx("strong",{children:"End Date:"})," ",ae(n.endDate)]}),n.adherence&&e.jsxs("p",{children:[e.jsx("strong",{children:"Adherence:"})," ",G(n.adherence)]}),n.sideEffects&&e.jsxs("p",{children:[e.jsx("strong",{children:"Side Effects:"})," ",G(n.sideEffects)]}),n.notes&&e.jsxs("p",{children:[e.jsx("strong",{children:"Notes:"})," ",G(n.notes)]})]}),e.jsx("div",{className:"treatment-actions",children:e.jsx("button",{className:"btn-danger",onClick:()=>B(n.arvTreatmentId),children:"Delete"})})]},n.arvTreatmentId))}):e.jsx("div",{className:"no-data",children:e.jsx("p",{children:"No ARV treatments recorded."})})]}),e.jsxs("div",{className:"appointment-update-section",children:[e.jsx("h3",{children:"Update Appointment"}),e.jsxs("div",{className:"form-row",children:[e.jsxs("div",{className:"form-group",children:[e.jsx("label",{children:"Status:"}),e.jsxs("select",{name:"status",value:I.status,onChange:z,children:[e.jsx("option",{value:"Scheduled",children:"Scheduled"}),e.jsx("option",{value:"In Progress",children:"In Progress"}),e.jsx("option",{value:"Completed",children:"Completed"}),e.jsx("option",{value:"Cancelled",children:"Cancelled"})]})]}),e.jsxs("div",{className:"form-group",children:[e.jsx("label",{children:"Duration (minutes):"}),e.jsx("input",{type:"number",name:"durationMinutes",value:I.durationMinutes,onChange:z,min:"15",max:"120"})]})]}),e.jsxs("div",{className:"form-group",children:[e.jsx("label",{children:"Notes:"}),e.jsx("textarea",{name:"notes",value:I.notes,onChange:z,rows:"3",placeholder:"Add appointment notes..."})]}),e.jsx("button",{className:"btn-primary",onClick:F,children:"Update Appointment"})]})]}):e.jsxs("div",{className:"no-selection",children:[e.jsx("p",{children:"Please select an appointment from the appointments tab to view patient records."}),e.jsx("button",{className:"btn-primary",onClick:()=>g("appointments"),children:"Go to Appointments"})]})})}),he=()=>{const n=Array.isArray(y)?y:[];return e.jsxs("div",{className:"availability-content",children:[e.jsx("h3",{children:"Manage Your Availability"}),e.jsx(K,{children:e.jsx(Ne,{slots:n,userRole:"doctor",currentUserId:o?.userId||o?.id,doctorInfo:{userId:o?.userId||o?.id,firstName:o?.firstName||"Doctor",lastName:o?.lastName||o?.username||""},onAddSlot:p,onDeleteSlot:C,onBookSlot:null,onCancelBooking:null})})]})},ue=()=>e.jsx(K,{children:e.jsx(oe,{isActive:P==="notifications"})}),pe=()=>{switch(P){case"overview":return te();case"appointments":return de();case"patient-record":return me();case"availability":return he();case"notifications":return ue();default:return te()}};return E?e.jsxs("div",{className:"loading-container",children:[e.jsx("div",{className:"loading-spinner"}),e.jsx("p",{children:"Loading dashboard..."})]}):e.jsxs("div",{className:"doctor-dashboard",children:[e.jsx(je,{title:"Doctor Dashboard",subtitle:`Welcome, Dr. ${D}`}),e.jsxs("div",{className:"dashboard-layout",children:[e.jsxs("div",{className:"dashboard-sidebar",children:[e.jsx("div",{className:"sidebar-header",children:e.jsx("h1",{children:"Navigation"})}),e.jsx("nav",{className:"dashboard-nav",children:_.map(n=>e.jsx("div",{className:"nav-item",children:e.jsxs("button",{className:`nav-button ${P===n.id?"active":""}`,onClick:()=>g(n.id),children:[e.jsx("span",{className:"nav-icon",children:n.icon}),n.label]})},n.id))})]}),e.jsx("div",{className:"dashboard-main",children:e.jsxs("div",{className:"dashboard-content",children:[f&&e.jsxs("div",{className:"error-banner",children:[e.jsx("span",{children:f}),e.jsx("button",{className:"close-error",onClick:()=>j(""),children:"×"})]}),pe()]})})]}),h&&e.jsx("div",{className:"modal-overlay",children:e.jsxs("div",{className:"modal-content",style:{width:"700px",maxWidth:"95vw",minHeight:"350px",maxHeight:"80vh",overflow:"visible",padding:"2rem"},children:[e.jsxs("div",{className:"modal-header",style:{marginBottom:"1rem"},children:[e.jsx("h3",{children:"Select ARV Template"}),e.jsx("button",{className:"close-btn",onClick:()=>w(!1),children:"×"})]}),e.jsx("div",{style:{maxHeight:"55vh",overflowY:"auto",minHeight:"180px"},children:L.length===0?e.jsx("div",{children:"No templates available."}):e.jsxs("table",{className:"patient-detail-table",style:{minWidth:600},children:[e.jsx("thead",{children:e.jsxs("tr",{children:[e.jsx("th",{children:"Regimen"}),e.jsx("th",{children:"Adherence"}),e.jsx("th",{children:"Side Effects"}),e.jsx("th",{children:"Notes"}),e.jsx("th",{children:"Type"}),e.jsx("th",{children:"Action"})]})}),e.jsx("tbody",{children:L.map(n=>e.jsxs("tr",{children:[e.jsx("td",{children:n.regimen}),e.jsx("td",{children:n.adherence}),e.jsx("td",{children:n.sideEffects}),e.jsx("td",{children:n.notes}),e.jsx("td",{children:n.notes==="default template"?"Default":n.notes==="template"?"Template":"Custom"}),e.jsx("td",{children:e.jsx("button",{className:"btn-primary",onClick:()=>X(n),children:"Use"})})]},n.arvTreatmentId))})]})})]})}),R&&e.jsx(fe,{isOpen:R,onClose:()=>U(!1),onSubmit:Z,formData:d,onChange:Q})]})};export{Ae as default};
