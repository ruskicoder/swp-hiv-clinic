import{r as v,j as e}from"./index-ottAEAuo.js";import{S as W}from"./SafeComponents-D2JEnfCK.js";const ce=({record:t={},onSave:r,onImageUpload:f,loading:g=!1,isEditable:p=!0,hideImage:i=!1})=>{const[l,S]=v.useState({medicalHistory:"",allergies:"",currentMedications:"",notes:"",bloodType:"",emergencyContact:"",emergencyPhone:""}),[B,j]=v.useState(""),[k,F]=v.useState(!1),[b,x]=v.useState(""),[P,u]=v.useState(""),[d,y]=v.useState("");console.debug("PatientRecordSection received record:",t),v.useEffect(()=>{console.debug("PatientRecordSection mounted with record:",t)},[t]),v.useEffect(()=>{if(console.debug("Updating form data with record:",t),t?.error){j(t.error);return}t&&(t.success===!0||t.patientUserId||t.patientUserID||t.recordId||t.patientId||t.patientUsername||typeof t=="object"&&(t.medicalHistory!==void 0||t.allergies!==void 0||t.currentMedications!==void 0||t.notes!==void 0||t.bloodType!==void 0||t.emergencyContact!==void 0||t.emergencyPhone!==void 0))?(S({medicalHistory:t.medicalHistory||"",allergies:t.allergies||"",currentMedications:t.currentMedications||"",notes:t.notes||"",bloodType:t.bloodType||"",emergencyContact:t.emergencyContact||"",emergencyPhone:t.emergencyPhone||""}),j(""),console.debug("Form data updated successfully")):(console.debug("No valid record data provided, using empty form"),S({medicalHistory:"",allergies:"",currentMedications:"",notes:"",bloodType:"",emergencyContact:"",emergencyPhone:""}))},[t]);const T=()=>t&&(t.patientName||(t.patientFirstName&&t.patientLastName?`${t.patientFirstName} ${t.patientLastName}`:null)||t.patientUsername||t.firstName||t.username)||"Patient",N=I=>{const{name:M,value:$}=I.target;S(E=>({...E,[M]:$})),B&&j(""),d&&y("")},D=async I=>{I.preventDefault(),j(""),y("");const M=/^[+]?[1-9][\d]{0,15}$/;if(l.emergencyPhone&&!M.test(l.emergencyPhone.replace(/[\s\-()]/g,""))){j("Please enter a valid emergency phone number");return}if(l.emergencyContact&&!l.emergencyPhone){j("Please provide an emergency phone number when adding an emergency contact");return}try{await r(l),y("Patient record saved successfully!"),setTimeout(()=>y(""),3e3)}catch($){console.error("Error saving patient record:",$),j($.message||"Failed to save patient record")}},C=async I=>{if(!f){console.error("No onImageUpload function provided to PatientRecordSection"),x("Image upload is not available");return}const M=I.target.files[0];if(!M){console.debug("No file selected");return}F(!0),x(""),u("");try{if(!M.type.startsWith("image/"))throw new Error("Please select a valid image file");const $=5*1024*1024;if(M.size>$)throw new Error("Image size must be less than 5MB");console.debug("Processing image:",{type:M.type,size:`${(M.size/1024/1024).toFixed(2)}MB`});const E=document.createElement("canvas"),L=E.getContext("2d"),A=new Image;await new Promise((U,H)=>{A.onload=()=>{try{let{width:n,height:h}=A;n>h?n>512&&(h=Math.round(h*512/n),n=512):h>512&&(n=Math.round(n*512/h),h=512),E.width=n,E.height=h,L.drawImage(A,0,0,n,h);const m=E.toDataURL("image/jpeg",.8);console.debug("Image processed:",{originalSize:`${(M.size/1024).toFixed(2)}KB`,newSize:`${(m.length/1024).toFixed(2)}KB`,dimensions:`${n}x${h}`}),U(m)}catch(a){H(new Error("Failed to process image: "+a.message))}},A.onerror=()=>H(new Error("Failed to load image"));const R=new FileReader;R.onload=a=>A.src=a.target.result,R.onerror=()=>H(new Error("Failed to read file")),R.readAsDataURL(M)}).then(async U=>{try{await f(U),u("Image uploaded successfully!"),setTimeout(()=>u(""),3e3)}catch(H){throw console.error("Failed to upload image:",H),H}})}catch($){console.error("Image upload error:",$),x($.message||"Failed to upload image")}finally{F(!1)}},q=t&&(t.success===!0||t.patientUserId||t.patientUserID||t.recordId||t.patientId||t.patientUsername||typeof t=="object"&&(t.medicalHistory!==void 0||t.allergies!==void 0||t.currentMedications!==void 0||t.notes!==void 0||t.bloodType!==void 0||t.emergencyContact!==void 0||t.emergencyPhone!==void 0));return e.jsxs("div",{className:"patient-record-section",children:[t?.isPrivate&&e.jsxs("div",{className:"privacy-alert",children:[e.jsx("i",{className:"fas fa-lock"}),e.jsx("p",{children:"This patient has enabled private mode. Some information will be hidden for privacy reasons."})]}),e.jsxs("div",{className:"record-header",children:[e.jsx("h3",{children:g?"Loading...":t?.error?"Error Loading Record":q?`${T()} Medical Record`:"Patient Medical Record"}),B&&e.jsx("div",{className:"error-banner",children:B}),d&&e.jsx("div",{className:"success-banner",children:d})]}),g?e.jsx("div",{className:"loading-message",children:e.jsx("p",{children:"Loading patient record... Please wait."})}):e.jsxs("div",{className:"record-content",children:[!i&&e.jsxs("div",{className:"profile-image-section",children:[e.jsx("div",{className:"profile-image-container",children:t?.profileImageBase64?e.jsx("img",{src:t.profileImageBase64,alt:"Profile",className:"profile-image"}):e.jsx("div",{className:"profile-placeholder",children:e.jsx("span",{children:"No Image"})})}),p&&e.jsxs("div",{className:"image-upload",children:[e.jsx("input",{type:"file",id:"profileImage",accept:"image/*",onChange:C,style:{display:"none"},disabled:k}),e.jsx("label",{htmlFor:"profileImage",className:"upload-btn",style:{opacity:k?.6:1,pointerEvents:k?"none":"auto"},children:k?"Uploading...":"Upload Photo"}),b&&e.jsx("div",{className:"error-message",children:b}),P&&e.jsx("div",{className:"success-message",children:P})]})]}),e.jsxs("div",{className:"record-container",children:[t?.isPrivate&&e.jsxs("div",{className:"privacy-alert",children:[e.jsx("i",{className:"fas fa-lock"}),e.jsx("p",{children:"This patient has enabled private mode. Some information will be hidden for privacy reasons."})]}),e.jsx("form",{id:"patient-record-form",onSubmit:D,className:"record-form",children:e.jsxs("div",{className:"form-grid",children:[e.jsxs("div",{className:"form-group",children:[e.jsx("label",{htmlFor:"medicalHistory",children:"Medical History"}),p?e.jsx("textarea",{id:"medicalHistory",name:"medicalHistory",value:l.medicalHistory,onChange:N,placeholder:"Enter medical history...",rows:"4"}):e.jsx("div",{className:"form-display",children:e.jsx(W,{value:l.medicalHistory})})]}),e.jsxs("div",{className:"form-group",children:[e.jsx("label",{htmlFor:"allergies",children:"Allergies"}),p?e.jsx("textarea",{id:"allergies",name:"allergies",value:l.allergies,onChange:N,placeholder:"Enter known allergies...",rows:"4"}):e.jsx("div",{className:"form-display",children:e.jsx(W,{value:l.allergies})})]}),e.jsxs("div",{className:"form-group",children:[e.jsx("label",{htmlFor:"currentMedications",children:"Current Medications"}),p?e.jsx("textarea",{id:"currentMedications",name:"currentMedications",value:l.currentMedications,onChange:N,placeholder:"Enter current medications...",rows:"4"}):e.jsx("div",{className:"form-display",children:e.jsx(W,{value:l.currentMedications})})]}),e.jsxs("div",{className:"form-group",children:[e.jsx("label",{htmlFor:"notes",children:"Additional Notes"}),p?e.jsx("textarea",{id:"notes",name:"notes",value:l.notes,onChange:N,placeholder:"Enter additional notes...",rows:"4"}):e.jsx("div",{className:"form-display",children:e.jsx(W,{value:l.notes})})]}),e.jsxs("div",{className:"form-group",children:[e.jsx("label",{htmlFor:"bloodType",children:"Blood Type"}),p?e.jsxs("select",{id:"bloodType",name:"bloodType",value:l.bloodType,onChange:N,children:[e.jsx("option",{value:"",children:"Select blood type"}),e.jsx("option",{value:"A+",children:"A+"}),e.jsx("option",{value:"A-",children:"A-"}),e.jsx("option",{value:"B+",children:"B+"}),e.jsx("option",{value:"B-",children:"B-"}),e.jsx("option",{value:"AB+",children:"AB+"}),e.jsx("option",{value:"AB-",children:"AB-"}),e.jsx("option",{value:"O+",children:"O+"}),e.jsx("option",{value:"O-",children:"O-"})]}):e.jsx("div",{className:"form-display",children:e.jsx(W,{value:l.bloodType})})]}),!t?.isPrivate&&e.jsxs(e.Fragment,{children:[e.jsxs("div",{className:"form-group",children:[e.jsx("label",{htmlFor:"emergencyContact",children:"Emergency Contact"}),p?e.jsx("input",{type:"text",id:"emergencyContact",name:"emergencyContact",value:l.emergencyContact,onChange:N,placeholder:"Enter emergency contact name..."}):e.jsx("div",{className:"form-display",children:e.jsx(W,{value:l.emergencyContact})})]}),e.jsxs("div",{className:"form-group",children:[e.jsx("label",{htmlFor:"emergencyPhone",children:"Emergency Phone"}),p?e.jsx("input",{type:"tel",id:"emergencyPhone",name:"emergencyPhone",value:l.emergencyPhone,onChange:N,placeholder:"Enter emergency phone number..."}):e.jsx("div",{className:"form-display",children:e.jsx(W,{value:l.emergencyPhone})})]})]}),p&&e.jsx("div",{className:"form-actions",children:e.jsx("button",{type:"submit",className:"btn-primary",disabled:g,children:g?e.jsxs(e.Fragment,{children:[e.jsx("span",{className:"spinner"}),"Saving..."]}):"Save Record"})})]})})]})]})]})},ae=({isOpen:t,onClose:r,onSlotCreated:f,selectedDate:g,existingSlots:p=[]})=>{const[i,l]=v.useState({slotDate:"",startTime:"09:00",durationMinutes:30,notes:""}),[S,B]=v.useState({}),[j,k]=v.useState(!1);v.useEffect(()=>{if(t&&g){const u=F(g);console.log("Setting slot date:",{selectedDate:g,formattedDate:u}),l(d=>({...d,slotDate:u}))}},[t,g]);const F=u=>{if(!u)return"";try{let d;if(typeof u=="string"){if(/^\d{4}-\d{2}-\d{2}$/.test(u))return u;d=new Date(u)}else if(u instanceof Date)d=u;else return console.warn("Invalid date format:",u),"";const y=d.getFullYear(),T=String(d.getMonth()+1).padStart(2,"0"),N=String(d.getDate()).padStart(2,"0");return`${y}-${T}-${N}`}catch(d){return console.error("Error formatting date:",d,u),""}},b=u=>{const{name:d,value:y}=u.target;l(T=>({...T,[d]:d==="durationMinutes"?parseInt(y,10):y})),S[d]&&B(T=>({...T,[d]:""}))},x=()=>{const u={};if(i.slotDate||(u.slotDate="Date is required"),i.startTime||(u.startTime="Start time is required"),(!i.durationMinutes||i.durationMinutes<15)&&(u.durationMinutes="Duration must be at least 15 minutes"),i.durationMinutes>240&&(u.durationMinutes="Duration cannot exceed 4 hours"),i.startTime){const[d,y]=i.startTime.split(":").map(Number),T=d*60+y,N=T+i.durationMinutes;T<8*60&&(u.startTime="Start time cannot be before 8:00 AM"),N>18*60&&(u.startTime="End time cannot be after 6:00 PM")}if(i.slotDate&&i.startTime&&Array.isArray(p)){const d=i.startTime,y=i.startTime.split(":").map(Number).reduce((D,C)=>D*60+C)+i.durationMinutes,T=`${Math.floor(y/60).toString().padStart(2,"0")}:${(y%60).toString().padStart(2,"0")}`;p.some(D=>{if(F(D.slotDate)!==i.slotDate)return!1;const q=D.startTime,I=D.endTime;return d<I&&T>q})&&(u.startTime="This time slot overlaps with an existing slot")}return B(u),Object.keys(u).length===0},P=async u=>{if(u.preventDefault(),B({}),!!x())try{k(!0);const d={slotDate:i.slotDate,startTime:i.startTime.includes(":")?i.startTime+":00":i.startTime.replace(/^(\d{2})(\d{2})$/,"$1:$2:00"),durationMinutes:parseInt(i.durationMinutes),notes:i.notes||""};console.log("Submitting slot data:",d);const y=await f(d);if(y?.error||y?.success===!1)throw new Error(y.error||"Failed to create slot");r()}catch(d){console.error("Error creating slot:",d),B({submit:d.message||"Failed to create slot. Please try again."}),k(!1)}};return t?e.jsx("div",{className:"time-slot-modal-overlay",children:e.jsxs("div",{className:"time-slot-modal",children:[e.jsxs("div",{className:"modal-header",children:[e.jsx("h3",{children:"Add New Time Slot"}),e.jsx("button",{type:"button",className:"close-btn",onClick:r,disabled:j,children:"×"})]}),e.jsxs("form",{onSubmit:P,className:"slot-form",children:[e.jsxs("div",{className:"form-group",children:[e.jsx("label",{htmlFor:"slotDate",children:"Date:"}),e.jsx("input",{type:"date",id:"slotDate",name:"slotDate",value:i.slotDate,onChange:b,required:!0,disabled:j}),S.slotDate&&e.jsx("div",{className:"error",children:S.slotDate})]}),e.jsxs("div",{className:"form-group",children:[e.jsx("label",{htmlFor:"startTime",children:"Start Time:"}),e.jsx("input",{type:"time",id:"startTime",name:"startTime",value:i.startTime,onChange:b,min:"08:00",max:"17:30",step:"900",required:!0,disabled:j}),S.startTime&&e.jsx("div",{className:"error",children:S.startTime})]}),e.jsxs("div",{className:"form-group",children:[e.jsx("label",{htmlFor:"durationMinutes",children:"Duration:"}),e.jsxs("select",{id:"durationMinutes",name:"durationMinutes",value:i.durationMinutes,onChange:b,required:!0,disabled:j,children:[e.jsx("option",{value:15,children:"15 minutes"}),e.jsx("option",{value:30,children:"30 minutes"}),e.jsx("option",{value:45,children:"45 minutes"}),e.jsx("option",{value:60,children:"1 hour"}),e.jsx("option",{value:90,children:"1.5 hours"}),e.jsx("option",{value:120,children:"2 hours"}),e.jsx("option",{value:180,children:"3 hours"}),e.jsx("option",{value:240,children:"4 hours"})]}),S.durationMinutes&&e.jsx("div",{className:"error",children:S.durationMinutes})]}),e.jsxs("div",{className:"form-group",children:[e.jsx("label",{htmlFor:"notes",children:"Notes (optional):"}),e.jsx("textarea",{id:"notes",name:"notes",value:i.notes,onChange:b,rows:"3",placeholder:"Add any notes for this time slot...",disabled:j})]}),S.submit&&e.jsx("div",{className:"error-message",children:S.submit}),e.jsxs("div",{className:"form-actions",children:[e.jsx("button",{type:"submit",className:"btn-primary",disabled:j,children:j?"Creating...":"Create Slot"}),e.jsx("button",{type:"button",className:"btn-secondary",onClick:r,disabled:j,children:"Cancel"})]})]})]})}):null},K=(t,r)=>{try{if(!t)throw new Error("Date is required");let f,g;if(t instanceof Date){if(isNaN(t.getTime()))throw new Error("Invalid Date object");f=t.toISOString().split("T")[0]}else if(typeof t=="string")if(/^\d{4}-\d{2}-\d{2}$/.test(t))f=t;else{const i=new Date(t);if(isNaN(i.getTime()))throw new Error("Invalid date format");f=i.toISOString().split("T")[0]}else if(t&&typeof t=="object"){if(t.slotDate)return K(t.slotDate,r);if(t.date)return K(t.date,r);throw new Error("Invalid date object structure")}else throw new Error("Date must be a Date object or string");if(!r)g="00:00:00";else if(typeof r=="string")if(/^\d{2}:\d{2}:\d{2}$/.test(r))g=r;else if(/^\d{2}:\d{2}$/.test(r))g=r+":00";else if(/^\d{1,2}:\d{2}$/.test(r)){const[i,l]=r.split(":");g=i.padStart(2,"0")+":"+l+":00"}else if(/^\d{4}$/.test(r))g=r.substring(0,2)+":"+r.substring(2)+":00";else if(/^\d{1,2}$/.test(r))g=r.padStart(2,"0")+":00:00";else throw new Error("Invalid time format. Expected HH:mm:ss, HH:mm, or HHMM");else if(r instanceof Date){const i=r.getHours().toString().padStart(2,"0"),l=r.getMinutes().toString().padStart(2,"0"),S=r.getSeconds().toString().padStart(2,"0");g=`${i}:${l}:${S}`}else if(r&&typeof r=="object"){if(r.startTime)return K(t,r.startTime);if(r.time)return K(t,r.time);throw new Error("Invalid time object structure")}else throw new Error("Time must be a string or Date object");const p=`${f}T${g}`;if(!/^\d{4}-\d{2}-\d{2}T\d{2}:\d{2}:\d{2}$/.test(p))throw new Error(`Invalid final format: ${p}. Expected YYYY-MM-DDTHH:mm:ss`);return console.log(`Formatted date/time: ${p}`),p}catch(f){throw console.error("Error formatting date/time for API:",f),console.error("Input date:",t),console.error("Input time:",r),new Error(`Failed to format date/time: ${f.message}`)}},ne=t=>{const r=[];return t.doctorUserId||r.push("Doctor ID is required"),t.availabilitySlotId||r.push("Availability slot ID is required"),t.appointmentDateTime?/^\d{4}-\d{2}-\d{2}T\d{2}:\d{2}:\d{2}$/.test(t.appointmentDateTime)||r.push(`Invalid appointment date/time format. Expected: YYYY-MM-DDTHH:mm:ss, got: ${t.appointmentDateTime}`):r.push("Appointment date and time is required"),(!t.durationMinutes||t.durationMinutes<1)&&r.push("Valid duration is required"),{isValid:r.length===0,errors:r}},re=(t,r)=>{try{if(!t||!r)throw new Error("Slot data and doctor ID are required");const f=t.slotDate||t.date||(t.appointmentDateTime||"").split("T")[0],g=t.startTime||t.time||(t.appointmentDateTime||"").split("T")[1];if(!f||!g)throw new Error("Cannot extract date and time from slot data");const p=K(f,g);return{doctorUserId:r,availabilitySlotId:t.availabilitySlotId,appointmentDateTime:p,durationMinutes:t.durationMinutes||30}}catch(f){throw console.error("Error creating booking data:",f),f}},oe=({isOpen:t,onClose:r,selectedDate:f,existingSlots:g=[],userRole:p="doctor",currentUserId:i,doctorInfo:l,onAddSlot:S,onDeleteSlot:B,onBookSlot:j,onCancelBooking:k})=>{const[F,b]=v.useState(!1),[x,P]=v.useState(null),[u,d]=v.useState(!1),[y,T]=v.useState(!1),[N,D]=v.useState(!1),[C,q]=v.useState(null);v.useEffect(()=>{t||(b(!1),P(null),d(!1),T(!1),D(!1))},[t]);const I=v.useMemo(()=>Array.isArray(g)?g.filter(s=>s?s.availabilitySlotId&&(s.slotDate||s.date)&&(s.startTime||s.time)?!0:(console.warn("Slot missing required properties:",s),!1):!1).map(s=>({...s,availabilitySlotId:s.availabilitySlotId||s.id,slotDate:s.slotDate||s.date,startTime:s.startTime||s.time,endTime:s.endTime||s.endTime,isBooked:!!s.isBooked,durationMinutes:s.durationMinutes||30})):(console.warn("existingSlots is not an array:",g),[]),[g]),M=I.filter(s=>!s.isBooked),$=I.filter(s=>s.isBooked),E=s=>{if(!s)return"N/A";try{if(s.includes(":")){const[c,w]=s.split(":"),o=parseInt(c,10),Y=parseInt(w,10),_=o>=12?"PM":"AM";return`${o===0?12:o>12?o-12:o}:${Y.toString().padStart(2,"0")} ${_}`}return s}catch(c){return console.error("Error formatting time:",c),s}},L=s=>{if(!s)return"N/A";try{return new Date(s).toLocaleDateString()}catch(c){return console.error("Error formatting date:",c),s.toString()}},A=s=>{if(p!=="patient"||!s.appointment)return!1;try{const c=s.appointment.patientUser;return c?(c.userId||c.id||c.userID)===i:!1}catch(c){return console.warn("Error checking patient booking ownership:",c),!1}},U=s=>{P(s),p==="doctor"?s.isBooked?alert(`Booked by: ${s.appointment?.patientUser?.username||"Unknown"}`):window.confirm("Delete this availability slot?")&&H(s):p==="patient"&&(s.isBooked?A(s)?T(!0):alert("This slot is already booked by another patient."):d(!0))},H=async s=>{if(B)try{D(!0),await B(s.availabilitySlotId)}catch(c){console.error("Error deleting slot:",c),alert("Failed to delete slot. Please try again.")}finally{D(!1)}},R=async()=>{if(!(!x||!j))try{if(D(!0),!x.availabilitySlotId)throw new Error("Availability slot ID is missing");if(!x.doctorUser?.userId&&!l?.userId)throw new Error("Doctor information is missing");const s={availabilitySlotId:x.availabilitySlotId,slotDate:f||x.slotDate,startTime:x.startTime,durationMinutes:x.durationMinutes||30},c=x.doctorUser?.userId||l?.userId,w=re(s,c);console.log("Booking appointment with data:",w);const o=ne(w);if(!o.isValid)throw new Error(`Validation failed: ${o.errors.join(", ")}`);const Y=await j(w);if(Y&&Y.success===!1)throw new Error(Y.message||"Failed to book appointment");alert("Appointment booked successfully!"),d(!1),P(null)}catch(s){console.error("Error booking appointment:",s),alert(`Booking failed: ${s.message}`)}finally{D(!1)}},a=async()=>{if(!(!x||!k))try{D(!0);const s=prompt("Please provide a reason for cancellation (optional):")||"Patient cancellation";if(x.appointment?.appointmentId)await k(x.appointment.appointmentId,s),alert("Appointment cancelled successfully!"),T(!1),P(null);else throw new Error("Appointment ID not found")}catch(s){console.error("Error cancelling appointment:",s),alert(`Cancellation failed: ${s.message}`)}finally{D(!1)}},n=()=>{b(!0)},h=async s=>{try{if(!S)throw new Error("Add slot handler not provided");D(!0),q(null);const c=await S(s);if(!c||c.error)throw new Error(c?.error||"Failed to create slot");return c.success&&b(!1),{success:!0}}catch(c){return console.error("Failed to create slot:",c),{success:!1,error:c.message||"Failed to create slot"}}finally{D(!1)}},m=(s,c,w)=>e.jsxs("div",{className:"slot-section",children:[e.jsx("h4",{className:"slot-section-title",children:c}),s.length===0?e.jsx("p",{className:"no-slots",children:w}):e.jsx("div",{className:"slots-list",children:s.map(o=>e.jsxs("div",{className:`slot-item ${o.isBooked?"booked":"available"}`,children:[e.jsxs("div",{className:"slot-info",children:[e.jsxs("span",{className:"slot-time",children:[E(o.startTime)," - ",E(o.endTime)]}),p==="doctor"&&o.appointment&&e.jsxs("span",{className:"booked-indicator",children:["Patient: ",o.appointment.patientUser?.username||"Unknown"]}),p==="patient"&&A(o)&&e.jsx("span",{className:"own-booking",children:"Your booking"}),o.notes&&e.jsx("span",{className:"slot-notes",children:o.notes})]}),e.jsx("div",{className:"slot-actions",children:p==="doctor"?o.isBooked?e.jsx("button",{className:"btn-info-small",onClick:()=>U(o),children:"View Details"}):e.jsx("button",{className:"btn-danger-small",onClick:()=>U(o),children:"Delete"}):o.isBooked?A(o)?e.jsx("button",{className:"btn-warning-small",onClick:()=>U(o),children:"Cancel"}):e.jsx("button",{className:"btn-secondary-small",disabled:!0,children:"Booked"}):e.jsx("button",{className:"btn-primary-small",onClick:()=>U(o),children:"Book"})})]},o.availabilitySlotId))})]});return!t||!f?null:e.jsx("div",{className:"slot-modal-overlay",children:e.jsxs("div",{className:"slot-modal",children:[e.jsxs("div",{className:"modal-header",children:[e.jsxs("div",{children:[e.jsxs("h3",{children:["Manage Slots - ",L(f)]}),l&&e.jsxs("small",{children:["Dr. ",l.firstName," ",l.lastName]})]}),e.jsx("button",{className:"close-btn",onClick:r,children:"×"})]}),e.jsxs("div",{className:"modal-content",children:[p==="doctor"&&e.jsx("div",{className:"modal-actions",children:e.jsx("button",{className:"btn-primary",onClick:n,children:"Add New Slot"})}),e.jsxs("div",{className:"slot-sections",children:[m(M,"Available Slots","No available slots for this date"),m($,"Booked Slots","No booked slots for this date")]})]}),u&&e.jsx("div",{className:"confirmation-modal",children:e.jsxs("div",{className:"confirmation-content",children:[e.jsx("h4",{children:"Confirm Booking"}),e.jsxs("p",{children:["Book appointment on ",L(f)," at"," ",E(x?.startTime)," - ",E(x?.endTime),"?"]}),l&&e.jsxs("p",{children:["Doctor: Dr. ",l.firstName," ",l.lastName]}),e.jsxs("div",{className:"confirmation-actions",children:[e.jsx("button",{className:"btn-primary",onClick:R,disabled:N,children:N?"Booking...":"Confirm"}),e.jsx("button",{className:"btn-secondary",onClick:()=>d(!1),disabled:N,children:"Cancel"})]})]})}),y&&e.jsx("div",{className:"confirmation-modal",children:e.jsxs("div",{className:"confirmation-content",children:[e.jsx("h4",{children:"Cancel Booking"}),e.jsxs("p",{children:["Cancel your appointment on ",L(f)," at"," ",E(x?.startTime)," - ",E(x?.endTime),"?"]}),e.jsxs("div",{className:"confirmation-actions",children:[e.jsx("button",{className:"btn-warning",onClick:a,disabled:N,children:N?"Cancelling...":"Cancel Booking"}),e.jsx("button",{className:"btn-secondary",onClick:()=>T(!1),disabled:N,children:"Keep Booking"})]})]})}),F&&e.jsx(ae,{isOpen:F,onClose:()=>b(!1),selectedDate:f,onSlotCreated:h})]})})},de=({slots:t=[],userRole:r="doctor",currentUserId:f,doctorInfo:g=null,onAddSlot:p,onDeleteSlot:i,onBookSlot:l,onCancelBooking:S,onDateSelect:B,onSlotSelect:j})=>{const[k,F]=v.useState(new Date),[b,x]=v.useState("month"),[P,u]=v.useState(null),[d,y]=v.useState(!1),[T,N]=v.useState([]),D=a=>{if(!a)return null;try{if(a instanceof Date)return a;if(typeof a=="string"){if(a.includes("T"))return new Date(a);const[n,h,m]=a.split("-").map(Number);return new Date(n,h-1,m,12,0,0)}return Array.isArray(a)&&a.length>=3?new Date(a[0],a[1]-1,a[2],12,0,0):new Date(a)}catch(n){return console.warn("Error processing slot date:",a,n),null}},C=a=>{if(!a)return"";try{const n=a.getFullYear(),h=String(a.getMonth()+1).padStart(2,"0"),m=String(a.getDate()).padStart(2,"0");return`${n}-${h}-${m}`}catch(n){return console.error("Error formatting date to string:",n),""}},q=v.useMemo(()=>Array.isArray(t)?t.filter(a=>{if(!a)return!1;const n=D(a.slotDate);return!n||isNaN(n.getTime())?(console.warn("Invalid slot date:",a),!1):!0}).map(a=>{const n=D(a.slotDate);return{...a,slotDate:n,availabilitySlotId:a.availabilitySlotId||a.slotId||a.id,startTime:a.startTime||"00:00",endTime:a.endTime||"00:30",isBooked:!!a.isBooked,notes:a.notes||"",appointment:a.appointment||null}}):(console.warn("Slots is not an array:",t),[]),[t]),I=a=>{if(!a)return[];const n=C(a);return q.filter(h=>h.slotDate?C(h.slotDate)===n:!1)},M=a=>{console.log("Date clicked:",a,"User role:",r);const n=I(a),h=C(a);console.log("Setting selected date:",{date:a,formattedDate:h,dateSlots:n}),u(h),N(n),y(!0),B&&B(a,n)},$=a=>{console.log("Slot clicked:",a,"User role:",r),j&&j(a)},E=async a=>{try{if(console.log("Adding slot with data:",a),!p)throw new Error("Add slot handler not provided");const n={...a,slotDate:a.slotDate,startTime:a.startTime,durationMinutes:parseInt(a.durationMinutes)};return await p(n),y(!1),!0}catch(n){throw console.error("Error adding slot:",n),new Error(n.message||"Failed to add slot. Please try again.")}},L=a=>{const n=new Date(k);switch(b){case"year":n.setFullYear(n.getFullYear()+a);break;case"month":n.setMonth(n.getMonth()+a);break;case"week":n.setDate(n.getDate()+a*7);break;default:n.setDate(n.getDate()+a)}F(n)},A=()=>{const a={year:"numeric",month:b!=="year"?"long":void 0};return k.toLocaleDateString("en-US",a)},U=()=>{const a=[],n=k.getFullYear();for(let h=0;h<12;h++){const m=new Date(n,h,1,12,0,0),s=q.filter(o=>{const Y=o.slotDate;return Y.getFullYear()===n&&Y.getMonth()===h}),c=s.filter(o=>!o.isBooked).length,w=s.filter(o=>o.isBooked).length;a.push(e.jsxs("div",{className:"year-month",onClick:()=>{F(m),x("month")},children:[e.jsx("h4",{children:m.toLocaleDateString("en-US",{month:"long"})}),e.jsxs("div",{className:"month-stats",children:[e.jsxs("span",{className:"available-count",children:[c," available"]}),e.jsxs("span",{className:"booked-count",children:[w," booked"]})]})]},h))}return e.jsx("div",{className:"year-view",children:a})},H=()=>{const a=k.getFullYear(),n=k.getMonth(),h=new Date(a,n,1,12,0,0),m=new Date(a,n+1,0,12,0,0),s=new Date(h);s.setDate(s.getDate()-h.getDay());const c=[],w=new Date(s),o=new Date;o.setHours(0,0,0,0);const Y=["Sun","Mon","Tue","Wed","Thu","Fri","Sat"];c.push(e.jsx("div",{className:"calendar-headers",children:Y.map(z=>e.jsx("div",{className:"calendar-header",children:z},z))},"headers"));const _=[];for(let z=0;z<6;z++){const Q=[];for(let X=0;X<7;X++){const O=new Date(w);O.setHours(12,0,0,0);const te=O.getMonth()===n,se=C(O)===C(o),Z=O<o,G=I(O),V=G.filter(J=>!J.isBooked),ee=G.filter(J=>J.isBooked);Q.push(e.jsxs("div",{className:`calendar-day ${te?"current-month":"other-month"} ${se?"today":""} ${Z?"past":""} ${G.length>0?"has-slots":""}`,onClick:()=>!Z&&M(O),children:[e.jsx("span",{className:"day-number",children:O.getDate()}),G.length>0&&e.jsxs("div",{className:"day-slots",children:[V.length>0&&e.jsx("span",{className:"available-indicator",children:V.length}),ee.length>0&&e.jsx("span",{className:"booked-indicator",children:ee.length})]})]},C(O))),w.setDate(w.getDate()+1)}if(_.push(e.jsx("div",{className:"calendar-week",children:Q},z)),w>m)break}return c.push(e.jsx("div",{className:"calendar-grid",children:_},"calendar")),e.jsx("div",{className:"month-view",children:c})},R=()=>{const a=new Date(k);a.setDate(k.getDate()-k.getDay()),a.setHours(12,0,0,0);const n=[];for(let m=0;m<7;m++){const s=new Date(a);s.setDate(a.getDate()+m),s.setHours(12,0,0,0),n.push(s)}const h=[];for(let m=8;m<18;m++)for(let s=0;s<60;s+=30){const c=`${m.toString().padStart(2,"0")}:${s.toString().padStart(2,"0")}`;h.push(c)}return e.jsxs("div",{className:"week-view",children:[e.jsx("div",{className:"week-header",children:n.map(m=>e.jsxs("div",{className:"week-day-header",children:[e.jsx("span",{className:"day-name",children:m.toLocaleDateString("en-US",{weekday:"short"})}),e.jsx("span",{className:"day-date",children:m.getDate()})]},C(m)))}),e.jsxs("div",{className:"week-grid",children:[e.jsx("div",{className:"time-column",children:h.map(m=>e.jsx("div",{className:"time-slot-label",children:m},m))}),n.map(m=>e.jsx("div",{className:"week-day-column",children:h.map(s=>{const w=I(m).find(o=>o.startTime&&o.startTime.substring(0,5)===s);return e.jsx("div",{className:`week-time-slot ${w?w.isBooked?"booked":"available":"empty"}`,onClick:()=>{w?$(w):M(m)},children:w&&e.jsx("div",{className:"slot-content",children:w.isBooked?"Booked":"Available"})},`${C(m)}-${s}`)})},C(m)))]})]})};return e.jsxs("div",{className:"unified-calendar",children:[e.jsxs("div",{className:"calendar-header",children:[e.jsxs("div",{className:"calendar-navigation",children:[e.jsx("button",{onClick:()=>L(-1),children:"‹"}),e.jsx("h3",{children:A()}),e.jsx("button",{onClick:()=>L(1),children:"›"})]}),e.jsxs("div",{className:"calendar-controls",children:[e.jsx("button",{onClick:()=>F(new Date),children:"Today"}),e.jsxs("div",{className:"view-mode-buttons",children:[e.jsx("button",{className:b==="year"?"active":"",onClick:()=>x("year"),children:"Year"}),e.jsx("button",{className:b==="month"?"active":"",onClick:()=>x("month"),children:"Month"}),e.jsx("button",{className:b==="week"?"active":"",onClick:()=>x("week"),children:"Week"})]})]})]}),e.jsxs("div",{className:"calendar-content",children:[b==="year"&&U(),b==="month"&&H(),b==="week"&&R()]}),d&&e.jsx(oe,{isOpen:d,onClose:()=>y(!1),selectedDate:P,existingSlots:T,userRole:r,currentUserId:f,doctorInfo:g,onAddSlot:E,onDeleteSlot:i,onBookSlot:l,onCancelBooking:S})]})};export{ce as P,de as U,re as c,ne as v};
