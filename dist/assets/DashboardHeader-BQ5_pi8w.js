import{d as N,j as e,g as Z,r as w,u as ee}from"./index-CScRpsKl.js";import{U as te}from"./UserProfileDropdown-Cd9gt73g.js";class se{async getPatientsWithAppointments(t){try{const n=((await N.get(`/v1/notifications/doctor/patients-with-appointments?doctorId=${t}`)).data||[]).map((r,l)=>(console.log(`Validating patient ${l}:`,r),!r.userId&&!r.patientId&&console.error(`Patient ${l} missing userId/patientId:`,r),!r.firstName&&!r.patientName&&console.error(`Patient ${l} missing firstName/patientName:`,r),r.lastName||console.error(`Patient ${l} missing lastName:`,r),!r.email&&!r.patientEmail&&console.error(`Patient ${l} missing email/patientEmail:`,r),{userId:r.userId||r.patientId,firstName:r.firstName||r.patientName||"Unknown",lastName:r.lastName||"Patient",email:r.email||r.patientEmail||"No email",lastAppointment:r.lastAppointment,appointmentStatus:r.appointmentStatus}));return console.log(`Successfully fetched ${n.length} patients with appointments`),{success:!0,data:n}}catch(s){return console.error("Error fetching patients with appointments:",s),{success:!1,error:s.response?.data?.message||s.message||"Failed to fetch patients",data:[]}}}async getNotificationTemplates(){try{return{success:!0,data:(await N.get("/v1/notifications/templates")).data||[]}}catch(t){return console.error("Error fetching notification templates:",t),{success:!1,error:t.response?.data?.message||t.message||"Failed to fetch templates",data:[]}}}async sendNotification(t,s){try{const{patientIds:a,templateId:n,customMessage:r,subject:l,priority:U,sendNow:E,scheduledDateTime:D,useCustomMessage:y}=t;if(!a||a.length===0)return{success:!1,error:"No patients selected"};const o=[];let d=0,u=0;for(const I of a)try{if(!I||isNaN(I)){console.error(`Invalid patientId: ${I}`),o.push({patientId:I,success:!1,error:"Invalid patient ID"}),u++;continue}if(!n||isNaN(n)){console.error(`Invalid templateId: ${n}`),o.push({patientId:I,success:!1,error:"Invalid template ID"}),u++;continue}const m={};y&&r&&(m.customMessage=r),l&&(m.subject=l),U&&(m.priority=U),!E&&D&&(m.scheduledDateTime=D);const T=await N.post(`/v1/notifications/doctor/send?doctorId=${s}&patientId=${I}&templateId=${n}`,m);o.push({patientId:I,success:!0,data:T.data}),d++}catch(m){console.error(`Error sending notification to patient ${I}:`,m),o.push({patientId:I,success:!1,error:m.response?.data?.message||m.message||"Failed to send notification"}),u++}const R=d>0,k=d===a.length?`All ${d} notifications sent successfully`:`${d} notifications sent, ${u} failed`;return{success:R,data:o,message:k,successCount:d,failureCount:u}}catch(a){return console.error("Error sending notifications:",a),{success:!1,error:a.response?.data?.message||a.message||"Failed to send notifications"}}}async getNotificationHistory(t,s=null){try{const a=s?`/v1/notifications/doctor/history/${s}?doctorId=${t}`:`/v1/notifications/doctor/history?doctorId=${t}`;return{success:!0,data:(await N.get(a)).data||[]}}catch(a){return console.error("Error fetching notification history:",a),{success:!1,error:a.response?.data?.message||a.message||"Failed to fetch notification history",data:[]}}}async unsendNotification(t,s){try{return{success:!0,data:(await N.post(`/v1/notifications/doctor/${t}/unsend?doctorId=${s}`)).data,message:"Notification unsent successfully"}}catch(a){return console.error("Error unsending notification:",a),{success:!1,error:a.response?.data?.message||a.message||"Failed to unsend notification"}}}async bulkOperation(t,s){try{return{success:!0,data:(await N.post(`/v1/notifications/bulk/${t}`,{notificationIds:s})).data,message:`Bulk ${t} completed successfully`}}catch(a){return console.error(`Error performing bulk ${t}:`,a),{success:!1,error:a.response?.data?.message||a.message||`Failed to perform bulk ${t}`}}}async createTemplate(t){try{return{success:!0,data:(await N.post("/v1/notifications/templates",t)).data,message:"Template created successfully"}}catch(s){return console.error("Error creating template:",s),{success:!1,error:s.response?.data?.message||s.message||"Failed to create template"}}}async updateTemplate(t,s){try{return{success:!0,data:(await N.put(`/v1/notifications/templates/${t}`,s)).data,message:"Template updated successfully"}}catch(a){return console.error("Error updating template:",a),{success:!1,error:a.response?.data?.message||a.message||"Failed to update template"}}}async deleteTemplate(t){try{return{success:!0,data:(await N.delete(`/v1/notifications/templates/${t}`)).data,message:"Template deleted successfully"}}catch(s){return console.error("Error deleting template:",s),{success:!1,error:s.response?.data?.message||s.message||"Failed to delete template"}}}async getUserNotifications(){try{console.log("DEBUG: notificationService.getUserNotifications called");const t=await N.get("/v1/notifications");return console.log("DEBUG: getUserNotifications response:",t),console.log("DEBUG: getUserNotifications response.data:",t.data),{success:!0,data:t.data||[]}}catch(t){return console.error("DEBUG: Error fetching user notifications:",t),console.error("DEBUG: Error response:",t.response),console.error("DEBUG: Error response data:",t.response?.data),{success:!1,error:t.response?.data?.message||t.message||"Failed to fetch notifications",data:[]}}}async markAsRead(t){try{console.log("DEBUG: notificationService.markAsRead called with notificationId=",t),console.log("DEBUG: Making API call to /v1/notifications/"+t+"/read");const s=await N.post(`/v1/notifications/${t}/read`);return console.log("DEBUG: API response received:",s),console.log("DEBUG: API response data:",s.data),console.log("DEBUG: API response status:",s.status),{success:!0,data:s.data,message:"Notification marked as read"}}catch(s){return console.error("DEBUG: Error marking notification as read:",s),console.error("DEBUG: Error response:",s.response),console.error("DEBUG: Error response data:",s.response?.data),console.error("DEBUG: Error response status:",s.response?.status),{success:!1,error:s.response?.data?.message||s.message||"Failed to mark notification as read"}}}async markAllAsRead(){try{return{success:!0,data:(await N.post("/v1/notifications/read-all")).data,message:"All notifications marked as read"}}catch(t){return console.error("Error marking all notifications as read:",t),{success:!1,error:t.response?.data?.message||t.message||"Failed to mark all notifications as read"}}}subscribeToNotifications(t){const a=async()=>{try{const r=await this.getUserNotifications();r.success&&t(r.data)}catch(r){console.error("Error polling notifications:",r)}};a();const n=setInterval(a,3e4);return()=>{clearInterval(n)}}async getNotificationAnalytics(){try{return{success:!0,data:(await N.get("/v1/notifications/analytics")).data||{totalSent:0,pendingNotifications:0,todaysSent:0,mostUsedTemplate:null}}}catch(t){return console.error("Error fetching notification analytics:",t),{success:!1,error:t.response?.data?.message||t.message||"Failed to fetch analytics",data:{totalSent:0,pendingNotifications:0,todaysSent:0,mostUsedTemplate:null}}}}async searchNotifications(t={}){try{const s=new URLSearchParams;return t.patientId&&s.append("patientId",t.patientId),t.status&&s.append("status",t.status),t.priority&&s.append("priority",t.priority),t.startDate&&s.append("startDate",t.startDate),t.endDate&&s.append("endDate",t.endDate),t.searchTerm&&s.append("search",t.searchTerm),{success:!0,data:(await N.get(`/v1/notifications/search?${s}`)).data||[]}}catch(s){return console.error("Error searching notifications:",s),{success:!1,error:s.response?.data?.message||s.message||"Failed to search notifications",data:[]}}}async getDeliveryStats(t="week"){try{return{success:!0,data:(await N.get(`/v1/notifications/stats?range=${t}`)).data||{sent:0,pending:0,failed:0,cancelled:0}}}catch(s){return console.error("Error fetching delivery stats:",s),{success:!1,error:s.response?.data?.message||s.message||"Failed to fetch delivery stats",data:{sent:0,pending:0,failed:0,cancelled:0}}}}}const B=new se,ae=({count:i,onClick:t})=>e.jsxs("div",{className:"notification-icon",onClick:t,children:[e.jsx("svg",{viewBox:"0 0 24 24",fill:"currentColor",width:"24",height:"24",children:e.jsx("path",{d:"M12 22c1.1 0 2-.9 2-2h-4c0 1.1.9 2 2 2zm6-6v-5c0-3.07-1.63-5.64-4.5-6.32V4c0-.83-.67-1.5-1.5-1.5s-1.5.67-1.5 1.5v.68C7.63 5.36 6 7.92 6 11v5l-2 2v1h16v-1l-2-2z"})}),i>0&&e.jsx("span",{className:"badge",children:i})]});var C={exports:{}},F,L;function re(){if(L)return F;L=1;var i="SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED";return F=i,F}var O,H;function oe(){if(H)return O;H=1;var i=re();function t(){}function s(){}return s.resetWarningCache=t,O=function(){function a(l,U,E,D,y,o){if(o!==i){var d=new Error("Calling PropTypes validators directly is not supported by the `prop-types` package. Use PropTypes.checkPropTypes() to call them. Read more at http://fb.me/use-check-prop-types");throw d.name="Invariant Violation",d}}a.isRequired=a;function n(){return a}var r={array:a,bigint:a,bool:a,func:a,number:a,object:a,string:a,symbol:a,any:a,arrayOf:n,element:a,elementType:a,instanceOf:n,node:a,objectOf:n,oneOf:n,oneOfType:n,shape:n,exact:n,checkPropTypes:s,resetWarningCache:t};return r.PropTypes=r,r},O}var W;function ie(){return W||(W=1,C.exports=oe()()),C.exports}var ne=ie();const f=Z(ne),_=({notification:i,onMarkAsRead:t,enhanced:s=!1})=>{const{notificationId:a,title:n,message:r,isRead:l,createdAt:U,priority:E,type:D}=i,[y,o]=w.useState(!1),d=h=>{const j=Math.floor((new Date-new Date(h))/1e3);let c=j/31536e3;return c>1?Math.floor(c)+" year"+(Math.floor(c)!==1?"s":"")+" ago":(c=j/2592e3,c>1?Math.floor(c)+" month"+(Math.floor(c)!==1?"s":"")+" ago":(c=j/86400,c>1?Math.floor(c)+" day"+(Math.floor(c)!==1?"s":"")+" ago":(c=j/3600,c>1?Math.floor(c)+" hour"+(Math.floor(c)!==1?"s":"")+" ago":(c=j/60,c>1?Math.floor(c)+" minute"+(Math.floor(c)!==1?"s":"")+" ago":"Just now"))))},u=h=>({APPOINTMENT_REMINDER:"📅",MEDICATION_REMINDER:"💊",FOLLOW_UP:"🔄",GENERAL:"📢",EMERGENCY:"🚨",EDUCATIONAL:"📚",SYSTEM:"⚙️"})[h]||"📨",R=h=>({URGENT:{class:"urgent",icon:"🔴",text:"Urgent"},HIGH:{class:"high",icon:"🟡",text:"High"},MEDIUM:{class:"medium",icon:"🔵",text:"Medium"},LOW:{class:"low",icon:"⚪",text:"Low"}})[h]||{class:"medium",icon:"🔵",text:"Medium"},k=h=>{h.stopPropagation(),!l&&t&&(console.log("Marking notification as read:",a),t(a))},I=h=>{h.stopPropagation(),o(!y)},m=R(E),T=u(D),G=r&&r.length>120,$=G&&!y?`${r.substring(0,120)}...`:r;return e.jsxs("div",{className:`notification-item ${l?"read":"unread"} ${s?"enhanced":""} priority-${m.class}`,onClick:k,role:"button",tabIndex:0,onKeyDown:h=>{(h.key==="Enter"||h.key===" ")&&(h.preventDefault(),k(h))},"aria-label":`Notification: ${n}. ${l?"Read":"Unread"}. Priority: ${m.text}`,children:[!l&&e.jsx("div",{className:"unread-indicator","aria-hidden":"true"}),e.jsxs("div",{className:"notification-content",children:[e.jsxs("div",{className:"item-header",children:[e.jsxs("div",{className:"header-left",children:[s&&e.jsxs("div",{className:"notification-meta",children:[e.jsx("span",{className:"type-icon",title:D,"aria-label":`Type: ${D}`,children:T}),e.jsx("span",{className:`priority-indicator priority-${m.class}`,title:`Priority: ${m.text}`,"aria-label":`Priority: ${m.text}`,children:m.icon})]}),e.jsx("span",{className:"item-title",children:n})]}),e.jsx("div",{className:"header-right",children:e.jsx("span",{className:"item-time",title:new Date(U).toLocaleString(),children:d(U)})})]}),e.jsxs("div",{className:"item-body",children:[e.jsx("div",{className:"message-content",children:$}),G&&e.jsx("button",{className:"expand-toggle",onClick:I,"aria-label":y?"Show less":"Show more","aria-expanded":y,children:y?"Show less":"Show more"})]}),s&&e.jsx("div",{className:"notification-actions",children:e.jsxs("button",{className:"action-btn details-btn",onClick:h=>{h.stopPropagation();const j=`
Notification Details:
━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

📋 ID: ${a}
📝 Title: ${n}
📄 Message: ${r}
📅 Created: ${new Date(U).toLocaleString()}
🔖 Type: ${D||"GENERAL"}
⚡ Priority: ${E||"MEDIUM"}
👁️ Status: ${l?"Read":"Unread"}
${i.relatedEntityType?`🔗 Related: ${i.relatedEntityType}`:""}
${i.relatedEntityId?`🆔 Entity ID: ${i.relatedEntityId}`:""}

━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
                `;alert(j),console.log("Notification Details:",{notificationId:a,title:n,message:r,createdAt:U,type:D,priority:E,isRead:l,relatedEntityType:i.relatedEntityType,relatedEntityId:i.relatedEntityId})},title:"View notification details","aria-label":"View detailed information about this notification",children:[e.jsx("span",{className:"action-icon",children:"👁️"}),e.jsx("span",{className:"action-text",children:"Details"})]})})]}),s&&E&&(E==="HIGH"||E==="URGENT")&&e.jsx("div",{className:`priority-border priority-${m.class}`,"aria-hidden":"true"})]})};_.propTypes={notification:f.shape({notificationId:f.number.isRequired,title:f.string.isRequired,message:f.string.isRequired,isRead:f.bool.isRequired,createdAt:f.string.isRequired,priority:f.string,type:f.string}).isRequired,onMarkAsRead:f.func.isRequired,enhanced:f.bool};const V=({notifications:i,onMarkAsRead:t,onClose:s})=>{const[a,n]=w.useState("all"),[r,l]=w.useState("newest"),E=(()=>{let o=i;switch(a){case"unread":o=i.filter(u=>!u.isRead);break;case"high-priority":o=i.filter(u=>u.priority==="HIGH"||u.priority==="URGENT");break;case"today":const d=new Date().toDateString();o=i.filter(u=>new Date(u.createdAt).toDateString()===d);break;default:o=i}return o.sort((d,u)=>{switch(r){case"oldest":return new Date(d.createdAt)-new Date(u.createdAt);case"priority":const R={URGENT:4,HIGH:3,MEDIUM:2,LOW:1};return(R[u.priority]||2)-(R[d.priority]||2);case"newest":default:return new Date(u.createdAt)-new Date(d.createdAt)}})})(),D=i.filter(o=>!o.isRead).length,y=i.filter(o=>(o.priority==="HIGH"||o.priority==="URGENT")&&!o.isRead).length;return e.jsxs("div",{className:"notification-panel",children:[e.jsxs("div",{className:"panel-header",children:[e.jsxs("div",{className:"header-content",children:[e.jsx("h3",{children:"Notifications"}),e.jsxs("div",{className:"notification-stats",children:[D>0&&e.jsxs("span",{className:"unread-badge",children:[D," unread"]}),y>0&&e.jsxs("span",{className:"priority-badge",children:[y," urgent"]})]})]}),e.jsx("div",{className:"panel-actions",children:s&&e.jsx("button",{className:"close-panel-btn",onClick:s,title:"Close panel","aria-label":"Close notification panel",children:"×"})})]}),e.jsx("div",{className:"panel-controls",children:e.jsxs("div",{className:"filter-controls",children:[e.jsxs("select",{value:a,onChange:o=>n(o.target.value),className:"filter-select","aria-label":"Filter notifications",children:[e.jsxs("option",{value:"all",children:["All (",i.length,")"]}),e.jsxs("option",{value:"unread",children:["Unread (",D,")"]}),e.jsxs("option",{value:"high-priority",children:["High Priority (",y,")"]}),e.jsx("option",{value:"today",children:"Today"})]}),e.jsxs("select",{value:r,onChange:o=>l(o.target.value),className:"sort-select","aria-label":"Sort notifications",children:[e.jsx("option",{value:"newest",children:"Newest First"}),e.jsx("option",{value:"oldest",children:"Oldest First"}),e.jsx("option",{value:"priority",children:"By Priority"})]})]})}),e.jsx("div",{className:"panel-body",children:E.length>0?e.jsx("div",{className:"notifications-list",children:E.map(o=>e.jsx(_,{notification:o,onMarkAsRead:t,enhanced:!0},o.notificationId))}):e.jsxs("div",{className:"empty-state",children:[e.jsx("div",{className:"empty-icon",children:a==="unread"?"✅":"📨"}),e.jsx("p",{className:"empty-message",children:a==="unread"?"All caught up! No unread notifications.":a==="high-priority"?"No high priority notifications.":a==="today"?"No notifications today.":"No notifications found."})]})}),i.length>0&&e.jsx("div",{className:"panel-footer",children:e.jsx("div",{className:"footer-stats",children:e.jsxs("span",{className:"stats-text",children:["Showing ",E.length," of ",i.length]})})})]})};V.propTypes={notifications:f.arrayOf(f.shape({notificationId:f.number.isRequired,title:f.string.isRequired,message:f.string.isRequired,isRead:f.bool.isRequired,createdAt:f.string.isRequired,priority:f.string,type:f.string})).isRequired,onMarkAsRead:f.func.isRequired,onClose:f.func};const pe=({title:i,subtitle:t})=>{const{user:s}=ee(),[a,n]=w.useState(new Date),[r,l]=w.useState(!1),[U,E]=w.useState(!1),[D,y]=w.useState(null),[o,d]=w.useState([]),[u,R]=w.useState(0),[k,I]=w.useState(!1),[m,T]=w.useState(new Set),[G,$]=w.useState(0),[h,j]=w.useState(!1),c=w.useCallback(()=>s&&(s.role==="Patient"||s?.role?.roleName==="Patient"),[s]);w.useEffect(()=>{const p=setInterval(()=>{n(new Date)},1e3),v=async()=>{if(s){console.log("DEBUG: DashboardHeader.fetchNotifications called for user:",s);const g=Date.now()-G,S=g<5e3;if(h||S){console.log("DEBUG: Skipping polling - disabled:",h,"within delay:",S,"time since action:",g);return}try{const x=await B.getUserNotifications();if(console.log("DEBUG: fetchNotifications result:",x),x.success){console.log("DEBUG: Server notifications:",x.data),console.log("DEBUG: Recently read notifications:",Array.from(m));const A=x.data.map(P=>m.has(P.notificationId)?(console.log("DEBUG: Preserving read status for notification:",P.notificationId),{...P,isRead:!0,status:"READ"}):P);console.log("DEBUG: Merged notifications:",A),d(A),R(A.filter(P=>!P.isRead).length);const ce=Date.now()-3*60*1e3;T(P=>{const q=new Set;for(const X of P)q.add(X);return q})}else console.error("DEBUG: Failed to fetch notifications:",x.error)}catch(x){console.error("DEBUG: Exception in fetchNotifications:",x)}}};(async()=>{if(c())try{const S=(await N.get("/patients/privacy-settings")).data?.isPrivate??!1;l(S),localStorage.setItem("privateMode",JSON.stringify(S))}catch(g){console.error("Failed to load privacy settings:",g),y("Failed to load privacy settings");const S=localStorage.getItem("privateMode");S&&l(JSON.parse(S))}})(),v();const M=setInterval(v,6e4);return()=>{clearInterval(p),clearInterval(M)}},[s,c,m,G,h]);const z=async()=>{if(!(!c()||U)){E(!0),y(null);try{const p=!r;l(p);const v=await N.post("/patients/privacy-settings",{isPrivate:p});if(!v.data?.success)throw new Error(v.data?.message||"Failed to update privacy settings");localStorage.setItem("privateMode",JSON.stringify(p))}catch(p){console.error("Failed to update privacy settings:",p),y("Failed to update privacy mode");const v=localStorage.getItem("privateMode");v&&l(JSON.parse(v))}finally{E(!1)}}},J=async p=>{console.log("DEBUG: DashboardHeader.handleMarkAsRead called with notificationId=",p);const v=Date.now();$(v),j(!0);const b=[...o],M=u;console.log("DEBUG: Original notifications count:",b.length),console.log("DEBUG: Original unread count:",M),console.log("DEBUG: Notification to mark as read:",b.find(g=>g.notificationId===p)),d(o.map(g=>g.notificationId===p?{...g,isRead:!0,status:"READ"}:g)),R(Math.max(0,u-1)),T(g=>new Set([...g,p])),console.log("DEBUG: UI updated optimistically and notification added to recently read set");try{const g=await B.markAsRead(p);console.log("DEBUG: API call result:",g),g.success?(console.log("DEBUG: API call succeeded, keeping UI changes"),setTimeout(()=>{T(S=>{const x=new Set(S);return x.delete(p),x})},3*60*1e3)):(console.error("DEBUG: API call failed:",g.error),d(b),R(M),T(S=>{const x=new Set(S);return x.delete(p),x}),console.log("DEBUG: UI reverted due to API failure"))}catch(g){console.error("DEBUG: Exception in handleMarkAsRead:",g),d(b),R(M),T(S=>{const x=new Set(S);return x.delete(p),x}),console.log("DEBUG: UI reverted due to exception")}finally{setTimeout(()=>{j(!1),console.log("DEBUG: Polling re-enabled after user action")},3e3)}},Y=()=>{const p={weekday:"short",year:"numeric",month:"short",day:"numeric"},v={hour:"2-digit",minute:"2-digit",hour12:!1},b=a.toLocaleDateString("en-GB",p),M=a.toLocaleTimeString("en-GB",v);return{date:b,time:M}},{date:K,time:Q}=Y();return e.jsx("div",{className:"dashboard-header",children:e.jsxs("div",{className:"dashboard-header-content",children:[e.jsxs("div",{className:"dashboard-header-info",children:[e.jsxs("span",{className:"nav-logo",tabIndex:0,onClick:()=>window.location.pathname="/",onKeyDown:p=>{(p.key==="Enter"||p.key===" ")&&(window.location.pathname="/")},children:[e.jsx("span",{className:"logo-icon",children:e.jsx("svg",{viewBox:"0 0 24 24",fill:"currentColor",width:"28",height:"28",children:e.jsx("path",{d:"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm-1 17.93c-3.94-.49-7-3.85-7-7.93 0-.62.08-1.21.21-1.79L9 15v1c0 1.1.9 2 2 2v1.93zm6.9-2.54c-.26-.81-1-1.39-1.9-1.39h-1v-3c0-.55-.45-1-1-1H8v-2h2c.55 0 1-.45 1-1V7h2c1.1 0 2-.9 2-2v-.41c2.93 1.19 5 4.06 5 7.41 0 2.08-.8 3.97-2.1 5.39z"})})}),e.jsx("span",{className:"logo-text",children:"HIV Medical System"})]}),e.jsxs("div",{className:"dashboard-header-titles",children:[e.jsx("h1",{className:"dashboard-title",children:i}),t&&e.jsx("p",{className:"dashboard-subtitle",children:t})]})]}),e.jsxs("div",{className:"dashboard-header-actions",children:[c()&&e.jsxs("button",{className:`privacy-toggle ${r?"active":""} ${U?"loading":""}`,onClick:z,disabled:U,title:D||`Turn ${r?"off":"on"} privacy mode`,role:"switch","aria-checked":r,type:"button",children:[e.jsx("span",{className:"icon",children:r?e.jsxs("svg",{viewBox:"0 0 24 24",fill:"none",stroke:"currentColor",strokeWidth:"2",children:[e.jsx("rect",{x:"3",y:"11",width:"18",height:"11",rx:"2",ry:"2"}),e.jsx("path",{d:"M7 11V7a5 5 0 0110 0v4"})]}):e.jsxs("svg",{viewBox:"0 0 24 24",fill:"none",stroke:"currentColor",strokeWidth:"2",children:[e.jsx("rect",{x:"3",y:"11",width:"18",height:"11",rx:"2",ry:"2"}),e.jsx("path",{d:"M7 11V7a5 5 0 0110 0v4"}),e.jsx("line",{x1:"12",y1:"15",x2:"12",y2:"18"})]})}),r?"Anonymous":"Public"]}),e.jsxs("div",{className:"system-datetime",children:[e.jsx("div",{className:"date",children:K}),e.jsx("div",{className:"time",children:Q})]}),e.jsx(ae,{count:u,onClick:async()=>{console.log("DEBUG: Notification button clicked - marking all as read");const p=Date.now();$(p),j(!0);try{const v=await B.markAllAsRead();v.success?(console.log("DEBUG: Successfully marked all notifications as read"),d(o.map(b=>({...b,isRead:!0,status:"READ"}))),R(0),T(new Set)):(console.error("DEBUG: Failed to mark all notifications as read:",v.error),y("Failed to mark notifications as read"))}catch(v){console.error("DEBUG: Exception marking all notifications as read:",v),y("Failed to mark notifications as read")}finally{setTimeout(()=>{j(!1),console.log("DEBUG: Polling re-enabled after notification icon click")},3e3)}I(!k)}}),k&&e.jsx(V,{notifications:o,onMarkAsRead:J,onClose:()=>I(!1)}),e.jsx(te,{})]})]})})};export{pe as D,f as P,B as n};
